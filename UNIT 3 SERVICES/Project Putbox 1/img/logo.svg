<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:og="http://ogp.me/ns#" xmlns:fb="https://www.facebook.com/2008/fbml" lang="en" dir="ltr">
  <head>
    <title>Outbox 1 | Codecademy</title>
    <link href="https://cdn-production.codecademy.com/favicon.ico" rel="shortcut icon" type="image/x-icon" />
    
    <link href="/blog.rss" rel="alternate" title="Codecademy Blog" type="application/rss+xml" />

    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta content="authenticity_token" name="csrf-param" />
<meta content="bIboQ2hQ5SFwOOzcRTbzsVzReyqkOsBMvtNte7c+ySI=" name="csrf-token" />
    <meta name="description" content="Codecademy is the easiest way to learn how to code. It's interactive, fun, and you can do it with your friends."/>
    <meta name="keywords" content="codecademy,coding,code,programming"/>

    <meta property="fb:app_id" content="212500508799908"/>
<meta property="og:url" content="https://www.codecademy.com/en/courses/learn-angularjs/projects/angularjs_outbox-1"/>
<meta property="og:site_name" content="Codecademy"/>
<meta property="og:type" content="article"/>
<meta property="og:title" content="Outbox 1"/>
<meta property="og:description" content="Codecademy is the easiest way to learn how to code. It&#x27;s interactive, fun, and you can do it with your friends."/>

    
    <meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no' />

    


    

    <link href="https://cdn-production.codecademy.com/assets/rebrand/core-d74a22b9428e3aaaa6d8a8b1a8d26491.css" media="screen" rel="stylesheet" type="text/css" />
    <link href="https://cdn-production.codecademy.com/assets/rebrand/controllers/practice/projects/show-ceac11139a8388b530c35e5b6e8141cd.css" media="screen" rel="stylesheet" type="text/css" />
        
    <link href="https://cdn-production.codecademy.com/assets/webpack/vendor.bundle-86f4eb92a96fd7f1d123b8fe69847239.css" media="screen" rel="stylesheet" type="text/css" />
    <link href="https://cdn-production.codecademy.com/assets/webpack/platform.bundle-d6882177c66fa6f519fdfbfcf8ac6a9c.css" media="screen" rel="stylesheet" type="text/css" />


    <script type="text/javascript">
//<![CDATA[
var CCDATA = CCDATA || {};
//]]>
</script>

    
<script id="CCDATA" type="text/javascript">
//<![CDATA[

  var CCDATA = CCDATA || {};  CCDATA['env'] = "production"; CCDATA['request_host'] = "www.codecademy.com"; CCDATA['request_path'] = "/en/courses/learn-angularjs/projects/angularjs_outbox-1"; CCDATA['asset_host'] = "cdn-production.codecademy.com"; CCDATA['assets_compiled'] = true; CCDATA['pollForNotifications'] = false; CCDATA['locale'] = "en"; CCDATA['API_HOST'] = "/api"; CCDATA['authenticity_token'] = "bIboQ2hQ5SFwOOzcRTbzsVzReyqkOsBMvtNte7c+ySI="; CCDATA['available_locales'] = "en|en-GB|ja|ky-KG|en-US|ru|et-EE|de|es|ar|pt|es-AR|fr|fr-FR|pt-BR|fa|zh|ko"; CCDATA['clepsydra'] = {"host":"https://clepsydra.codecademy.com","tags":null}; CCDATA['current_user'] = {"_id":"538a9f95282ae37171001cd4","created_at":"2014-05-31T23:35:49-04:00","url":"http://www.codecademy.com/users/leoachear","username":"leoachear","handle":"Leonardo Javier Achear","email":"leoachear@gmail.com","name":"Leonardo Javier Achear","profile_image_url":"https://www.gravatar.com/avatar/1f54a760bf0748f6b0de3806087b8a23?s=140\u0026d=retro","points":198,"total_points":198,"roles":["completed_skill_make-an-interactive-website","pro"],"ui_tour_elements":{"discovery-fullscreen":true,"course-navigator":true,"discovery-checklist":true},"deleted":false,"authentication_token":"FsXaJy3iJktx7KFvEHww","pro":true,"pro_ads":false,"experiments":{"exp_hints_2015_12_18":"control"}};
  CCDATA.secureSandboxIndexPath = 'https://cdn-production.codecademy.com/assets/secure/index-a14d43850ccac8171ef93b331e0e41f9.html';

//]]>
</script>

      <script src="https://cdn-production.codecademy.com/assets/webpack/head.bundle-82b60beaf3e56c804dcd1bfaabcb4d2a.js" type="text/javascript"></script>


    
  </head>

  <body browser="windows">

    

    <main class="projects show ">
      
      


<div data-react-class="Platform" data-react-props="{&quot;type&quot;:&quot;projects&quot;,&quot;unit&quot;:{&quot;node_type&quot;:&quot;unit&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;services&quot;,&quot;title&quot;:&quot;Services&quot;,&quot;description&quot;:&quot;Use services to communicate with a server.&quot;,&quot;projects&quot;:{&quot;angularjs_outbox-1&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs_outbox-1&quot;,&quot;title&quot;:&quot;Outbox 1&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll build an email app.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/outbox-1.jpg&quot;,&quot;preview_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/4/outbox-1/index.html&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/angularjsoutbox-1&quot;,&quot;objective&quot;:&quot;Outbox is creating an AngularJS app for their email app. \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/outbox-1/index.html\&quot;\u003EHere&#x27;s what it looks like\u003C/a\u003E. The app displays a list of messages.&quot;,&quot;meta&quot;:{&quot;author&quot;:{&quot;fullname&quot;:&quot;Lalith Polepeddi&quot;,&quot;username&quot;:&quot;lpolepeddi&quot;}},&quot;self_assessments&quot;:[{&quot;tasks&quot;:[{&quot;key&quot;:&quot;angularjs_outbox-1_0_0&quot;,&quot;text&quot;:&quot;Create a new module named \u003Ccode\u003EOutboxApp\u003C/code\u003E, and then attach it to the \u003Ccode\u003E\u0026lt;body\u0026gt;\u003C/code\u003E element in the view.&quot;},{&quot;key&quot;:&quot;angularjs_outbox-1_0_1&quot;,&quot;text&quot;:&quot;Visit \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/emails-api/emails.json\&quot; target=\&quot;_blank\&quot;\u003Eemails.json\u003C/a\u003E. It&#x27;s a JSON object containing an array of emails. Let&#x27;s fetch this data and display it in the app.&quot;},{&quot;key&quot;:&quot;angularjs_outbox-1_0_2&quot;,&quot;text&quot;:&quot;Create a service named \u003Ccode\u003Eemails\u003C/code\u003E for getting this email data:\n\u003Col type=\&quot;a\&quot;\u003E\n\u003Cli\u003EMake a new folder named \u003Cstrong\u003Ejs/services\u003C/strong\u003E. In this folder, create a new file named \u003Cstrong\u003Ejs/services/emails.js\u003C/strong\u003E.\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003Eapp.factory\u003C/code\u003E to create a new service named \u003Ccode\u003Eemails\u003C/code\u003E.\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003E$http\u003C/code\u003E to get the email data from \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/emails-api/emails.json\&quot; target=\&quot;_blank\&quot;\u003Eemails.json\u003C/a\u003E.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_outbox-1_0_3&quot;,&quot;text&quot;:&quot;Include this new JavaScript file in the view as a new \u003Ccode\u003Escript\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_outbox-1_0_4&quot;,&quot;text&quot;:&quot;In the controller, use the \u003Ccode\u003Eemails\u003C/code\u003E service to fetch data from the server:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EFirst add \u003Ccode\u003Eemails\u003C/code\u003E into \u003Ccode\u003EHomeController\u003C/code\u003E as a dependency so that it&#x27;s available to use.\u003C/li\u003E\n            \u003Cli\u003EThen use \u003Ccode\u003Eemails\u003C/code\u003E within the controller to asynchronously fetch the email data from the server and store it into \u003Ccode\u003E$scope.emails\u003C/code\u003E.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_outbox-1_0_5&quot;,&quot;text&quot;:&quot;Attach the controller to the \u003Ccode\u003E\u0026lt;div class=\&quot;main\&quot;\u0026gt;\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_outbox-1_0_6&quot;,&quot;text&quot;:&quot;In the view, finish the code to display an email. Looking at the format of the data in \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/emails-api/emails.json\&quot; target=\&quot;_blank\&quot;\u003Eemails.json\u003C/a\u003E, display each email&#x27;s \u003Ccode\u003Efrom\u003C/code\u003E, \u003Ccode\u003Esubject\u003C/code\u003E, and \u003Ccode\u003Edatetime\u003C/code\u003E in their corresponding \u003Ccode\u003E\u0026lt;span\u0026gt;\u003C/code\u003E elements.&quot;},{&quot;key&quot;:&quot;angularjs_outbox-1_0_7&quot;,&quot;text&quot;:&quot;View the result by visiting http://localhost:8000 in the browser.&quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs_outbox-1&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/services/projects/angularjs_outbox-1.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_outbox-1&quot;,&quot;unit_slug&quot;:&quot;services&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false},&quot;angularjs_top-10&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs_top-10&quot;,&quot;title&quot;:&quot;Top 10&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll fetch movie data from the server and display it in a custom directive.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/top-10.jpg&quot;,&quot;preview_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/4/top-10/index.html&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/angularjstop-10&quot;,&quot;objective&quot;:&quot;Top 10 is creating an AngularJS app to chart popular TV shows. \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/top-10/index.html\&quot;\u003EHere&#x27;s what it looks like\u003C/a\u003E.\n\n&quot;,&quot;meta&quot;:{&quot;author&quot;:{&quot;fullname&quot;:&quot;Lalith Polepeddi&quot;,&quot;username&quot;:&quot;lpolepeddi&quot;}},&quot;self_assessments&quot;:[{&quot;tasks&quot;:[{&quot;key&quot;:&quot;angularjs_top-10_0_0&quot;,&quot;text&quot;:&quot;Create a new module named \u003Ccode\u003ETop10App\u003C/code\u003E, and then attach it to the \u003Ccode\u003E\u0026lt;body\u0026gt;\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_top-10_0_1&quot;,&quot;text&quot;:&quot;Visit \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/shows-api/shows.json\&quot; target=\&quot;_blank\&quot;\u003Eshows.json\u003C/a\u003E. It&#x27;s a JSON object containing an array of TV shows. Let&#x27;s fetch this data and display it in the app.&quot;},{&quot;key&quot;:&quot;angularjs_top-10_0_2&quot;,&quot;text&quot;:&quot;Create a service named \u003Ccode\u003Eshows\u003C/code\u003E for getting this data. In a file named \u003Cstrong\u003Ejs/services/shows.js\u003C/strong\u003E, create a new service named \u003Ccode\u003Eshows\u003C/code\u003E that gets data from the \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/shows-api/shows.json\&quot; target=\&quot;_blank\&quot;\u003Eshows API\u003C/a\u003E. Include this new JavaScript file in the view as a new \u003Ccode\u003Escript\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_top-10_0_3&quot;,&quot;text&quot;:&quot;In the controller, use the \u003Ccode\u003Eshows\u003C/code\u003E service to load data from the server into the \u003Ccode\u003E$scope.shows\u003C/code\u003E property. Then attach the controller to the \u003Ccode\u003E\u0026lt;div class=\&quot;main\&quot;\u0026gt;\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_top-10_0_4&quot;,&quot;text&quot;:&quot;Create a directive named \u003Ccode\u003EtvShow\u003C/code\u003E:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EMake a new file \u003Cstrong\u003Ejs/directives/tvShow.js\u003C/strong\u003E. In it, create the new directive named \u003Ccode\u003EtvShow\u003C/code\u003E.\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003Escope\u003C/code\u003E to specify that we&#x27;ll pass information into this directive through an attribute named \u003Ccode\u003Einfo\u003C/code\u003E.\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003EtemplateUrl\u003C/code\u003E to tell this directive to use the \u003Cstrong\u003Ejs/directives/tvShow.html\u003C/strong\u003E file.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_top-10_0_5&quot;,&quot;text&quot;:&quot;Include this new JavaScript file in the view as a \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_top-10_0_6&quot;,&quot;text&quot;:&quot;In the directive&#x27;s template \u003Cstrong\u003Ejs/directives/tvShow.html\u003C/strong\u003E, display each TV show&#x27;s details. Looking at the format of the data in the \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/shows-api/shows.json\&quot; target=\&quot;_blank\&quot;\u003Eshows API\u003C/a\u003E, display each show&#x27;s \u003Ccode\u003Eseries_img\u003C/code\u003E, \u003Ccode\u003Eseries\u003C/code\u003E, \u003Ccode\u003Egenre\u003C/code\u003E, \u003Ccode\u003Erun_start\u003C/code\u003E, and \u003Ccode\u003Edescription\u003C/code\u003E.&quot;},{&quot;key&quot;:&quot;angularjs_top-10_0_7&quot;,&quot;text&quot;:&quot;Finish the view display each item in the \u003Ccode\u003Eshows\u003C/code\u003E array. Under the \u003Ccode\u003E.rank\u003C/code\u003E div, use the \u003Ccode\u003E\u0026lt;tv-show\u0026gt;\u003C/code\u003E directive to display the details of each show. Pass in each show into the \u003Ccode\u003E\u0026lt;tv-show\u0026gt;\u003C/code\u003E directive&#x27;s \u003Ccode\u003Einfo\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_top-10_0_8&quot;,&quot;text&quot;:&quot;View the result by visiting http://localhost:8000 in the browser.&quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs_top-10&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/services/projects/angularjs_top-10.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_top-10&quot;,&quot;unit_slug&quot;:&quot;services&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false}},&quot;lessons&quot;:{&quot;services&quot;:{&quot;node_type&quot;:&quot;lesson&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;services&quot;,&quot;title&quot;:&quot;Services&quot;,&quot;description&quot;:&quot;Use services to communicate with a server.&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/services&quot;,&quot;exercises&quot;:{&quot;services-i&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;services-i&quot;,&quot;title&quot;:&quot;Services I&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-services&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;js/services/forecast.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;So far we&#x27;ve made AngularJS apps by adding data to a controller, and then displaying it in a view.\n\nBut what happens when the data contains hundreds of items, or if it&#x27;s constantly changing like weather or financial data? Hardcoding data into a controller won&#x27;t work anymore.\n\nA better solution is to read the live data from a server. We can do this by creating a _service_.\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;In the browser frame on the right, visit https://s3.amazonaws.com/codecademy-content/courses/ltp4/forecast-api/forecast.json. It\\&#x27;s a JSON object containing a `city_name` and an array `days` containing weather data for the next five days.&#x27;, function (Tests, callback)\n    {\n    Tests.componentTest(function (Components) {\n      if (Components.WebBrowser.loadedURL(&#x27;https://s3.amazonaws.com/codecademy-content/courses/ltp4/forecast-api/forecast.json&#x27;)) {\n        return { pass: true };\n      }\n      return {\n        pass: false,\n        errors: {\n          friendly: &#x27;Did you visit \\&#x27;https://s3.amazonaws.com/codecademy-content/courses/ltp4/forecast-api/forecast.json\\&#x27; in the browser?&#x27;,\n          component: &#x27;WebBrowser&#x27;\n        }\n      };\n    }, callback);\n  });\ncheckpoint(&#x27;Create a service named `forecast` that fetches the weather data from the server. In the new file **js/services/forecast.js**. Type in this code exactly as you see here: \\n```javascript \\napp.factory(\\&#x27;forecast\\&#x27;, [\\&#x27;$http\\&#x27;, function($http) { \\n  return $http.get(\\&#x27;https://s3.amazonaws.com/codecademy-content/courses/ltp4/forecast-api/forecast.json\\&#x27;) \\n            .success(function(data) { \\n              return data; \\n            }) \\n            .error(function(err) { \\n              return err; \\n            }); \\n}]); \\n```&#x27;, function (Tests, callback)\n    {\n    Tests.karmaTest(&#x27;karma2.js&#x27;, callback);\n  });\ncheckpoint(&#x27;Include **js/services/forecast.js** in **index.html** in line 62 as a new `\u003Cscript\u003E` element.&#x27;, function (Tests, callback)\n    {\n    Tests.componentTest(function (Components) {\n      if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;\u003Cscript src=[\\&#x27;\&quot;]js/services/forecast.js[\\&#x27;\&quot;]\u003E&#x27;)) {\n        return { pass: true };\n      }\n      return {\n        pass: false,\n        errors: {\n          friendly: &#x27;Did you include js/services/forecast.js as a new script element in index.html?&#x27;,\n          component: &#x27;PersistentCodeEditor&#x27;\n        }\n      };\n    }, callback);\n  });\ncheckpoint(&#x27;In the controller, modify `MainController` by passing in the `forecast` service, like this: \\n```javascript \\napp.controller(\\&#x27;MainController\\&#x27;, [\\&#x27;$scope\\&#x27;, \\&#x27;forecast\\&#x27;, function($scope, forecast) { \\n  // ... \\n}]); \\n```&#x27;, function (Tests, callback)\n    {\n    Tests.componentTest(function (Components) {\n      if (Components.CodeEditor.codeContains(&#x27;js/controllers/MainController.js&#x27;, &#x27;app.controller\\\\([\\&#x27;\&quot;]MainController[\\&#x27;\&quot;],\\\\s*\\\\[[\\&#x27;\&quot;]\\\\$scope[\\&#x27;\&quot;], [\\&#x27;\&quot;]forecast[\\&#x27;\&quot;], function\\\\(\\\\$scope, forecast\\\\)&#x27;)) {\n        return { pass: true };\n      }\n      return {\n        pass: false,\n        errors: {\n          friendly: &#x27;Did you pass in the forecast service into MainController?&#x27;,\n          component: &#x27;PersistentCodeEditor&#x27;\n        }\n      };\n    }, callback);\n  });\ncheckpoint(&#x27;Inside `MainController`, use the `forecast` service to save the weather data into `$scope.fiveDay`, like this: \\n```javascript \\n  forecast.success(function(data) { \\n    $scope.fiveDay = data; \\n  }); \\n```&#x27;, function (Tests, callback)\n    {\n    Tests.componentTest(function (Components) {\n      if (Components.CodeEditor.codeContains(&#x27;js/controllers/MainController.js&#x27;, &#x27;forecast.success\\\\(function\\\\(data\\\\)\\\\s*{&#x27;)) {\n        return { pass: true };\n      }\n      return {\n        pass: false,\n        errors: {\n          friendly: &#x27;Remember to save the weather data into $scope.fiveDay.&#x27;,\n          component: &#x27;PersistentCodeEditor&#x27;\n        }\n      };\n    }, callback);\n  });&quot;,&quot;files&quot;:{&quot;karma2.js&quot;:&quot;describe(&#x27;Did you create a new service named forecast?&#x27;, function() {\n  var ctrl, scope, service;\n\n  beforeEach(module(&#x27;ForecastApp&#x27;));\n\n  it(&#x27;Did you create a new service named forecast?&#x27;, function() {\n    inject(function($controller, $rootScope, forecast) {\n      expect(forecast).toBeDefined();\n    });\n  });\n});\n&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/services/lessons/services/exercises/services-i.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/services/exercises/services-i&quot;},&quot;services-ii&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;services-ii&quot;,&quot;title&quot;:&quot;Services II&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-services&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;js/services/forecast.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;Well done! The `city_name` now shows up in the view. How does it work?\n1. First in **js/services/forecast.js**, we made a new _service_. We used `app.factory` to create a new service named `forecast`\n2. The `forecast` service needs to use AngularJS&#x27;s built-in `$http` to fetch JSON from the server. Therefore, we add `$http` to the `forecast` service as a dependency, like this:\n    ```javascript\n    [&#x27;$http&#x27;, function($http) {\n      // ...\n    }]\n    ```\n    Now `$http` is available to use inside `forecast`.\n3. Then, inside `forecast`, we use `$http` to construct an HTTP `GET` request for the weather data. If the request succeeds, the weather data is returned; otherwise the error info is returned.\n4. Next in the controller, we used the `forecast` service to fetch data from the server. First we added `forecast` into `MainController` as a dependency so that it&#x27;s available to use. Then within the controller we used `forecast` to asynchronously fetch the weather data from the server and store it into `$scope.fiveDay`\n5. As before, any properties attached to `$scope` become available to use in the view. This means in **index.html**, we can display the `city_name` using an expression as done before.\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;In the browser, visit https://s3.amazonaws.com/codecademy-content/courses/ltp4/forecast-api/forecast.json. Looking at the format of the data in the `days` array, each day has four pieces of data - `datetime`, `icon`, `high`, and `low`.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n        if (Components.WebBrowser.loadedURL(\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/forecast-api/forecast.json\&quot;)) {\n          return {pass: true};\n        }\n        return {pass: false, errors: { friendly: \&quot;Did you visit &#x27;https://s3.amazonaws.com/codecademy-content/courses/ltp4/forecast-api/forecast.json&#x27; in the browser?\&quot;, component: \&quot;WebBrowser\&quot; }};\n    }, callback);\n});\ncheckpoint(&#x27;Visit http://localhost:8000 to view the AngularJS app. Let\\&#x27;s finish the view so that it displays the weather for each day.\\n\\nNotice in the view, we\\&#x27;re using `ng-repeat` to loop through each item in the `days` array. Inside this loop, display a day\\&#x27;s four pieces of data.\\n\\\n\\n\\\nRemember to use `ng-src` to display an image.&#x27;, function(Tests, callback) {\n  Tests.webSCT(&#x27;sct1.js&#x27;, callback);\n});\ncheckpoint(&#x27;Use the `date` filter to format the `datetime`.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n      if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, \&quot;\\\\|\\\\s*date\\\\s*}}\&quot;)) {\n        return {pass: true};\n      }\n      return {pass: false, errors: { friendly: \&quot;Did you add format the datetime using the date filter?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n  }, callback);\n});\n&quot;,&quot;files&quot;:{&quot;sct1.js&quot;:&quot;$expect(&#x27;.weekday&#x27;).to.have.text(/\\S/, \&quot;Make sure to display the weekday inside the .weekday div. Use the `date` filter to format the datetime into a weekday.\&quot;);\n$expect(&#x27;img&#x27;).to.exist(\&quot;Add an img tag for the icon field\&quot;)\nif (!($(&#x27;img&#x27;)[0].hasAttribute(&#x27;ng-src&#x27;))) {\n  throw new Error(&#x27;Use ng-src to set the img url&#x27;);\n}\n$expect(&#x27;.high&#x27;).to.have.text(/\\d/);\n$expect(&#x27;.low&#x27;).to.have.text(/\\d/);\n&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/services/lessons/services/exercises/services-ii.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/services/exercises/services-ii&quot;},&quot;services-generalizations&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;services-generalizations&quot;,&quot;title&quot;:&quot;Generalizations&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-services&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;js/services/forecast.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;Why are services useful?  Instead of filling the controller with code to fetch weather data from a server, it&#x27;s better to move this independent logic into a service so that it can be reused by other parts of the app.\n\nWhat can we generalize so far?\n* Directives are a way to make standalone UI components, like `\u003Capp-info\u003E`\n* Services are a way to make standalone communication logic, like `forecast` which fetches weather data from a server\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;&quot;,&quot;files&quot;:{}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/services/lessons/services/exercises/services-generalizations.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/services/exercises/services-generalizations&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/services/lessons/services/services.en.yml&quot;,&quot;exercises_order&quot;:[&quot;services-i&quot;,&quot;services-ii&quot;,&quot;services-generalizations&quot;],&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/services/resume&quot;,&quot;unit_slug&quot;:&quot;services&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/services/services.en.yml&quot;,&quot;lessons_order&quot;:[&quot;services&quot;],&quot;projects_order&quot;:[&quot;angularjs_outbox-1&quot;,&quot;angularjs_top-10&quot;],&quot;quizzes&quot;:{&quot;angularjs-quiz-3&quot;:{&quot;node_type&quot;:&quot;quiz&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs-quiz-3&quot;,&quot;title&quot;:&quot;AngularJS Quiz 3&quot;,&quot;questions&quot;:[{&quot;question&quot;:{&quot;text&quot;:&quot;What is the purpose of a service?&quot;},&quot;answers&quot;:[{&quot;text&quot;:&quot;Services are a way to condense data once it is stored in the controller.&quot;},{&quot;text&quot;:&quot;Services are a way to render complex HTML elements on a page.&quot;},{&quot;text&quot;:&quot;Services allow the app to read live data from a server.&quot;},{&quot;text&quot;:&quot;Services are a shortcut for creating individual directives.&quot;}],&quot;correct_index&quot;:3},{&quot;question&quot;:{&quot;text&quot;:&quot;What is the correct syntax for creating a service?&quot;},&quot;answers&quot;:[{&quot;text&quot;:&quot;app.service();&quot;},{&quot;text&quot;:&quot;app.constant();&quot;},{&quot;text&quot;:&quot;app.checker();&quot;},{&quot;text&quot;:&quot;app.factory();&quot;}],&quot;correct_index&quot;:4},{&quot;question&quot;:{&quot;text&quot;:&quot;What directory is are services stored in?&quot;},&quot;answers&quot;:[{&quot;text&quot;:&quot;js/controllers/services&quot;},{&quot;text&quot;:&quot;js/services&quot;},{&quot;text&quot;:&quot;js/shared/services&quot;},{&quot;text&quot;:&quot;js/db/services&quot;}],&quot;correct_index&quot;:2},{&quot;question&quot;:{&quot;text&quot;:&quot;What happens when forecast is added as a dependency in MainController?&quot;,&quot;snippet&quot;:{&quot;code&quot;:[&quot;app.controller(&#x27;MainController&#x27;, [&#x27;$scope&#x27;, &#x27;forecast&#x27;, function($scope, forecast) { \n  // ... \n}]);&quot;],&quot;language&quot;:&quot;javascript&quot;}},&quot;answers&quot;:[{&quot;text&quot;:&quot;The controller replaces all instances of $scope with forecast in the app.&quot;},{&quot;text&quot;:&quot;The controller is able to use forecast to asynchronously fetch weather data from the server.&quot;},{&quot;text&quot;:&quot;The controller is able act independently of the service.&quot;},{&quot;text&quot;:&quot;The controller is able to run checks on data submitted through the server.&quot;}],&quot;correct_index&quot;:2},{&quot;question&quot;:{&quot;text&quot;:&quot;In the associated service, what is $http.get() used for?&quot;,&quot;snippet&quot;:{&quot;code&quot;:[&quot;app.factory(&#x27;forecast&#x27;, [&#x27;$http&#x27;, function($http) {\n return $http.get(&#x27;https://s3.amazonaws.com/codecademy-content/courses/ltp4/forecast-api/forecast.json&#x27;)\n .success(function(data) {\n return data;\n })\n .error(function(err) {\n return err;\n });\n }]);&quot;],&quot;language&quot;:&quot;javascript&quot;}},&quot;answers&quot;:[{&quot;text&quot;:&quot;To get data from a specified url through a GET request&quot;},{&quot;text&quot;:&quot;To visit a specified URL when the service is called&quot;},{&quot;text&quot;:&quot;To create a new link in an app&quot;},{&quot;text&quot;:&quot;To fetch the data rendered in an app&#x27;s view.&quot;}],&quot;correct_index&quot;:1},{&quot;question&quot;:{&quot;text&quot;:&quot;If a service had been created in js/service/forecast.js to fetch data from a server, how would you attach it to scope in MainController?&quot;,&quot;snippet&quot;:{&quot;code&quot;:[&quot;app.controller(&#x27;MainController&#x27;, [&#x27;$scope&#x27;, function($scope) {\n forecast.success(function(data) {\n...\n });\n }]);&quot;],&quot;language&quot;:&quot;javascript&quot;}},&quot;answers&quot;:[{&quot;text&quot;:&quot;$scope.fiveDay = data;&quot;},{&quot;text&quot;:&quot;var fiveDay = $scope.data;&quot;},{&quot;text&quot;:&quot;scope.fiveDay = data;&quot;},{&quot;text&quot;:&quot;$scope.data&quot;}],&quot;correct_index&quot;:1}],&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/services/quizs/angularjs-quiz-3.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs-quiz-3&quot;,&quot;unit_slug&quot;:&quot;services&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false}},&quot;quizzes_order&quot;:[&quot;angularjs-quiz-3&quot;]},&quot;project&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs_outbox-1&quot;,&quot;title&quot;:&quot;Outbox 1&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll build an email app.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/outbox-1.jpg&quot;,&quot;preview_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/4/outbox-1/index.html&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/angularjsoutbox-1&quot;,&quot;objective&quot;:&quot;Outbox is creating an AngularJS app for their email app. \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/outbox-1/index.html\&quot;\u003EHere&#x27;s what it looks like\u003C/a\u003E. The app displays a list of messages.&quot;,&quot;meta&quot;:{&quot;author&quot;:{&quot;fullname&quot;:&quot;Lalith Polepeddi&quot;,&quot;username&quot;:&quot;lpolepeddi&quot;}},&quot;self_assessments&quot;:[{&quot;tasks&quot;:[{&quot;key&quot;:&quot;angularjs_outbox-1_0_0&quot;,&quot;text&quot;:&quot;Create a new module named \u003Ccode\u003EOutboxApp\u003C/code\u003E, and then attach it to the \u003Ccode\u003E\u0026lt;body\u0026gt;\u003C/code\u003E element in the view.&quot;},{&quot;key&quot;:&quot;angularjs_outbox-1_0_1&quot;,&quot;text&quot;:&quot;Visit \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/emails-api/emails.json\&quot; target=\&quot;_blank\&quot;\u003Eemails.json\u003C/a\u003E. It&#x27;s a JSON object containing an array of emails. Let&#x27;s fetch this data and display it in the app.&quot;},{&quot;key&quot;:&quot;angularjs_outbox-1_0_2&quot;,&quot;text&quot;:&quot;Create a service named \u003Ccode\u003Eemails\u003C/code\u003E for getting this email data:\n\u003Col type=\&quot;a\&quot;\u003E\n\u003Cli\u003EMake a new folder named \u003Cstrong\u003Ejs/services\u003C/strong\u003E. In this folder, create a new file named \u003Cstrong\u003Ejs/services/emails.js\u003C/strong\u003E.\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003Eapp.factory\u003C/code\u003E to create a new service named \u003Ccode\u003Eemails\u003C/code\u003E.\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003E$http\u003C/code\u003E to get the email data from \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/emails-api/emails.json\&quot; target=\&quot;_blank\&quot;\u003Eemails.json\u003C/a\u003E.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_outbox-1_0_3&quot;,&quot;text&quot;:&quot;Include this new JavaScript file in the view as a new \u003Ccode\u003Escript\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_outbox-1_0_4&quot;,&quot;text&quot;:&quot;In the controller, use the \u003Ccode\u003Eemails\u003C/code\u003E service to fetch data from the server:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EFirst add \u003Ccode\u003Eemails\u003C/code\u003E into \u003Ccode\u003EHomeController\u003C/code\u003E as a dependency so that it&#x27;s available to use.\u003C/li\u003E\n            \u003Cli\u003EThen use \u003Ccode\u003Eemails\u003C/code\u003E within the controller to asynchronously fetch the email data from the server and store it into \u003Ccode\u003E$scope.emails\u003C/code\u003E.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_outbox-1_0_5&quot;,&quot;text&quot;:&quot;Attach the controller to the \u003Ccode\u003E\u0026lt;div class=\&quot;main\&quot;\u0026gt;\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_outbox-1_0_6&quot;,&quot;text&quot;:&quot;In the view, finish the code to display an email. Looking at the format of the data in \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/emails-api/emails.json\&quot; target=\&quot;_blank\&quot;\u003Eemails.json\u003C/a\u003E, display each email&#x27;s \u003Ccode\u003Efrom\u003C/code\u003E, \u003Ccode\u003Esubject\u003C/code\u003E, and \u003Ccode\u003Edatetime\u003C/code\u003E in their corresponding \u003Ccode\u003E\u0026lt;span\u0026gt;\u003C/code\u003E elements.&quot;},{&quot;key&quot;:&quot;angularjs_outbox-1_0_7&quot;,&quot;text&quot;:&quot;View the result by visiting http://localhost:8000 in the browser.&quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs_outbox-1&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/services/projects/angularjs_outbox-1.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_outbox-1&quot;,&quot;unit_slug&quot;:&quot;services&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false},&quot;segment&quot;:{&quot;_id&quot;:&quot;55a67b1c8493779f09000004&quot;,&quot;content_slug&quot;:&quot;learn-angularjs&quot;,&quot;content_type&quot;:&quot;Course&quot;,&quot;name&quot;:&quot;Learn AngularJS&quot;,&quot;description&quot;:&quot;Learn to build web apps using AngularJS 1.x. By the end of the course, you&#x27;ll be able to use AngularJS to create your own apps.&quot;,&quot;time&quot;:&quot;5 Hours&quot;,&quot;enrolled&quot;:&quot;100k+&quot;,&quot;level&quot;:&quot;Intermediate&quot;,&quot;icon&quot;:{&quot;type&quot;:&quot;url&quot;,&quot;value&quot;:&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/img/ltp4.svg&quot;},&quot;resume_path&quot;:&quot;/en/courses/learn-angularjs/resume&quot;,&quot;return_path&quot;:&quot;/en/courses/learn-angularjs&quot;,&quot;partner&quot;:null,&quot;requirements&quot;:[&quot;javascript&quot;],&quot;progress&quot;:{&quot;percent_complete&quot;:100,&quot;last_active&quot;:&quot;2016-01-11T18:52:18+00:00&quot;,&quot;total&quot;:4,&quot;projects&quot;:{&quot;complete&quot;:700,&quot;total&quot;:14,&quot;percent_complete&quot;:50},&quot;quizzes&quot;:{&quot;complete&quot;:300,&quot;total&quot;:4,&quot;percent_complete&quot;:75}},&quot;units&quot;:[{&quot;name&quot;:&quot;Your First App&quot;,&quot;unit_slug&quot;:&quot;your-first-app&quot;,&quot;lessons&quot;:[{&quot;title&quot;:&quot;Your First App&quot;,&quot;description&quot;:&quot;Get up and running quickly by building an AngularJS app from scratch.&quot;,&quot;resume_path&quot;:&quot;/en/courses/learn-angularjs/lessons/your-first-app/resume&quot;,&quot;locked&quot;:false,&quot;progress&quot;:{&quot;percent_complete&quot;:100}}],&quot;projects&quot;:[{&quot;title&quot;:&quot;Bolt Network 1&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll create a movie review board using a controller and a view.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/bolt-network-1.jpg&quot;,&quot;resume_path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_bolt-network-1&quot;,&quot;locked&quot;:false,&quot;should_show&quot;:true,&quot;progress&quot;:{&quot;percent_complete&quot;:100},&quot;achievement&quot;:null},{&quot;title&quot;:&quot;Pizza Planet&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll create a restaurant menu using filters and directives.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/pizza-planet.jpg&quot;,&quot;resume_path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_pizza-planet&quot;,&quot;locked&quot;:false,&quot;should_show&quot;:true,&quot;progress&quot;:{&quot;percent_complete&quot;:100},&quot;achievement&quot;:null},{&quot;title&quot;:&quot;MOVE Log&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll create an exercise tracking app using directives.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/move-log.jpg&quot;,&quot;resume_path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_move-log&quot;,&quot;locked&quot;:false,&quot;should_show&quot;:true,&quot;progress&quot;:{&quot;percent_complete&quot;:100},&quot;achievement&quot;:null}],&quot;quizzes&quot;:[{&quot;title&quot;:&quot;AngularJS Quiz 1&quot;,&quot;resume_path&quot;:&quot;/en/quiz/learn-angularjs/unit/your-first-app/quiz/angularjs-quiz-1&quot;,&quot;locked&quot;:false,&quot;should_show&quot;:true,&quot;score&quot;:{&quot;correct&quot;:&quot;9&quot;,&quot;incorrect&quot;:&quot;1&quot;,&quot;questions&quot;:&quot;10&quot;,&quot;pct&quot;:&quot;90&quot;},&quot;progress&quot;:{&quot;percent_complete&quot;:90},&quot;achievement&quot;:null}],&quot;resources&quot;:[{&quot;title&quot;:&quot;The Basics&quot;,&quot;url&quot;:&quot;https://angularjs.org/#the-basics&quot;,&quot;read_time&quot;:5,&quot;advisor_added&quot;:false,&quot;visited_verb&quot;:null}]},{&quot;name&quot;:&quot;Directives&quot;,&quot;unit_slug&quot;:&quot;directives&quot;,&quot;lessons&quot;:[{&quot;title&quot;:&quot;Directives&quot;,&quot;description&quot;:&quot;Learn how to use directives to make standalone UI components.&quot;,&quot;resume_path&quot;:&quot;/en/courses/learn-angularjs/lessons/directives/resume&quot;,&quot;locked&quot;:false,&quot;progress&quot;:{&quot;percent_complete&quot;:100}}],&quot;projects&quot;:[{&quot;title&quot;:&quot;Bolt Network 2&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll add custom directives to your movie review board.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/bolt-network-2.jpg&quot;,&quot;resume_path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_bolt-network-2&quot;,&quot;locked&quot;:false,&quot;should_show&quot;:true,&quot;progress&quot;:{&quot;percent_complete&quot;:100},&quot;achievement&quot;:null},{&quot;title&quot;:&quot;Gameboard&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll create a custom directive that displays the score of a game.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/gameboard.jpg&quot;,&quot;resume_path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_gameboard&quot;,&quot;locked&quot;:false,&quot;should_show&quot;:true,&quot;progress&quot;:{&quot;percent_complete&quot;:100},&quot;achievement&quot;:null},{&quot;title&quot;:&quot;Feedster&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll build a news feed using custom directives.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/feedster.jpg&quot;,&quot;resume_path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_feedster&quot;,&quot;locked&quot;:false,&quot;should_show&quot;:true,&quot;progress&quot;:{&quot;percent_complete&quot;:100},&quot;achievement&quot;:null}],&quot;quizzes&quot;:[{&quot;title&quot;:&quot;AngularJS Quiz 2&quot;,&quot;resume_path&quot;:&quot;/en/quiz/learn-angularjs/unit/directives/quiz/angularjs-quiz-2&quot;,&quot;locked&quot;:false,&quot;should_show&quot;:true,&quot;score&quot;:{&quot;correct&quot;:&quot;8&quot;,&quot;incorrect&quot;:&quot;1&quot;,&quot;questions&quot;:&quot;9&quot;,&quot;pct&quot;:&quot;89&quot;},&quot;progress&quot;:{&quot;percent_complete&quot;:89},&quot;achievement&quot;:null}],&quot;resources&quot;:[{&quot;title&quot;:&quot;Creating Custom Directives&quot;,&quot;url&quot;:&quot;https://docs.angularjs.org/guide/directive&quot;,&quot;read_time&quot;:8,&quot;advisor_added&quot;:false,&quot;visited_verb&quot;:null}]},{&quot;name&quot;:&quot;Services&quot;,&quot;unit_slug&quot;:&quot;services&quot;,&quot;lessons&quot;:[{&quot;title&quot;:&quot;Services&quot;,&quot;description&quot;:&quot;Use services to communicate with a server.&quot;,&quot;resume_path&quot;:&quot;/en/courses/learn-angularjs/lessons/services/resume&quot;,&quot;locked&quot;:false,&quot;progress&quot;:{&quot;percent_complete&quot;:100}}],&quot;projects&quot;:[{&quot;title&quot;:&quot;Outbox 1&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll build an email app.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/outbox-1.jpg&quot;,&quot;resume_path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_outbox-1&quot;,&quot;locked&quot;:false,&quot;should_show&quot;:true,&quot;progress&quot;:{&quot;percent_complete&quot;:100},&quot;achievement&quot;:null},{&quot;title&quot;:&quot;Top 10&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll fetch movie data from the server and display it in a custom directive.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/top-10.jpg&quot;,&quot;resume_path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_top-10&quot;,&quot;locked&quot;:false,&quot;should_show&quot;:true,&quot;progress&quot;:{&quot;percent_complete&quot;:0},&quot;achievement&quot;:null}],&quot;quizzes&quot;:[{&quot;title&quot;:&quot;AngularJS Quiz 3&quot;,&quot;resume_path&quot;:&quot;/en/quiz/learn-angularjs/unit/services/quiz/angularjs-quiz-3&quot;,&quot;locked&quot;:false,&quot;should_show&quot;:true,&quot;score&quot;:{&quot;correct&quot;:&quot;6&quot;,&quot;incorrect&quot;:&quot;0&quot;,&quot;questions&quot;:&quot;6&quot;,&quot;pct&quot;:&quot;100&quot;},&quot;progress&quot;:{&quot;percent_complete&quot;:100},&quot;achievement&quot;:null}],&quot;resources&quot;:[{&quot;title&quot;:&quot;Using a Service&quot;,&quot;url&quot;:&quot;https://docs.angularjs.org/guide/services&quot;,&quot;read_time&quot;:4,&quot;advisor_added&quot;:false,&quot;visited_verb&quot;:null}]},{&quot;name&quot;:&quot;Routing&quot;,&quot;unit_slug&quot;:&quot;routing&quot;,&quot;lessons&quot;:[{&quot;title&quot;:&quot;Routing&quot;,&quot;description&quot;:&quot;Add routes to build powerful single-page applications.&quot;,&quot;resume_path&quot;:&quot;/en/courses/learn-angularjs/lessons/routing/resume&quot;,&quot;locked&quot;:false,&quot;progress&quot;:{&quot;percent_complete&quot;:100}}],&quot;projects&quot;:[{&quot;title&quot;:&quot;Outbox 2&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll add to your email app by mapping URLs to views.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/outbox-2.jpg&quot;,&quot;resume_path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_outbox-2&quot;,&quot;locked&quot;:false,&quot;should_show&quot;:true,&quot;progress&quot;:{&quot;percent_complete&quot;:0},&quot;achievement&quot;:null},{&quot;title&quot;:&quot;Calendar&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll create a calendar app with routes for each view.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/calendar.jpg&quot;,&quot;resume_path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_calendar&quot;,&quot;locked&quot;:false,&quot;should_show&quot;:true,&quot;progress&quot;:{&quot;percent_complete&quot;:0},&quot;achievement&quot;:null},{&quot;title&quot;:&quot;Reader&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll create an e-reader app.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/reader.jpg&quot;,&quot;resume_path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_reader&quot;,&quot;locked&quot;:false,&quot;should_show&quot;:true,&quot;progress&quot;:{&quot;percent_complete&quot;:0},&quot;achievement&quot;:null}],&quot;quizzes&quot;:[{&quot;title&quot;:&quot;AngularJS Quiz 4&quot;,&quot;resume_path&quot;:&quot;/en/quiz/learn-angularjs/unit/routing/quiz/angularjs-quiz-4&quot;,&quot;locked&quot;:false,&quot;should_show&quot;:true,&quot;score&quot;:{&quot;correct&quot;:null,&quot;incorrect&quot;:null,&quot;questions&quot;:null,&quot;pct&quot;:null},&quot;progress&quot;:{&quot;percent_complete&quot;:0},&quot;achievement&quot;:null}],&quot;resources&quot;:[{&quot;title&quot;:&quot;$route&quot;,&quot;url&quot;:&quot;https://docs.angularjs.org/api/ngRoute/service/$route&quot;,&quot;read_time&quot;:3,&quot;advisor_added&quot;:false,&quot;visited_verb&quot;:null}]},{&quot;name&quot;:&quot;Putting It All Together&quot;,&quot;unit_slug&quot;:&quot;angularjs_piat&quot;,&quot;lessons&quot;:[],&quot;projects&quot;:[{&quot;title&quot;:&quot;NearMe 1&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll build a location-based service using a third-party custom directive.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/near-me-1.jpg&quot;,&quot;resume_path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_nearme-1&quot;,&quot;locked&quot;:true,&quot;should_show&quot;:true,&quot;progress&quot;:{&quot;percent_complete&quot;:0},&quot;achievement&quot;:null},{&quot;title&quot;:&quot;NearMe 2&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll fetch data from the Wikipedia API and display it in your map.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/near-me-2.jpg&quot;,&quot;resume_path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_nearme-2&quot;,&quot;locked&quot;:true,&quot;should_show&quot;:true,&quot;progress&quot;:{&quot;percent_complete&quot;:0},&quot;achievement&quot;:null},{&quot;title&quot;:&quot;NearMe 3&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll map URLs to different views in your app using routing.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/near-me-3.jpg&quot;,&quot;resume_path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_nearme-3&quot;,&quot;locked&quot;:true,&quot;should_show&quot;:true,&quot;progress&quot;:{&quot;percent_complete&quot;:0},&quot;achievement&quot;:null}],&quot;quizzes&quot;:[],&quot;resources&quot;:[{&quot;title&quot;:&quot;AngularJS API Docs&quot;,&quot;url&quot;:&quot;https://docs.angularjs.org/api&quot;,&quot;read_time&quot;:5,&quot;advisor_added&quot;:false,&quot;visited_verb&quot;:null}]}],&quot;achievements&quot;:[]},&quot;nextProject&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs_top-10&quot;,&quot;title&quot;:&quot;Top 10&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll fetch movie data from the server and display it in a custom directive.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/top-10.jpg&quot;,&quot;preview_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/4/top-10/index.html&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/angularjstop-10&quot;,&quot;objective&quot;:&quot;Top 10 is creating an AngularJS app to chart popular TV shows. \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/top-10/index.html\&quot;\u003EHere&#x27;s what it looks like\u003C/a\u003E.\n\n&quot;,&quot;meta&quot;:{&quot;author&quot;:{&quot;fullname&quot;:&quot;Lalith Polepeddi&quot;,&quot;username&quot;:&quot;lpolepeddi&quot;}},&quot;self_assessments&quot;:[{&quot;tasks&quot;:[{&quot;key&quot;:&quot;angularjs_top-10_0_0&quot;,&quot;text&quot;:&quot;Create a new module named \u003Ccode\u003ETop10App\u003C/code\u003E, and then attach it to the \u003Ccode\u003E\u0026lt;body\u0026gt;\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_top-10_0_1&quot;,&quot;text&quot;:&quot;Visit \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/shows-api/shows.json\&quot; target=\&quot;_blank\&quot;\u003Eshows.json\u003C/a\u003E. It&#x27;s a JSON object containing an array of TV shows. Let&#x27;s fetch this data and display it in the app.&quot;},{&quot;key&quot;:&quot;angularjs_top-10_0_2&quot;,&quot;text&quot;:&quot;Create a service named \u003Ccode\u003Eshows\u003C/code\u003E for getting this data. In a file named \u003Cstrong\u003Ejs/services/shows.js\u003C/strong\u003E, create a new service named \u003Ccode\u003Eshows\u003C/code\u003E that gets data from the \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/shows-api/shows.json\&quot; target=\&quot;_blank\&quot;\u003Eshows API\u003C/a\u003E. Include this new JavaScript file in the view as a new \u003Ccode\u003Escript\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_top-10_0_3&quot;,&quot;text&quot;:&quot;In the controller, use the \u003Ccode\u003Eshows\u003C/code\u003E service to load data from the server into the \u003Ccode\u003E$scope.shows\u003C/code\u003E property. Then attach the controller to the \u003Ccode\u003E\u0026lt;div class=\&quot;main\&quot;\u0026gt;\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_top-10_0_4&quot;,&quot;text&quot;:&quot;Create a directive named \u003Ccode\u003EtvShow\u003C/code\u003E:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EMake a new file \u003Cstrong\u003Ejs/directives/tvShow.js\u003C/strong\u003E. In it, create the new directive named \u003Ccode\u003EtvShow\u003C/code\u003E.\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003Escope\u003C/code\u003E to specify that we&#x27;ll pass information into this directive through an attribute named \u003Ccode\u003Einfo\u003C/code\u003E.\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003EtemplateUrl\u003C/code\u003E to tell this directive to use the \u003Cstrong\u003Ejs/directives/tvShow.html\u003C/strong\u003E file.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_top-10_0_5&quot;,&quot;text&quot;:&quot;Include this new JavaScript file in the view as a \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_top-10_0_6&quot;,&quot;text&quot;:&quot;In the directive&#x27;s template \u003Cstrong\u003Ejs/directives/tvShow.html\u003C/strong\u003E, display each TV show&#x27;s details. Looking at the format of the data in the \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/shows-api/shows.json\&quot; target=\&quot;_blank\&quot;\u003Eshows API\u003C/a\u003E, display each show&#x27;s \u003Ccode\u003Eseries_img\u003C/code\u003E, \u003Ccode\u003Eseries\u003C/code\u003E, \u003Ccode\u003Egenre\u003C/code\u003E, \u003Ccode\u003Erun_start\u003C/code\u003E, and \u003Ccode\u003Edescription\u003C/code\u003E.&quot;},{&quot;key&quot;:&quot;angularjs_top-10_0_7&quot;,&quot;text&quot;:&quot;Finish the view display each item in the \u003Ccode\u003Eshows\u003C/code\u003E array. Under the \u003Ccode\u003E.rank\u003C/code\u003E div, use the \u003Ccode\u003E\u0026lt;tv-show\u0026gt;\u003C/code\u003E directive to display the details of each show. Pass in each show into the \u003Ccode\u003E\u0026lt;tv-show\u0026gt;\u003C/code\u003E directive&#x27;s \u003Ccode\u003Einfo\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_top-10_0_8&quot;,&quot;text&quot;:&quot;View the result by visiting http://localhost:8000 in the browser.&quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs_top-10&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/services/projects/angularjs_top-10.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_top-10&quot;,&quot;unit_slug&quot;:&quot;services&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false},&quot;nextLesson&quot;:{&quot;node_type&quot;:&quot;lesson&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;routing&quot;,&quot;title&quot;:&quot;Routing&quot;,&quot;description&quot;:&quot;Add routes to build powerful single-page applications.&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/routing&quot;,&quot;exercises&quot;:{&quot;routing-routing-i&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;routing-routing-i&quot;,&quot;title&quot;:&quot;Routing I&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-routing&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;index.html&quot;},{&quot;filename&quot;:&quot;js/app.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;So far we&#x27;ve made AngularJS apps that display data in a single view **index.html**.\n\nBut what happens when the app grows and needs to display more information? Stuffing more code to a single view will quickly make things messy.\n\nA better solution is to use multiple templates that display different pieces of data based on the URL that the user is visiting. We can do this with Angular&#x27;s _application routes_.&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;In **index.html** under the `.header` section, type in the code exactly as you see here: \\n\\\n```html \\n\\\n\u003Cdiv ng-view\u003E\u003C/div\u003E \\n\\\n```&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n      if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;\u003Cdiv ng-view\u003E\\\\s*\u003C/div\u003E&#x27;)) {\n        return {pass: true};\n      }\n      return {pass: false, errors: { friendly: \&quot;Did you type \u003Cdiv ng-view\u003E\u003C/div\u003E in the view?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n  }, callback);\n});\ncheckpoint(&#x27;View the AngularJS app in the browser by typing http://localhost:8000/.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n        if (Components.WebBrowser.loadedOneOf([\&quot;http://localhost:8000/\&quot;, \&quot;localhost:8000\&quot;])) {\n          return {pass: true};\n        }\n  return {pass: false, errors: { friendly: \&quot;Did you navigate to &#x27;http://localhost:8000/&#x27; in the browser?\&quot;, component: \&quot;WebBrowser\&quot; }};\n    }, callback);\n});\ncheckpoint(\&quot;In **app.js** under the `angular.module`, type in this code: \\n\\\n```javascript \\n\\\napp.config(function ($routeProvider) { \\n\\\n  $routeProvider \\n\\\n    .when(&#x27;/&#x27;, { \\n\\\n      controller: &#x27;HomeController&#x27;, \\n\\\n      templateUrl: &#x27;views/home.html&#x27; \\n\\\n    }) \\n\\\n    .otherwise({ \\n\\\n      redirectTo: &#x27;/&#x27; \\n\\\n    }); \\n\\\n}); \\n\\\n```\&quot;, function(Tests, callback) {\n  Tests.karmaTest(&#x27;karma.js&#x27;, callback);\n});&quot;,&quot;files&quot;:{&quot;karma.js&quot;:&quot;describe(&#x27;Routes test&#x27;, function() {\n    // Mock our module in our tests\n    beforeEach(module(&#x27;GalleryApp&#x27;));\n\n    // We want to store a copy of the three services we&#x27;ll use in our tests\n    // so we can later reference these services in our tests.\n    var $location, $route, $rootScope;\n\n    // We added _ in our dependencies to avoid conflicting with our variables.\n    // Angularjs will strip out the _ and inject the dependencies.\n    beforeEach(inject(function(_$location_, _$route_, _$rootScope_){\n        $location = _$location_;\n        $route = _$route_;\n        $rootScope = _$rootScope_;\n    }));\n\n    // We need to setup a mock backend to handle the fetching of templates from the &#x27;templateUrl&#x27;.\n    beforeEach(inject(function($httpBackend){\n        $httpBackend.expectGET(&#x27;views/home.html&#x27;).respond(200, &#x27;main HTML&#x27;);\n        // or we can use $templateCache service to store the template.\n        // $routeProvider will search for the template in the $templateCache first\n        // before fetching it using http\n        // $templateCache.put(&#x27;templates/main.html&#x27;, &#x27;main HTML&#x27;);\n    }));\n\n    // Our test code is set up. We can now start writing the tests.\n\n    // When a user navigates to the index page, they are shown the index page with the proper\n    // controller\n    it(&#x27;Make sure to type the code in app.js exactly as shown in Step 2&#x27;, function(){\n        expect($location.path()).toBe(&#x27;&#x27;);\n\n        $location.path(&#x27;/&#x27;);\n\n        // The router works with the digest lifecycle, wherein after the location is set,\n        // it takes a single digest loop cycle to process the route,\n        // transform the page content, and finish the routing.\n        // In order to trigger the location request, we\u2019ll run a digest cycle (on the $rootScope)\n        // and check that the controller is as expected.\n        $rootScope.$digest();\n\n        expect($location.path()).toBe( &#x27;/&#x27; );\n        expect($route.current.controller).toBe(&#x27;HomeController&#x27;);\n    });\n\n    it(&#x27;Make sure to type the code in app.js exactly as shown in Step 2&#x27;, function(){\n        expect($location.path()).toBe(&#x27;&#x27;);\n\n        $location.path(&#x27;/a/non-existent/route&#x27;);\n\n        $rootScope.$digest();\n\n        expect($location.path()).toBe( &#x27;/&#x27; );\n        expect($route.current.controller).toBe(&#x27;HomeController&#x27;);\n    });\n});\n&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/routing/lessons/routing/exercises/routing-routing-i.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/routing/exercises/routing-routing-i&quot;},&quot;routing-routing-ii&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;routing-routing-ii&quot;,&quot;title&quot;:&quot;Routing II&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-routing&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;index.html&quot;},{&quot;filename&quot;:&quot;js/app.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;Great! A gallery of images shows up. How does it work?\n1. In **app.js** inside the `app.config()` method, we use Angular&#x27;s `$routeProvider` to define the application routes.\n2. We used `.when()` to map the URL `/` to to the controller `HomeController` and the template `home.html`. The `HomeController` uses the service **js/services/photos.js** to fetch the array of all photos from https://s3.amazonaws.com/codecademy-content/courses/ltp4/photos-api/photos.json and stores it into `$scope.photos`. The `home.html` uses `ng-repeat` to loop through each item in the `photos` array and display each photo.\n3. Otherwise if a user accidentally visits a URL other than `/`, we just redirect to `/` using `.otherwise()`.\n4. Now when a user visits `/`, a view will be constructed by injecting `home.html` into the `\u003Cdiv ng-view\u003E\u003C/div\u003E` in **index.html**.\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;In **app.js** between the `.when()` and `.otherwise()`, add another `.when()` that maps the URL `/photos/:id` to the controller `PhotoController` and the template **views/photo.html**.&#x27;, function(Tests, callback) {\n  Tests.karmaTest(&#x27;karma1.js&#x27;, callback);\n});\ncheckpoint(&#x27;Visit http://localhost:8000/ and click on a photo. A detail page about that photo should appear.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n        if (Components.WebBrowser.loadedOneOf([\&quot;http://localhost:8000/\&quot;, \&quot;localhost:8000\&quot;])) {\n          return {pass: true};\n        }\n\nreturn {pass: false, errors: { friendly: \&quot;Did you visit &#x27;http://localhost:8000/&#x27; in the browser?\&quot;, component: \&quot;WebBrowser\&quot; }};\n    }, callback);\n});&quot;,&quot;files&quot;:{&quot;karma1.js&quot;:&quot;describe(&#x27;Routes test&#x27;, function() {\n    // Mock our module in our tests\n    beforeEach(module(&#x27;GalleryApp&#x27;));\n\n    // We want to store a copy of the three services we&#x27;ll use in our tests\n    // so we can later reference these services in our tests.\n    var $location, $route, $rootScope;\n\n    // We added _ in our dependencies to avoid conflicting with our variables.\n    // Angularjs will strip out the _ and inject the dependencies.\n    beforeEach(inject(function(_$controller_, _$location_, _$route_, _$rootScope_){\n        $controller = _$controller_;\n        $location = _$location_;\n        $route = _$route_;\n        $rootScope = _$rootScope_;\n        PhotoController = $controller(&#x27;PhotoController&#x27;, { $scope: $rootScope, $routeParams: {id: &#x27;1&#x27;}});\n    }));\n\n    // We need to setup a mock backend to handle the fetching of templates from the &#x27;templateUrl&#x27;.\n    beforeEach(inject(function($httpBackend){\n        $httpBackend.whenGET(&#x27;views/home.html&#x27;).respond(200, &#x27;main HTML&#x27;);\n        $httpBackend.whenGET(&#x27;views/photo.html&#x27;).respond(200, &#x27;photo HTML&#x27;);\n        $httpBackend.whenGET(&#x27;https://s3.amazonaws.com/codecademy-content/courses/ltp4/photos-api/photos.json&#x27;).respond([\n          {\n            \&quot;title\&quot;: \&quot;Canada\&quot;,\n            \&quot;author\&quot;: \&quot;Tim Gage\&quot;,\n            \&quot;url\&quot;: \&quot;https://dl.dropboxusercontent.com/u/110238630/ltp4-photos-api/canada.jpg\&quot;,\n            \&quot;pubdate\&quot;: 1412208000000,\n            \&quot;upvotes\&quot;: 60,\n            \&quot;views\&quot;: 1195\n          }])\n    }));\n\n    it(&#x27;Did you use .when() to map the URL /photos/:id?&#x27;, function(){\n        expect($location.path()).toBe(&#x27;&#x27;);\n\n        $location.path(&#x27;/photos/1&#x27;);\n\n        $rootScope.$digest();\n\n        expect($location.path()).toBe(&#x27;/photos/1&#x27;);\n        expect($route.current.controller).toBe(&#x27;PhotoController&#x27;);\n    });\n});\n&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/routing/lessons/routing/exercises/routing-routing-ii.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/routing/exercises/routing-routing-ii&quot;},&quot;routing-routing-iii&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;routing-routing-iii&quot;,&quot;title&quot;:&quot;Routing III&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-routing&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;js/app.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;What did we just do?\n\n1. In **app.js**, we mapped a URL to `PhotoController` and `photo.html`. We added a variable part named `id` to the URL, like this: `/photos/:id`.\n2. In **PhotoController**, we used Angular&#x27;s `$routeParams` to retrieve `id` from the URL by using `$routeParams.id`. Notice that we injected both `$routeParams` and the `photos` service into the `PhotoController` dependency array to make them available to use inside the controller.\n3. Then to fetch an individual photo, we first used the `photos` service to fetch the array of photos from the server, and then used `$routeParams.id` to access the specific photo by its index.\n4. As before, any properties attached to `$scope` become available to use in the view. This means in **photo.html**, we can display the photo&#x27;s `detail` using expressions as done before.\n\nNotice that when you click on links, the app doesn&#x27;t do a full reload. Only the part of the view specified by `\u003Cdiv ng-view\u003E\u003C/div\u003E` changes.&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;Finish the template so that it displays a photo\\&#x27;s details. \\n\\\n\\n\\\nFirst, in the browser, visit https://s3.amazonaws.com/codecademy-content/courses/ltp4/photos-api/photos.json. Looking at the format of the data in the array, each photo has six pieces of data - `title`, `author`, `url`, `pubdate`, `upvotes`, and `views`.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n        if (Components.WebBrowser.loadedURL(\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/photos-api/photos.json\&quot;)) {\n          return {pass: true};\n        }\n\nreturn {pass: false, errors: { friendly: \&quot;Did you visit &#x27;https://s3.amazonaws.com/codecademy-content/courses/ltp4/photos-api/photos.json&#x27; in the browser?\&quot;, component: \&quot;WebBrowser\&quot; }};\n    }, callback);\n});\ncheckpoint(&#x27;In the template **photo.html**, display a photo\\&#x27;s remaining five pieces of data. Then visit http://localhost:8000/ in the browser and click on a photo. A detail page about that photo should appear.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n        if (Components.WebBrowser.loadedOneOf([\&quot;http://localhost:8000/\&quot;, \&quot;localhost:8000\&quot;])) {\n          return {pass: true};\n        }\n\nreturn {pass: false, errors: { friendly: \&quot;Did you visit &#x27;http://localhost:8000/&#x27; in the browser?\&quot;, component: \&quot;WebBrowser\&quot; }};\n    }, callback);\n});\ncheckpoint(&#x27;Use the `number` filter to format the `views` and `upvotes`.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n      if (Components.CodeEditor.codeContains(&#x27;views/photo.html&#x27;, \&quot;\\\\|\\\\s*number\\\\s*}}\&quot;)) {\n        return {pass: true};\n      }\n\n        return {pass: false, errors: { friendly: \&quot;Did you add code to format views and upvotes?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n\n  }, callback);\n});\ncheckpoint(&#x27;Use the `date` filter to format the `pubdate`.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n      if (Components.CodeEditor.codeContains(&#x27;views/photo.html&#x27;, \&quot;\\\\s*\\\\|\\\\s*date\\\\s*}}\&quot;)) {\n        return {pass: true};\n      }\n\n        return {pass: false, errors: { friendly: \&quot;Did you add the code in to format pubdate?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n\n  }, callback);\n});\ncheckpoint(&#x27;View the result in the browser. The photo\\&#x27;s views, upvotes, and date should now be formatted.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n        if (Components.WebBrowser.loadedOneOf([\&quot;http://localhost:8000/\&quot;, \&quot;localhost:8000\&quot;])) {\n          return {pass: true};\n        }\n\nreturn {pass: false, errors: { friendly: \&quot;Did you visit &#x27;http://localhost:8000/&#x27; in the browser?\&quot;, component: \&quot;WebBrowser\&quot; }};\n    }, callback);\n});\n&quot;,&quot;files&quot;:{&quot;sct1.js&quot;:&quot;$expect(&#x27;.title&#x27;).not.to.be.empty();\n$expect(&#x27;.author&#x27;).not.to.be.empty();\n$expect(&#x27;.views&#x27;).not.to.be.empty();\n$expect(&#x27;.upvotes&#x27;).not.to.be.empty();\n$expect(&#x27;.pubdate&#x27;).not.to.be.empty();&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/routing/lessons/routing/exercises/routing-routing-iii.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/routing/exercises/routing-routing-iii&quot;},&quot;routing-generalizations&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;routing-generalizations&quot;,&quot;title&quot;:&quot;Generalizations&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-routing&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;js/app.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;Why are routes useful? Instead of filling a single view with more code than needed, routes let us map URLs to self-contained controllers and templates. Furthermore, now that the app has URLs, users can easily bookmark and share the app&#x27;s pages.\n\nWhat can we generalize so far?\n* Directives are a way to make standalone UI components, like `\u003Capp-info\u003E`\n* Services are a way to make standalone communication logic, like `forecast` which fetches weather data from a server\n* Routes are a way to manage apps containing more views.\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;&quot;,&quot;files&quot;:{}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/routing/lessons/routing/exercises/routing-generalizations.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/routing/exercises/routing-generalizations&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/routing/lessons/routing/routing.en.yml&quot;,&quot;exercises_order&quot;:[&quot;routing-routing-i&quot;,&quot;routing-routing-ii&quot;,&quot;routing-routing-iii&quot;,&quot;routing-generalizations&quot;],&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/routing/resume&quot;,&quot;unit_slug&quot;:&quot;routing&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false},&quot;course&quot;:{&quot;created_at&quot;:null,&quot;description&quot;:&quot;Learn to build web apps using AngularJS 1.x. By the end of the course, you&#x27;ll be able to use AngularJS to create your own apps.&quot;,&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/learn-angularjs.en.yml&quot;,&quot;id&quot;:&quot;learn-angularjs_en_master&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;meta&quot;:{&quot;authors&quot;:[&quot;lpolepeddi&quot;],&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs&quot;,&quot;stackoverflow_url&quot;:&quot;http://stackoverflow.com/questions/tagged/angularjs&quot;,&quot;glossary_url&quot;:&quot;http://www.codecademy.com/glossary/javascript&quot;,&quot;tags&quot;:[&quot;jquery&quot;,&quot;javascript&quot;,&quot;web development&quot;]},&quot;node_type&quot;:&quot;course&quot;,&quot;revision&quot;:&quot;master&quot;,&quot;slug&quot;:&quot;learn-angularjs&quot;,&quot;title&quot;:&quot;Learn AngularJS&quot;,&quot;units&quot;:{&quot;your-first-app&quot;:{&quot;node_type&quot;:&quot;unit&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;your-first-app&quot;,&quot;title&quot;:&quot;Your First App&quot;,&quot;description&quot;:&quot;Get up and running quickly by building an AngularJS app from scratch.&quot;,&quot;projects&quot;:{&quot;angularjs_bolt-network-1&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs_bolt-network-1&quot;,&quot;title&quot;:&quot;Bolt Network 1&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll create a movie review board using a controller and a view.&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/angularjsbolt-network-1&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/bolt-network-1.jpg&quot;,&quot;preview_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/4/bolt-network-1/index.html&quot;,&quot;objective&quot;:&quot;Bolt Network wants to create an AngularJS app for their program pages. \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/bolt-network-1/index.html\&quot;\u003EHere&#x27;s what it looks like\u003C/a\u003E. The program page displays information about a show&#x27;s airing time on the network.&quot;,&quot;meta&quot;:{&quot;author&quot;:{&quot;fullname&quot;:&quot;Lalith Polepeddi&quot;,&quot;username&quot;:&quot;lpolepeddi&quot;}},&quot;self_assessments&quot;:[{&quot;tasks&quot;:[{&quot;key&quot;:&quot;bolt-network-1_0_0&quot;,&quot;text&quot;:&quot;Create a new module:\n\u003Col type=\&quot;a\&quot;\u003E\n  \u003Cli\u003EIn \u003Cstrong\u003Ejs/app.js\u003C/strong\u003E, create a new module named \u003Ccode\u003EBoltNetworkApp\u003C/code\u003E.\u003C/li\u003E\n  \u003Cli\u003EIn the view, use \u003Ccode\u003Eng-app\u003C/code\u003E to attach the \u003Ccode\u003EBoltNetworkApp\u003C/code\u003E module to the \u003Ccode\u003E\u0026lt;body\u0026gt;\u003C/code\u003E element.\u003C/li\u003E\n\u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;bolt-network-1_0_1&quot;,&quot;text&quot;:&quot;Create a new controller:\n\u003Col type=\&quot;a\&quot;\u003E\n  \u003Cli\u003EIn the controller, make a new property called \u003Ccode\u003E$scope.program\u003C/code\u003E, and set it equal to the following object\n    \u003Cpre\u003E\u003Ccode class=\&quot;lang-javascript\&quot;\u003E{\n  series: \&quot;Sherlock\&quot;,\n  series_img: \&quot;img/sherlock.jpg\&quot;,\n  genre: \&quot;Crime drama\&quot;,\n  season: 3,\n  episode: \&quot;The Empty Hearse\&quot;,\n  description: \&quot;Two years after his reported Reichenbach Fall demise, Sherlock, who has been cleared of all fraud charges against him, returns with Mycroft&#x27;s help to a London under threat of terrorist attack. John has moved on and has a girlfriend, Mary Morstan. Sherlock enlists Molly to assist him, but when John is kidnapped by unknown assailants and is rescued by Sherlock and Mary, John returns to help find the terrorists and an underground plot to blow up the Houses of Parliament during an all night sitting on Guy Fawkes Night.\&quot;,\n  datetime: new Date(2014, 11, 31, 21, 00, 00, 00)\n}\u003C/code\u003E\u003C/pre\u003E\n  \u003C/li\u003E\n  \u003Cli\u003EIn the view, use \u003Ccode\u003Eng-controller\u003C/code\u003E to attach \u003Ccode\u003EMainController\u003C/code\u003E to the \u003Ccode\u003E\u0026lt;div class=\&quot;main\&quot;\u0026gt;\u003C/code\u003E element.\u003C/li\u003E\n\u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;bolt-network-1_0_2&quot;,&quot;text&quot;:&quot;Display the data in the view:\n\u003Col type=\&quot;a\&quot;\u003E\n  \u003Cli\u003EInside \u003Ccode\u003E\u0026lt;div class=\&quot;main\&quot;\u0026gt;\u003C/code\u003E, display the details of \u003Ccode\u003Eprogram\u003C/code\u003E using expressions.\u003C/li\u003E\n  \u003Cli\u003EUse the \u003Ccode\u003Edate\u003C/code\u003E filter to format the \u003Cstrong\u003EDate\u003C/strong\u003E, \u003Cstrong\u003EOn air\u003C/strong\u003E, and \u003Cstrong\u003ETime\u003C/strong\u003E fields as shown \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/bolt-network-1/index.html\&quot;\u003Ein the preview\u003C/a\u003E. Check out \u003Ca href=\&quot;http://www.ng-newsletter.com/posts/beginner2expert-config.html\&quot; target=\&quot;_blank\&quot;\u003Ethis page\u003C/a\u003E for examples. Scroll down to the \&quot;date\&quot; section.\u003C/li\u003E\n\u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_bolt-network-1_0_3&quot;,&quot;text&quot;:&quot;View the result by visiting http://localhost:8000 in the browser.&quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs_bolt-network&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/your-first-app/projects/angularjs_bolt-network-1.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_bolt-network-1&quot;,&quot;unit_slug&quot;:&quot;your-first-app&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false},&quot;angularjs_pizza-planet&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs_pizza-planet&quot;,&quot;title&quot;:&quot;Pizza Planet&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll create a restaurant menu using filters and directives.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/pizza-planet.jpg&quot;,&quot;preview_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/4/pizza-planet/index.html&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/angularjspizza-planet&quot;,&quot;objective&quot;:&quot;Pizza Planet wants to create an AngularJS app for their restaurant&#x27;s menu. \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/pizza-planet/index.html\&quot;\u003EHere&#x27;s what it looks like\u003C/a\u003E. The menu displays the restaurant&#x27;s appetizers, mains, and extras.&quot;,&quot;meta&quot;:{&quot;author&quot;:{&quot;fullname&quot;:&quot;Lalith Polepeddi&quot;,&quot;username&quot;:&quot;lpolepeddi&quot;}},&quot;self_assessments&quot;:[{&quot;tasks&quot;:[{&quot;key&quot;:&quot;pizza-planet_0_0&quot;,&quot;text&quot;:&quot;Create a new module named \u003Ccode\u003EPizzaPlanetApp\u003C/code\u003E in \u003Cstrong\u003Ejs/app.js\u003C/strong\u003E, and then attach it to the \u003Ccode\u003E\u0026lt;body\u0026gt;\u003C/code\u003E element in the view.&quot;},{&quot;key&quot;:&quot;pizza-planet_0_1&quot;,&quot;text&quot;:&quot;Modify the controller:\n\u003Col type=\&quot;a\&quot;\u003E\n  \u003Cli\u003EThere is currently a property called \u003Ccode\u003E$scope.appetizers\u003C/code\u003E containing an array of two objects. Add a third object with the following values:\u003Cbr\u003E\n  \u003Cstrong\u003EName:\u003C/strong\u003E Bruschetta\u003Cbr\u003E\n  \u003Cstrong\u003EDescription:\u003C/strong\u003E Grilled bread garlic, tomatoes, olive oil.\u003Cbr\u003E\n  \u003Cstrong\u003EPrice:\u003C/strong\u003E 4.95\n  \u003C/li\u003E\n  \u003Cli\u003EAttach the controller to the \u003Ccode\u003E\u0026lt;div class=\&quot;main\&quot;\u0026gt;\u003C/code\u003E element.\u003C/li\u003E\n\u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;pizza-planet_0_2&quot;,&quot;text&quot;:&quot;Display the data in the view:\n\u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EInside \u003Ccode\u003E\u0026lt;div class=\&quot;appetizer row\&quot;\u0026gt;\u003C/code\u003E, use \u003Ccode\u003Eng-repeat\u003C/code\u003E to loop through the \u003Ccode\u003Eappetizers\u003C/code\u003E array. Display each appetizer&#x27;s \u003Ccode\u003Ename\u003C/code\u003E, \u003Ccode\u003Edescription\u003C/code\u003E, and \u003Ccode\u003Eprice\u003C/code\u003E using expressions.\u003C/li\u003E\n            \u003Cli\u003EUse the \u003Ccode\u003Ecurrency\u003C/code\u003E filter to format an appetizer&#x27;s price.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;pizza-planet_0_3&quot;,&quot;text&quot;:&quot;View the result by visiting http://localhost:8000 in the browser.&quot;},{&quot;key&quot;:&quot;pizza-planet_0_4&quot;,&quot;text&quot;:&quot;In the controller, add another property called \u003Ccode\u003E$scope.mains\u003C/code\u003E containing an array of three objects. Feel free to use your favorite foods.&quot;},{&quot;key&quot;:&quot;pizza-planet_0_5&quot;,&quot;text&quot;:&quot;In the view, adapt the \u003Ccode\u003E\u0026lt;div class=\&quot;appetizer row\&quot;\u0026gt;\u003C/code\u003E element to create a \u003Ccode\u003E\u0026lt;div class=\&quot;mains row\&quot;\u0026gt;\u003C/code\u003E element. Loop through the \u003Ccode\u003Emains\u003C/code\u003E and display each item using expressions and filters. View the result in the browser.&quot;},{&quot;key&quot;:&quot;pizza-planet_0_6&quot;,&quot;text&quot;:&quot;In the controller, add another property called \u003Ccode\u003E$scope.extras\u003C/code\u003E containing an array of three objects. Feel free to use your favorite sides.&quot;},{&quot;key&quot;:&quot;pizza-planet_0_7&quot;,&quot;text&quot;:&quot;In the view, loop through the \u003Ccode\u003Eextras\u003C/code\u003E and display each item. View the result in the browser.&quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs_pizza-planet&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/your-first-app/projects/angularjs_pizza-planet.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_pizza-planet&quot;,&quot;unit_slug&quot;:&quot;your-first-app&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false},&quot;angularjs_move-log&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs_move-log&quot;,&quot;title&quot;:&quot;MOVE Log&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll create an exercise tracking app using directives.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/move-log.jpg&quot;,&quot;preview_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/4/move-log/index.html&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/angularjsmove-log&quot;,&quot;objective&quot;:&quot;MOVE wants to create an AngularJS app for their workout tracker Log. \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/move-log/index.html\&quot;\u003EHere&#x27;s what it looks like\u003C/a\u003E. The tracker displays a list of exercises. Tapping the + or - changes the number of reps for that exercise.&quot;,&quot;meta&quot;:{&quot;author&quot;:{&quot;fullname&quot;:&quot;Lalith Polepeddi&quot;,&quot;username&quot;:&quot;lpolepeddi&quot;}},&quot;self_assessments&quot;:[{&quot;tasks&quot;:[{&quot;key&quot;:&quot;angularjs_move-log_1_0&quot;,&quot;text&quot;:&quot;Create a new module named \u003Ccode\u003EMoveLogApp\u003C/code\u003E, and then attach it to the \u003Ccode\u003E\u0026lt;body\u0026gt;\u003C/code\u003E element in the view.&quot;},{&quot;key&quot;:&quot;angularjs_move-log_1_1&quot;,&quot;text&quot;:&quot;In the controller, there is a property called \u003Ccode\u003E$scope.exercises\u003C/code\u003E containing an array of objects. Attach the controller to the \u003Ccode\u003E\u0026lt;div class=\&quot;main\&quot;\u0026gt;\u003C/code\u003E element in the view, and then finish the view to display each item in the \u003Ccode\u003Eexercises\u003C/code\u003E array.&quot;},{&quot;key&quot;:&quot;angularjs_move-log_1_2&quot;,&quot;text&quot;:&quot;View the result by visiting http://localhost:8000 in the browser.&quot;},{&quot;key&quot;:&quot;angularjs_move-log_1_3&quot;,&quot;text&quot;:&quot;In the controller, add another property called \u003Ccode\u003E$scope.increase\u003C/code\u003E. Set it equal to a function that takes in the index of the exercise that was clicked, and then adds one to that exercise&#x27;s \u003Ccode\u003Ecount\u003C/code\u003E property.&quot;},{&quot;key&quot;:&quot;angularjs_move-log_1_4&quot;,&quot;text&quot;:&quot;In the view in the \u003Ccode\u003E\u0026lt;span class=\&quot;increase\&quot;\u0026gt;\u003C/code\u003E element, use \u003Ccode\u003Eng-click\u003C/code\u003E to tell AngularJS to run the \u003Ccode\u003Eincrease()\u003C/code\u003E function when clicked. Use \u003Ccode\u003E$index\u003C/code\u003E to pass in the index of the item that was clicked.&quot;},{&quot;key&quot;:&quot;angularjs_move-log_1_5&quot;,&quot;text&quot;:&quot;In the controller, add another property called \u003Ccode\u003E$scope.decrease\u003C/code\u003E. Set it equal to a function that takes in the index of an exercise that was clicked, and then subtracts one from that exercise&#x27;s \u003Ccode\u003Ecount\u003C/code\u003E property. Then in the view use \u003Ccode\u003Eng-click\u003C/code\u003E on the \u003Ccode\u003E\u0026lt;span class=\&quot;decrease\&quot;\u0026gt;\u003C/code\u003E element to trigger the \u003Ccode\u003Edecrease()\u003C/code\u003E function when clicked.&quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs_move-log&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/your-first-app/projects/angularjs_move-log.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_move-log&quot;,&quot;unit_slug&quot;:&quot;your-first-app&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false}},&quot;lessons&quot;:{&quot;your-first-app&quot;:{&quot;node_type&quot;:&quot;lesson&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;your-first-app&quot;,&quot;title&quot;:&quot;Your First App&quot;,&quot;description&quot;:&quot;Get up and running quickly by building an AngularJS app from scratch.&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/your-first-app&quot;,&quot;exercises&quot;:{&quot;your-first-app-hello-angularjs-i&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;your-first-app-hello-angularjs-i&quot;,&quot;title&quot;:&quot;Hello AngularJS I&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-your-first-app&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;js/app.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;AngularJS is a JavaScript web framework aimed to make web apps simple to build and easy to maintain.\n\nWe&#x27;ll start by building a simple AngularJS app. After making this app, we&#x27;ll generalize a few steps that can be used to build more complex apps. By the end of this course, you&#x27;ll be able to use this sequence of steps to jumpstart your own AngularJS apps.&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;Let\\&#x27;s get started by making a simple AngularJS app. We\\&#x27;ll explain each step in the next exercise. \\n\\n\\\nIn **app.js**, type in the contents exactly as you see here: \\n\\\n```javascript \\n\\\nvar app = angular.module(\&quot;myApp\&quot;, []); \\n\\\n```&#x27;, function(Tests, callback) {\n  Tests.karmaTest(&#x27;karma1.js&#x27;, callback);\n});\ncheckpoint(&#x27;Open up **index.html**. Modify the `\u003Cbody\u003E` tag so it looks like this: \\n\\\n```html \\n\\\n\u003Cbody ng-app=\&quot;myApp\&quot;\u003E \\n\\\n```&#x27;, function(Tests, callback) {\n\n    Tests.webSCT(&#x27;webSCT1.js&#x27;, callback);\n});\ncheckpoint(\&quot;Open up **js/controllers/MainController.js**. Type in the contents exactly as you see here: \\n\\\n```javascript \\n\\\napp.controller(&#x27;MainController&#x27;, [&#x27;$scope&#x27;, function($scope) { \\n\\\n  $scope.title = &#x27;Top Sellers in Books&#x27;; \\n\\\n}]); \\n\\\n```\&quot;, function(Tests, callback) {\n  Tests.karmaTest(&#x27;karma2.js&#x27;, callback);\n});\ncheckpoint(&#x27;Go to **index.html**. Modify the `\u003Cdiv class=\&quot;main\&quot;\u003E` tag so it looks like this: \\n\\\n```html \\n\\\n\u003Cdiv class=\&quot;main\&quot; ng-controller=\&quot;MainController\&quot;\u003E \\n\\\n```&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n        if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;\u003Cdiv class=[\\&#x27;\&quot;]main[\\&#x27;\&quot;] ng-controller=[\\&#x27;\&quot;]MainController[\\&#x27;\&quot;]\u003E&#x27;)) {\n          return {pass: true};\n        }\n\nreturn {pass: false, errors: { friendly: \&quot;Make sure to add ng-controller to \u003Cdiv class=\\\&quot;main\\\&quot;\u003E.\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n    }, callback);\n });\ncheckpoint(&#x27;In **index.html** inside `\u003Cdiv class=\&quot;main\&quot;\u003E`, modify the `\u003Ch1\u003E` element so it looks like this: \\n\\\n```html \\n\\\n\u003Ch1\u003E{{ title }}\u003C/h1\u003E \\n\\\n```\\n\\nView the AngularJS app in the browser by visiting http://localhost:8000. The \&quot;Top Sellers in Books\&quot; content appears as the heading of the page.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n        if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;\u003Ch1\u003E\\\\s*{{\\\\s*title\\\\s*}}\\\\s*\u003C/h1\u003E&#x27;)) {\n          return {pass: true};\n        }\n\nreturn {pass: false, errors: { friendly: \&quot;Make sure to display the title in the view.\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n    }, callback);\n});&quot;,&quot;files&quot;:{&quot;karma1.js&quot;:&quot;describe(&#x27;myApp&#x27;, function(){\n\n  beforeEach(module(&#x27;myApp&#x27;));\n\n  it(&#x27;In app.js, make sure to type var app = angular.module(\&quot;myApp\&quot;, []);&#x27;, inject(function($controller) {\n  }));\n\n});&quot;,&quot;karma2.js&quot;:&quot;describe(&#x27;myApp&#x27;, function(){\n\n  beforeEach(module(&#x27;myApp&#x27;));\n\n  it(&#x27;Make sure that the \&quot;Top Sellers in Books\&quot; title appears as the heading of the page.&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n\n    expect(scope.title).toBe(&#x27;Top Sellers in Books&#x27;);\n  }));\n\n});\n&quot;,&quot;webSCT1.js&quot;:&quot;$expect(&#x27;body&#x27;).to.have.attr(&#x27;ng-app&#x27;, &#x27;myApp&#x27;);\n&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/your-first-app/lessons/your-first-app/exercises/your-first-app-hello-angularjs-i.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/your-first-app/exercises/your-first-app-hello-angularjs-i&quot;},&quot;your-first-app-hello-angularjs-ii&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;your-first-app-hello-angularjs-ii&quot;,&quot;title&quot;:&quot;Hello AngularJS II&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-your-first-app&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;js/app.js&quot;},{&quot;filename&quot;:&quot;index.html&quot;},{&quot;filename&quot;:&quot;js/controllers/MainController.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;Awesome! You built an AngularJS app. How does it work?\n\n1. In **app.js**, we created a new _module_ named `MyApp`. A _module_ contains the different components of an AngularJS app.\n2. Then, in **index.html** we added `\u003Cbody ng-app=\&quot;myApp\&quot;\u003E`. The `ng-app` is called a _directive_. It tells AngularJS that the `MyApp` module will live within the `\u003Cbody\u003E` element, termed the application&#x27;s _scope_. In other words, we used the `ng-app` directive to define the application scope.\n3. In **MainController.js** we created a new _controller_ named `MainController`. A _controller_ manages the app&#x27;s data. Here we use the property `title` to store a string, and attach it to `$scope`.\n4. Then, in **index.html**, we added `\u003Cdiv class=\&quot;main\&quot; ng-controller=\&quot;MainController\&quot;\u003E`. Like `ng-app`, `ng-controller` is a _directive_ that defines the controller scope. This means that properties attached to `$scope` in `MainController` become available to use within `\u003Cdiv class=\&quot;main\&quot;\u003E`.\n5. Inside `\u003Cdiv class=\&quot;main\&quot;\u003E` we accessed `$scope.title` using `{{ title }}`. This is called an _expression_. Expressions are used to display values on the page.\n6. The value of `title` showed up when we viewed the app in the browser.&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;Both the controller `MainController` and the view **index.html** have access to `$scope`. This means we can use `$scope` to communicate between the controller and the view. In the controller, change the value of `title` to your own string.&#x27;,\n  function(Tests, callback) {\n    Tests.karmaTest(&#x27;karma1.js&#x27;, callback);\n  });\ncheckpoint(&#x27;Likewise, any new properties attached to `$scope` will become available to use in the view. In the controller, attach `promo` to `$scope`, and set its value to your own string.&#x27;,\n  function(Tests, callback) {\n    Tests.karmaTest(&#x27;karma2.js&#x27;, callback);\n  });\ncheckpoint(&#x27;In the view under the `\u003Ch1\u003E` element, add an `\u003Ch2\u003E` element and use an expression to display `promo` on the page.&#x27;, function(Tests, callback) {\n   Tests.componentTest(function(Components) {\n        if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;\u003Ch2\u003E\\\\s*{{\\\\s*promo\\\\s*}}\\\\s*\u003C/h2\u003E&#x27;)) {\n          return {pass: true};\n        }\n\nreturn {pass: false, errors: { friendly: \&quot;Make sure to display promo in the view.\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n    }, callback);\n });&quot;,&quot;files&quot;:{&quot;karma1.js&quot;:&quot;describe(&#x27;myApp&#x27;, function(){\n\n  beforeEach(module(&#x27;myApp&#x27;));\n\n  it(&#x27;Did you change the value of title to your own string?&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n\n    expect(scope.title).not.toBe(&#x27;Top Sellers in Books&#x27;);\n  }));\n\n});\n&quot;,&quot;karma2.js&quot;:&quot;describe(&#x27;myApp&#x27;, function(){\n\n  beforeEach(module(&#x27;myApp&#x27;));\n\n  it(&#x27;Did you add $scope.promo to the controller?&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n\n    expect(scope.title).toBeDefined();\n    expect(scope.promo).toBeDefined();\n  }));\n\n});\n&quot;,&quot;sct3.js&quot;:&quot;//TODO(KM) check for h2 under h1 for promo\n&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/your-first-app/lessons/your-first-app/exercises/your-first-app-hello-angularjs-ii.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/your-first-app/exercises/your-first-app-hello-angularjs-ii&quot;},&quot;your-first-app-workflow&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;your-first-app-workflow&quot;,&quot;title&quot;:&quot;Workflow&quot;,&quot;setup&quot;:{&quot;command&quot;:&quot;cp .index_3.html index.html&quot;},&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-your-first-app&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;index.html&quot;},{&quot;filename&quot;:&quot;js/controllers/MainController.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;So far this is our typical workflow when making an AngularJS app:\n1. Create a module, and use `ng-app` in the view to define the application scope.\n2. Create a controller, and use `ng-controller` in the view to define the controller scope.\n3. Add data to `$scope` in the controller so they can be displayed with expressions in the view.\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;Let\\&#x27;s add more data to the controller and display them in the view. In the controller, attach another property to `$scope` named `product`. Set it equal to an object with the following properties: \\n\\\n```javascript \\n\\\n{ \\n\\\n  name: \\&#x27;The Book of Trees\\&#x27;, \\n\\\n  price: 19 \\n\\\n} \\n\\\n```&#x27;, function(Tests, callback) {\n  Tests.karmaTest(&#x27;karma1.js&#x27;, callback);\n});\n\ncheckpoint(&#x27;Then, in **index.html** inside `\u003Cp class=\&quot;title\&quot;\u003E`, access the product\\&#x27;s name with `product.name` and display it using an expression.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n        if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;{{\\\\s*product.name\\\\s*}}&#x27;)) {\n          return {pass: true};\n        }\n\nreturn {pass: false, errors: { friendly: \&quot;Did you display the product name?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n    }, callback);\n});\n\ncheckpoint(&#x27;In `\u003Cp class=\&quot;price\&quot;\u003E`, access and display the product\\&#x27;s price.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n        if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;{{\\\\s*product.price\\\\s*}}&#x27;)) {\n          return {pass: true};\n        }\n\nreturn {pass: false, errors: { friendly: \&quot;Did you display the product price?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n    }, callback);\n});\n&quot;,&quot;files&quot;:{&quot;karma1.js&quot;:&quot;describe(&#x27;myApp&#x27;, function(){\n\n  beforeEach(module(&#x27;myApp&#x27;));\n\n  it(&#x27;Did you add $scope.product to the controller?&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n\n    expect(scope.product).toEqual({name: \&quot;The Book of Trees\&quot;, price: 19});\n  }));\n\n});&quot;,&quot;sct2.js&quot;:&quot;//TOD(KM) check product price exists in p class = title\n&quot;,&quot;sct.js&quot;:&quot;//TODO(KM) check product name exists in p class = title\n&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/your-first-app/lessons/your-first-app/exercises/your-first-app-workflow.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/your-first-app/exercises/your-first-app-workflow&quot;},&quot;your-first-app-filters-i&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;your-first-app-filters-i&quot;,&quot;title&quot;:&quot;Filters I&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-your-first-app&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;index.html&quot;},{&quot;filename&quot;:&quot;js/controllers/MainController.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;Well done! In the controller, you used an object to group together related data about a product. Then in the view, you used dot notation to display the values.&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;Currently the product price shows up as a number. It would be better to format it as a currency. Rather than change the data in the controller, let\\&#x27;s use an AngularJS _filter_ to format the data in the view. \\n\\n\\\nIn **index.html** in `\u003Cp class=\&quot;price\&quot;\u003E`, change the expression to look like this: \\n\\\n``` \\n\\\n{{ product.price | currency }} \\n\\\n```\\n\\nWe\\&#x27;ll explain how this works in the next exercise.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n      if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;\\\\|\\\\s*currency\\\\s*}}&#x27;)) {\n        return {pass: true};\n      }\n      return {pass: false, errors: { friendly: \&quot;Did you add the currency filter to the price?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n  }, callback);\n});\n&quot;,&quot;files&quot;:{}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/your-first-app/lessons/your-first-app/exercises/your-first-app-filters-i.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/your-first-app/exercises/your-first-app-filters-i&quot;},&quot;your-first-app-filters-ii&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;your-first-app-filters-ii&quot;,&quot;title&quot;:&quot;Filters II&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-your-first-app&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;index.html&quot;},{&quot;filename&quot;:&quot;js/controllers/MainController.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;Great! The product price changed from a number to a formatted currency. How does it work?\n\n1. AngularJS gets the value of `product.price`.\n2. It sends this number into the `currency` filter. The pipe symbol (`|`) takes the output on the left and \&quot;pipes\&quot; it to the right.\n3. The filter outputs a formatted currency with the dollar sign and the correct decimal places.\n\nIn this way, filters help to separate the content in the controller from its presentation in the view.\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;AngularJS comes with [a few more built-in filters](https://docs.angularjs.org/api/ng/filter). Let\\&#x27;s use two more. \\n\\n\\\nIn **MainController.js** inside `$scope.product`, add a third property named `pubdate`: \\n\\\n``` \\n\\\npubdate: new Date(\\&#x27;2014\\&#x27;, \\&#x27;03\\&#x27;, \\&#x27;08\\&#x27;) \\n\\\n```&#x27;, function(Tests, callback) {             Tests.karmaTest(&#x27;karma.js&#x27;, callback);           });\n\ncheckpoint(&#x27;In **index.html** inside `\u003Cp class=\&quot;date\&quot;\u003E`, display the product\\&#x27;s `pubdate`.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n        if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;{{\\\\s*product.pubdate&#x27;)) {\n          return {pass: true};\n        }\n\nreturn {pass: false, errors: { friendly: \&quot;Did you display the pubdate?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n    }, callback);\n});\n\ncheckpoint(&#x27;Format the product\\&#x27;s `pubdate` by piping it to the `date` filter.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n        if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;\\\\|\\\\s*date\\\\s*&#x27;)) {\n          return {pass: true};\n        }\n\nreturn {pass: false, errors: { friendly: \&quot;Did you add the date filter to pubdate?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n    }, callback);\n});\n\ncheckpoint(&#x27;Format the product\\&#x27;s `name` by piping it to the `uppercase` filter.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n        if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;\\\\|\\\\s*uppercase\\\\s*}}&#x27;)) {\n          return {pass: true};\n        }\n\nreturn {pass: false, errors: { friendly: \&quot;Did you add the uppercase filter to the product name?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n    }, callback);\n});\n&quot;,&quot;files&quot;:{&quot;karma.js&quot;:&quot;describe(&#x27;myApp&#x27;, function(){\n\n  beforeEach(module(&#x27;myApp&#x27;));\n\n  it(&#x27;Did you add pubdate as a third property inside $scope.product?&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n\n    expect(scope.product.pubdate).toEqual( new Date(&#x27;2014&#x27;, &#x27;03&#x27;, &#x27;08&#x27;));\n  }));\n\n});\n&quot;,&quot;sct.js&quot;:&quot;//TODO(km) check dsplay pub date\n&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/your-first-app/lessons/your-first-app/exercises/your-first-app-filters-ii.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/your-first-app/exercises/your-first-app-filters-ii&quot;},&quot;your-first-app-ng-repeat-i&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;your-first-app-ng-repeat-i&quot;,&quot;title&quot;:&quot;ng-repeat I&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-your-first-app&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;index.html&quot;},{&quot;filename&quot;:&quot;js/controllers/MainController.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;Let&#x27;s do a quick review:\n* A **module** contains the different components of an AngularJS app\n* A **controller** manages the app&#x27;s data\n* An **expression** displays values on the page\n* A **filter** formats the value of an expression\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;Let\\&#x27;s add more data to the controller and display them in the view. \\n\\n\\\nIn the controller, delete the `$scope.product` object.&#x27;, function(Tests, callback) {             Tests.karmaTest(&#x27;karma.js&#x27;, callback);           });\ncheckpoint(&#x27;Attach a new property to `$scope` named `products`. Set it equal to an array of objects. Type in the contents exactly as you see here: \\n\\\n```javascript \\n\\\n[ \\n\\\n  { \\n\\\n    name: \\&#x27;The Book of Trees\\&#x27;, \\n\\\n    price: 19, \\n\\\n    pubdate: new Date(\\&#x27;2014\\&#x27;, \\&#x27;03\\&#x27;, \\&#x27;08\\&#x27;), \\n\\\n    cover: \\&#x27;img/the-book-of-trees.jpg\\&#x27; \\n\\\n  }, \\n\\\n  { \\n\\\n    name: \\&#x27;Program or be Programmed\\&#x27;, \\n\\\n    price: 8, \\n\\\n    pubdate: new Date(\\&#x27;2013\\&#x27;, \\&#x27;08\\&#x27;, \\&#x27;01\\&#x27;), \\n\\\n    cover: \\&#x27;img/program-or-be-programmed.jpg\\&#x27; \\n\\\n  } \\n\\\n] \\n\\\n```&#x27;, function(Tests, callback) {             Tests.karmaTest(&#x27;karma2.js&#x27;, callback);           });\ncheckpoint(&#x27;In the view inside `\u003Cdiv class=\&quot;main\&quot;\u003E`, delete the `\u003Cdiv class=\&quot;col-md-6\&quot;\u003E` element. \\n\\\n\\n\\\nReplace it with this HTML. Type in the contents exactly as you see here: \\n\\\n```html \\n\\\n\u003Cdiv ng-repeat=\&quot;product in products\&quot; class=\&quot;col-md-6\&quot;\u003E \\n\\\n  \u003Cdiv class=\&quot;thumbnail\&quot;\u003E \\n\\\n    \u003Cimg src=\&quot;img/the-book-of-trees.jpg\&quot;\u003E \\n\\\n    \u003Cp class=\&quot;title\&quot;\u003E{{ product.name }}\u003C/p\u003E \\n\\\n    \u003Cp class=\&quot;price\&quot;\u003E{{ product.price | currency }}\u003C/p\u003E \\n\\\n    \u003Cp class=\&quot;date\&quot;\u003E{{ product.pubdate | date }}\u003C/p\u003E \\n\\\n  \u003C/div\u003E \\n\\\n\u003C/div\u003E \\n\\\n``` \\n\\\n\\n\\\nYou\\&#x27;ll see that both products have the same cover image. Let\\&#x27;s fix this bug in the next exercise. Click Next to continue.&#x27;, function(Tests, callback) {\n  Tests.webSCT(&#x27;sct4.js&#x27;, callback);\n});&quot;,&quot;files&quot;:{&quot;karma2.js&quot;:&quot;describe(&#x27;myApp&#x27;, function(){\n\n  beforeEach(module(&#x27;myApp&#x27;));\n\n  it(&#x27;Did you set $scope.products equal to an array of objects?&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n\n    expect(scope.products.length).toBe(2);\n  }));\n\n  it(&#x27;In $scope.products, did you add \&quot;The Book of Trees\&quot; object?&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n    var product = scope.products[0];\n    expect(product).toEqual({ name: &#x27;The Book of Trees&#x27;,\n      price: 19,\n      pubdate: new Date(&#x27;2014&#x27;, &#x27;03&#x27;, &#x27;08&#x27;),\n      cover: &#x27;img/the-book-of-trees.jpg&#x27;\n    });\n  }));\n\n  it(&#x27;In $scope.products, did you add the \&quot;Program or be Programmed\&quot; object?&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n\n    var product = scope.products[1];\n    expect(product).toEqual({\n    name: &#x27;Program or be Programmed&#x27;,\n    price: 8,\n    pubdate: new Date(&#x27;2013&#x27;, &#x27;08&#x27;, &#x27;01&#x27;),\n    cover: &#x27;img/program-or-be-programmed.jpg&#x27;\n  } );\n  }));\n});&quot;,&quot;karma.js&quot;:&quot;describe(&#x27;myApp&#x27;, function(){\n\n  beforeEach(module(&#x27;myApp&#x27;));\n\n  it(&#x27;Did you delete $scope.product?&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n\n    expect(scope.product).not.toBeDefined();\n  }));\n});\n&quot;,&quot;sct4.js&quot;:&quot;$expect(&#x27;.main .col-md-6&#x27;).to.be.above(1);\n&quot;,&quot;sct3.js&quot;:&quot;$expect(&#x27;.main .col-md-6&#x27;).not.to.exist(&#x27;Remember to delete the \u003Cdiv class=\&quot;col-md-6\&quot;\u003E inside \u003Cdiv class=\&quot;main\&quot;\u003E&#x27;);&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/your-first-app/lessons/your-first-app/exercises/your-first-app-ng-repeat-i.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/your-first-app/exercises/your-first-app-ng-repeat-i&quot;},&quot;your-first-app-ng-repeat-ii&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;your-first-app-ng-repeat-ii&quot;,&quot;title&quot;:&quot;ng-repeat II&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-your-first-app&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;index.html&quot;},{&quot;filename&quot;:&quot;js/controllers/MainController.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;Well done! You got both books in `$scope.products` to show up in the view. How does it work?\n\n1. In the controller, we used `products` to store an array containing two objects.\n2. Then in the view, we added `\u003Cdiv ng-repeat=\&quot;product in products\&quot;\u003E`. Like `ng-app` and `ng-controller`, the `ng-repeat` is a directive. It loops through an array and displays each element. Here, the `ng-repeat` repeats all the HTML inside `\u003Cdiv class=\&quot;col-md-6\&quot;\u003E` for each element in the `products` array.\n\nIn this way, `ng-repeat` shows both products in the `$scope.products` array. Instead of writing the same HTML twice as before, we just use `ng-repeat` to generate the HTML twice.\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;The problem now is that both products have the same image. Let\\&#x27;s fix this. \\n\\n\\\nIn the view inside `\u003Cdiv class=\&quot;col-md-6\&quot;\u003E`, replace \\n\\\n```javascript \\n\\\n\u003Cimg src=\&quot;img/the-book-of-trees.jpg\&quot;\u003E \\n\\\n``` \\n\\\nwith \\n\\\n```javascript \\n\\\n\u003Cimg ng-src=\&quot;{{ product.cover }}\&quot;\u003E \\n\\\n``` \\n\\\nThe `ng-src` is a directive that sets the `\u003Cimg\u003E` element\\&#x27;s `src` to a property in the controller.&#x27;, function(Tests, callback) {             Tests.webSCT(&#x27;sct1.js&#x27;, callback);\n});&quot;,&quot;files&quot;:{&quot;sct1.js&quot;:&quot;$expect(&#x27;img&#x27;).to.have.attr(&#x27;ng-src&#x27;);&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/your-first-app/lessons/your-first-app/exercises/your-first-app-ng-repeat-ii.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/your-first-app/exercises/your-first-app-ng-repeat-ii&quot;},&quot;your-first-app-directives&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;your-first-app-directives&quot;,&quot;title&quot;:&quot;Directives&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-your-first-app&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;index.html&quot;},{&quot;filename&quot;:&quot;js/controllers/MainController.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;We&#x27;ve used a few directives so far - `ng-app`, `ng-controller`, `ng-repeat`, and `ng-src`. What can we generalize about directives?\n\nDirectives bind behavior to HTML elements. When the app runs, AngularJS walks through each HTML element looking for directives. When it finds one, AngularJS triggers that behavior (like attaching a scope or looping through an array).\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;In the controller, add two of your favorite books to the `$scope.products` array. \\n\\n\\\nThe view will update as the `ng-repeat` loops the new elements in the `$scope.products` array.&#x27;, function(Tests, callback) {             Tests.karmaTest(&#x27;karma.js&#x27;, callback);           });&quot;,&quot;files&quot;:{&quot;karma.js&quot;:&quot;describe(&#x27;myApp&#x27;, function(){\n\n  beforeEach(module(&#x27;myApp&#x27;));\n\n  it(&#x27;Did you add two more books to the $scope.products array?&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n\n    expect(scope.products.length).toBe(4);\n  }));\n\n});&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/your-first-app/lessons/your-first-app/exercises/your-first-app-directives.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/your-first-app/exercises/your-first-app-directives&quot;},&quot;your-first-app-ng-click-i&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;your-first-app-ng-click-i&quot;,&quot;title&quot;:&quot;ng-click I&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-your-first-app&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;index.html&quot;},{&quot;filename&quot;:&quot;js/controllers/MainController.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;So far we&#x27;ve made a static AngularJS app by adding properties in the controller and displaying them in the view. AngularJS is a framework for building dynamic web apps, so let&#x27;s start to make this app interactive.\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;In the controller in the `$scope.products` array, add a new property named `likes` to each element. Set all `likes` properties to `0`.&#x27;, function(Tests, callback) {             Tests.karmaTest(&#x27;karma.js&#x27;, callback);           });\n\ncheckpoint(&#x27;In the view under `\u003Cp class=\&quot;date\&quot;\u003E`, type in a rating element: \\n\\\n```html \\n\\\n\u003Cdiv class=\&quot;rating\&quot;\u003E \\n\\\n  \u003Cp class=\&quot;likes\&quot;\u003E+ \u003C/p\u003E \\n\\\n\u003C/div\u003E \\n\\\n```\\n\\\nInside `\u003Cp class=\&quot;likes\&quot;\u003E`, display a product\\&#x27;s `likes` using an expression.&#x27;, function(Tests, callback) {             Tests.componentTest(function(Components) {\n      if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;{{\\\\s*product.likes\\\\s*}}&#x27;)) {\n        return {pass: true};\n      }\n\n      return {pass: false, errors: { friendly: \&quot;Did you display the product&#x27;s likes?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n\n  }, callback);\n});\n\ncheckpoint(&#x27;Back in the controller after `$scope.products`, attach a new property to `$scope` named `plusOne`. Set it equal to function. Type in the contents exactly as you see here: \\n\\\n```javascript \\n\\\nfunction(index) { \\n\\\n  $scope.products[index].likes += 1; \\n\\\n}; \\n\\\n```&#x27;, function(Tests, callback) {             Tests.karmaTest(&#x27;karma3.js&#x27;, callback);           });\n\ncheckpoint(&#x27;In the view modify `\u003Cp class=\&quot;likes\&quot;\u003E` to look like this: \\n\\\n```html \\n\\\n\u003Cp class=\&quot;likes\&quot; ng-click=\&quot;plusOne($index)\&quot;\u003E \\n\\\n``` \\n\\n\\\nView the AngularJS app in the browser. Click on the +0 in each product tile.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n      if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;\u003Cp class=[\\&#x27;\&quot;]likes[\\&#x27;\&quot;] ng-click=[\\&#x27;\&quot;]plusOne\\\\(\\\\$index\\\\)[\\&#x27;\&quot;]\u003E&#x27;)) {\n        return {pass: true};\n      }\n\n      return {pass: false, errors: { friendly: \&quot;Did you update the `\u003Cp class=&#x27;likes&#x27;\u003E`?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n\n  }, callback);\n});\n&quot;,&quot;files&quot;:{&quot;karma.js&quot;:&quot;describe(&#x27;myApp&#x27;, function(){\n\n  beforeEach(module(&#x27;myApp&#x27;));\n\n  it(&#x27;Make sure to set the likes property to 0.&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n\n    for (var i = 0; i \u003C scope.products.length; i++) {\n      expect(scope.products[i].likes).toBe(0);\n    }\n  }));\n\n});\n&quot;,&quot;karma3.js&quot;:&quot;describe(&#x27;myApp&#x27;, function(){\n\n  beforeEach(module(&#x27;myApp&#x27;));\n\n  it(&#x27;Did you create the function $scope.plusOne()?&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n\n    expect(scope.plusOne).toBeDefined();\n  }));\n\n  it(&#x27;On the \u003Cp class=\&quot;likes\&quot;\u003E element, make sure to use ng-click to call the plusOne() function.&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n    scope.plusOne(0);\n    expect(scope.products[0].likes).toBe(1);\n  }));\n});\n&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/your-first-app/lessons/your-first-app/exercises/your-first-app-ng-click-i.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/your-first-app/exercises/your-first-app-ng-click-i&quot;},&quot;your-first-app-ng-click-ii&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;your-first-app-ng-click-ii&quot;,&quot;title&quot;:&quot;ng-click II&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-your-first-app&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;index.html&quot;},{&quot;filename&quot;:&quot;js/controllers/MainController.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;Great! Each time you click on the number of likes, the number goes up. How does it work?\n\n1. The `ng-click` is a directive. When `\u003Cp class=\&quot;likes\&quot;\u003E` is clicked, `ng-click` tells AngularJS to run the `plusOne()` function in the controller.\n2. The `plusOne()` function gets the index of the product that was clicked, and then adds one to that product&#x27;s `likes` property.\n\nNotice that the `plusOne()` doesn&#x27;t interact with the view at all; it just updates the controller. Any change made to the controller shows up in the view.\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;In the controller in the `$scope.products` array, add a new property named `dislikes` to each element. Set `dislikes` to `0`.&#x27;, function(Tests, callback) {             Tests.karmaTest(&#x27;karma.js&#x27;, callback);           });\n\ncheckpoint(&#x27;In the view under `\u003Cp class=\&quot;likes\&quot;\u003E`, add an element for `\u003Cp class=\&quot;dislikes\&quot;\u003E`. Then display a product\\&#x27;s `dislikes` using an expression.&#x27;, function(Tests, callback) {             Tests.componentTest(function(Components) {\n      if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;{{\\\\s*product.dislikes\\\\s*}}&#x27;)) {\n        return {pass: true};\n      }\n      return {pass: false, errors: { friendly: \&quot;Did you display the product&#x27;s dislikes?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n  }, callback);\n});\n\ncheckpoint(&#x27;Back in the controller after `$scope.products`, attach a new property to `$scope` named `minusOne`. Set it equal to a function that adds one to a product\\&#x27;s `dislikes` property. Adapt the code from the `plusOne()` function to do this.&#x27;, function(Tests, callback) {             Tests.karmaTest(&#x27;karma3.js&#x27;, callback);           });\n\ncheckpoint(&#x27;In the view, use `ng-click` to trigger the `minusOne()` function when `\u003Cp class=\&quot;dislikes\&quot;\u003E` is clicked. \\n\\n View the AngularJS app in the browser. Click on the -0 in each product tile.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n      if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;ng-click&#x27;)) {\n        return {pass: true};\n      }\n      return {pass: false, errors: { friendly: \&quot;Did you add ng-click to trigger the minusOne() function?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n  }, callback);\n});\n&quot;,&quot;files&quot;:{&quot;karma.js&quot;:&quot;describe(&#x27;myApp&#x27;, function(){\n\n  beforeEach(module(&#x27;myApp&#x27;));\n\n  it(&#x27;Make sure the set the dislikes property to 0.&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n\n    for (var i = 0; i \u003C scope.products.length; i++) {\n      expect(scope.products[i].dislikes).toBe(0);\n    }\n  }));\n\n});&quot;,&quot;karma3.js&quot;:&quot;describe(&#x27;myApp&#x27;, function(){\n\n  beforeEach(module(&#x27;myApp&#x27;));\n\n  it(&#x27;Did you create the function $scope.minusOne()?&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n\n    expect(scope.minusOne).toBeDefined();\n  }));\n\n  it(&#x27;On the \u003Cp class=\&quot;dislikes\&quot;\u003E element, make sure to use ng-click to call the minusOne() function.&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n    scope.minusOne(0);\n    expect(scope.products[0].dislikes).toBe(1);\n  }));\n});&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/your-first-app/lessons/your-first-app/exercises/your-first-app-ng-click-ii.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/your-first-app/exercises/your-first-app-ng-click-ii&quot;},&quot;your-first-app-generalizations&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;your-first-app-generalizations&quot;,&quot;title&quot;:&quot;Generalizations&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-your-first-app&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;Image&quot;:{&quot;url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/img/yfa-generalizations.svg&quot;,&quot;_schema&quot;:&quot;Image&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;Congratulations! You built an AngularJS app from scratch. What can we generalize so far?\n\n1. A user visits the AngularJS app.\n2. The _view_ presents the app&#x27;s data through the use of _expressions_, _filters_, and _directives_. Directives bind new behavior HTML elements.\n3. A user clicks an element in the view. If the element has a directive, AngularJS runs the function.\n4. The function in the _controller_ updates the state of the data. \n5. The view automatically changes and displays the updated data. The page doesn&#x27;t need to reload at any point.&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/your-first-app/lessons/your-first-app/exercises/your-first-app-generalizations.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/your-first-app/exercises/your-first-app-generalizations&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/your-first-app/lessons/your-first-app/your-first-app.en.yml&quot;,&quot;exercises_order&quot;:[&quot;your-first-app-hello-angularjs-i&quot;,&quot;your-first-app-hello-angularjs-ii&quot;,&quot;your-first-app-workflow&quot;,&quot;your-first-app-filters-i&quot;,&quot;your-first-app-filters-ii&quot;,&quot;your-first-app-ng-repeat-i&quot;,&quot;your-first-app-ng-repeat-ii&quot;,&quot;your-first-app-directives&quot;,&quot;your-first-app-ng-click-i&quot;,&quot;your-first-app-ng-click-ii&quot;,&quot;your-first-app-generalizations&quot;],&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/your-first-app/resume&quot;,&quot;unit_slug&quot;:&quot;your-first-app&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/your-first-app/your-first-app.en.yml&quot;,&quot;lessons_order&quot;:[&quot;your-first-app&quot;],&quot;projects_order&quot;:[&quot;angularjs_bolt-network-1&quot;,&quot;angularjs_pizza-planet&quot;,&quot;angularjs_move-log&quot;],&quot;quizzes&quot;:{&quot;angularjs-quiz-1&quot;:{&quot;node_type&quot;:&quot;quiz&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs-quiz-1&quot;,&quot;title&quot;:&quot;AngularJS Quiz 1&quot;,&quot;questions&quot;:[{&quot;question&quot;:{&quot;text&quot;:&quot;What is a module?&quot;},&quot;answers&quot;:[{&quot;text&quot;:&quot;A module is a another word for an expression.&quot;},{&quot;text&quot;:&quot;A module manages the app&#x27;s data&quot;},{&quot;text&quot;:&quot;A module contains the different components of an AngularJS app.&quot;},{&quot;text&quot;:&quot;A module is the entire AngularJS app.&quot;}],&quot;correct_index&quot;:3},{&quot;question&quot;:{&quot;text&quot;:&quot;What is the correct syntax for creating a module?&quot;},&quot;answers&quot;:[{&quot;text&quot;:&quot;var app = module(\&quot;myApp\&quot;, []);&quot;},{&quot;text&quot;:&quot;var app = angular.module(\&quot;myApp\&quot;, []);&quot;},{&quot;text&quot;:&quot;app = module(\&quot;myApp\&quot;, []);&quot;},{&quot;text&quot;:&quot;app = angular.module(\&quot;myApp\&quot;, []);&quot;}],&quot;correct_index&quot;:2},{&quot;question&quot;:{&quot;text&quot;:&quot;What is a controller?&quot;},&quot;answers&quot;:[{&quot;text&quot;:&quot;A controller contains the different components of the AngularJS app.&quot;},{&quot;text&quot;:&quot;A controller displays values in the view.&quot;},{&quot;text&quot;:&quot;A controller manages the app&#x27;s data&quot;},{&quot;text&quot;:&quot;A controller serves a filter for an expression.&quot;}],&quot;correct_index&quot;:3},{&quot;question&quot;:{&quot;text&quot;:&quot;The associated code defines MainController. How would to add a property called &#x27;title&#x27; and attach it to $scope?&quot;,&quot;snippet&quot;:{&quot;code&quot;:[&quot;app.controller(&#x27;MainController&#x27;, [&#x27;$scope&#x27;, function($scope) {\n... \n}]);&quot;],&quot;language&quot;:&quot;javascript&quot;}},&quot;answers&quot;:[{&quot;text&quot;:&quot;&#x27;Kite Runner&#x27;&quot;},{&quot;text&quot;:&quot;title = &#x27;Kite Runner&#x27;&quot;},{&quot;text&quot;:&quot;scope.title = &#x27;Kite Runner&#x27;&quot;},{&quot;text&quot;:&quot;$scope.title = &#x27;Kite Runner&#x27;&quot;}],&quot;correct_index&quot;:4},{&quot;question&quot;:{&quot;text&quot;:&quot;What is a directive?&quot;},&quot;answers&quot;:[{&quot;text&quot;:&quot;A directive creates an HTML element.&quot;},{&quot;text&quot;:&quot;A directive binds behavior to an HTML element.&quot;},{&quot;text&quot;:&quot;A directive is a property that is attached to $scope.&quot;},{&quot;text&quot;:&quot;A directive filters data.&quot;}],&quot;correct_index&quot;:2},{&quot;question&quot;:{&quot;text&quot;:&quot;What is the purpose of the ng-app directive in the associated code?&quot;,&quot;snippet&quot;:{&quot;code&quot;:[&quot;\u003Cbody ng-app=\&quot;myApp\&quot;\u003E&quot;],&quot;language&quot;:&quot;javascript&quot;}},&quot;answers&quot;:[{&quot;text&quot;:&quot;The ng-app directive defines the application&#x27;s scope.&quot;},{&quot;text&quot;:&quot;The ng-app directive displays an element in the controller.&quot;},{&quot;text&quot;:&quot;The ng-app directive repeats elements in the view from an array in the controller.&quot;},{&quot;text&quot;:&quot;The ng-app directive defines the controller.&quot;}],&quot;correct_index&quot;:1},{&quot;question&quot;:{&quot;text&quot;:&quot;What is an expression?&quot;},&quot;answers&quot;:[{&quot;text&quot;:&quot;An expression is used to display values on a page.&quot;},{&quot;text&quot;:&quot;An expression is any regular expression used in AngularJS.&quot;},{&quot;text&quot;:&quot;An expression defines a function in the controller.&quot;},{&quot;text&quot;:&quot;An expression updates the data in an AngularJS app.&quot;}],&quot;correct_index&quot;:1},{&quot;question&quot;:{&quot;text&quot;:&quot;What is correct syntax for displaying information with an expression?&quot;},&quot;answers&quot;:[{&quot;text&quot;:&quot;| | name | |&quot;},{&quot;text&quot;:&quot;$ name $&quot;},{&quot;text&quot;:&quot;{ name }&quot;},{&quot;text&quot;:&quot;{{ name }}&quot;}],&quot;correct_index&quot;:4},{&quot;question&quot;:{&quot;text&quot;:&quot;Given the array in MainController, which directive would you use to loop through each element in the array to display the name an price?&quot;,&quot;snippet&quot;:{&quot;code&quot;:[&quot;$scope.items = [ \n  { \n    name: &#x27;Green Tea Ice cream&#x27;, \n    price: 3, \n  }, \n  { \n    name: &#x27;Molten Chocolate Cake&#x27;, \n    price: 4, \n  } \n]&quot;],&quot;language&quot;:&quot;javascript&quot;}},&quot;answers&quot;:[{&quot;text&quot;:&quot;ng-controller&quot;},{&quot;text&quot;:&quot;ng-app&quot;},{&quot;text&quot;:&quot;ng-src&quot;},{&quot;text&quot;:&quot;ng-repeat&quot;}],&quot;correct_index&quot;:4},{&quot;question&quot;:{&quot;text&quot;:&quot;How would you format dateTime into a date?&quot;},&quot;answers&quot;:[{&quot;text&quot;:&quot;{{ dateTime \u003E\u003E date }}&quot;},{&quot;text&quot;:&quot;{{ date(dateTime) }}&quot;},{&quot;text&quot;:&quot;{{ dateTime } | date }&quot;},{&quot;text&quot;:&quot;{{ dateTime | date }}&quot;}],&quot;correct_index&quot;:4}],&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/your-first-app/quizs/angularjs-quiz-1.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs-quiz-1&quot;,&quot;unit_slug&quot;:&quot;your-first-app&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false}},&quot;quizzes_order&quot;:[&quot;angularjs-quiz-1&quot;]},&quot;directives&quot;:{&quot;node_type&quot;:&quot;unit&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;directives&quot;,&quot;title&quot;:&quot;Directives&quot;,&quot;description&quot;:&quot;Learn how to use directives to make standalone UI components.&quot;,&quot;projects&quot;:{&quot;angularjs_bolt-network-2&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs_bolt-network-2&quot;,&quot;title&quot;:&quot;Bolt Network 2&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll add custom directives to your movie review board.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/bolt-network-2.jpg&quot;,&quot;preview_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/4/bolt-network-2/index.html&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/angularjsbolt-network-2&quot;,&quot;objective&quot;:&quot;Continue building out the Bolt Network project, which you \u003Ca href=\&quot;http://www.codecademy.com/en/practice/learn-angularjs/topics/your-first-app/projects/angularjs_bolt-network-1\&quot; target=\&quot;_blank\&quot;\u003Estarted here\u003C/a\u003E. Bolt Network wants to add more shows to their program page. \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/bolt-network-2/index.html\&quot;\u003EHere&#x27;s what it looks like\u003C/a\u003E.&quot;,&quot;meta&quot;:{&quot;author&quot;:{&quot;fullname&quot;:&quot;Lalith Polepeddi&quot;,&quot;username&quot;:&quot;lpolepeddi&quot;}},&quot;self_assessments&quot;:[{&quot;tasks&quot;:[{&quot;key&quot;:&quot;angularjs_bolt-network-2_0_0&quot;,&quot;text&quot;:&quot;Make a new folder \u003Cstrong\u003Ejs/directives/\u003C/strong\u003E. Inside this folder, create a file \u003Cstrong\u003Ejs/directives/programListing.js\u003C/strong\u003E. In this file,create a new directive named \u003Ccode\u003EprogramListing\u003C/code\u003E:\n          \u003Cul\u003E\n            \u003Cli\u003EUse \u003Ccode\u003Eapp.directive\u003C/code\u003E to create the new directive\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003Erestrict\u003C/code\u003E to create a new Element\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003Escope\u003C/code\u003E to specify that we&#x27;ll pass information into this directive through an attribute named \u003Ccode\u003Elisting\u003C/code\u003E\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003EtemplateUrl\u003C/code\u003E to tell this directive to use the \u003Cstrong\u003Ejs/directives/programListing.html\u003C/strong\u003E file\u003C/li\u003E\n          \u003C/ul\u003E\n&quot;},{&quot;key&quot;:&quot;angularjs_bolt-network-2_0_1&quot;,&quot;text&quot;:&quot;Include this new JavaScript file in the view as a \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_bolt-network-2_0_2&quot;,&quot;text&quot;:&quot;Next, write the directive&#x27;s template. Make a new file \u003Cstrong\u003Ejs/directives/programListing.html\u003C/strong\u003E. Move the HTML from \u003Cstrong\u003Eindex.html\u003C/strong\u003E inside the \u003Ccode\u003E.content\u003C/code\u003E div into the directive&#x27;s template file.&quot;},{&quot;key&quot;:&quot;angularjs_bolt-network-2_0_3&quot;,&quot;text&quot;:&quot;The \u003Ccode\u003EprogramListing\u003C/code\u003E directive takes in information through the \u003Ccode\u003Elisting\u003C/code\u003E attribute. The data in \u003Ccode\u003Elisting\u003C/code\u003E becomes available to use in the directive&#x27;s template. Update the expressions in the directive&#x27;s template so that it uses \u003Ccode\u003Elisting\u003C/code\u003E to display each item.&quot;},{&quot;key&quot;:&quot;angularjs_bolt-network-2_0_4&quot;,&quot;text&quot;:&quot;In the view, use the \u003Ccode\u003E\u0026lt;program-listing\u0026gt;\u003C/code\u003E directive to display the details of \u003Ccode\u003Eprogram\u003C/code\u003E.&quot;},{&quot;key&quot;:&quot;angularjs_bolt-network-2_0_5&quot;,&quot;text&quot;:&quot;Add another object to the controller. Feel free to use your favorite TV show.&quot;},{&quot;key&quot;:&quot;angularjs_bolt-network-2_0_6&quot;,&quot;text&quot;:&quot;Use another \u003Ccode\u003E\u0026lt;program-listing\u0026gt;\u003C/code\u003E directive to display the details of the new object.&quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs_bolt-network&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/directives/projects/angularjs_bolt-network-2.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_bolt-network-2&quot;,&quot;unit_slug&quot;:&quot;directives&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false},&quot;angularjs_gameboard&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs_gameboard&quot;,&quot;title&quot;:&quot;Gameboard&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll create a custom directive that displays the score of a game.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/gameboard.jpg&quot;,&quot;preview_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/4/gameboard/index.html&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/angularjsgameboard&quot;,&quot;objective&quot;:&quot;Gameboard is creating an AngularJS app for their scoreboard that displays NBA scores from around the league. \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/gameboard/index.html\&quot;\u003EHere&#x27;s what it looks like\u003C/a\u003E.&quot;,&quot;meta&quot;:{&quot;author&quot;:{&quot;fullname&quot;:&quot;Lalith Polepeddi&quot;,&quot;username&quot;:&quot;lpolepeddi&quot;}},&quot;self_assessments&quot;:[{&quot;tasks&quot;:[{&quot;key&quot;:&quot;angularjs_gameboard_0_0&quot;,&quot;text&quot;:&quot;Create a new module named \u003Ccode\u003EGameboardApp\u003C/code\u003E, and then attach it to the \u003Ccode\u003E\u0026lt;body\u0026gt;\u003C/code\u003E element in the view.&quot;},{&quot;key&quot;:&quot;angularjs_gameboard_0_1&quot;,&quot;text&quot;:&quot;In the controller, there is a property called \u003Ccode\u003E$scope.scores\u003C/code\u003E containing an array of objects with information about each game. Attach the controller to the \u003Ccode\u003E\u0026lt;div class=\&quot;main\&quot;\u0026gt;\u003C/code\u003E element in the view.&quot;},{&quot;key&quot;:&quot;angularjs_gameboard_0_2&quot;,&quot;text&quot;:&quot;Make a new file \u003Cstrong\u003Ejs/directives/game.js\u003C/strong\u003E. In it, create a new directive named \u003Ccode\u003Egame\u003C/code\u003E:\n          \u003Cul\u003E\n            \u003Cli\u003EUse \u003Ccode\u003Eapp.directive\u003C/code\u003E to create the new directive\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003Erestrict\u003C/code\u003E to create a new Element\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003Escope\u003C/code\u003E to specify that we&#x27;ll pass information into this directive through an attribute named \u003Ccode\u003Einfo\u003C/code\u003E\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003EtemplateUrl\u003C/code\u003E to tell this directive to use the \u003Cstrong\u003Ejs/directives/game.html\u003C/strong\u003E file\u003C/li\u003E\n          \u003C/ul\u003E\n&quot;},{&quot;key&quot;:&quot;angularjs_gameboard_0_3&quot;,&quot;text&quot;:&quot;Include this new JavaScript file in \u003Cstrong\u003Eindex.html\u003C/strong\u003E as a \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_gameboard_0_4&quot;,&quot;text&quot;:&quot;Next, write the directive&#x27;s template. In the file \u003Cstrong\u003Ejs/directives/game.html\u003C/strong\u003E, finish the template so it displays a game&#x27;s details. Looking at the format of the data in \u003Ccode\u003E$scope.scores\u003C/code\u003E, each game has five pieces of data - \u003Ccode\u003Evisitor_team\u003C/code\u003E, \u003Ccode\u003Ehome_team\u003C/code\u003E, \u003Ccode\u003Eperiod\u003C/code\u003E, \u003Ccode\u003Evisitor_score\u003C/code\u003E, and \u003Ccode\u003Ehome_score\u003C/code\u003E.&quot;},{&quot;key&quot;:&quot;angularjs_gameboard_0_5&quot;,&quot;text&quot;:&quot;In the view inside the \u003Ccode\u003E.row\u003C/code\u003E div, use the \u003Ccode\u003E\u0026lt;game\u0026gt;\u003C/code\u003E directive to display the details of each game:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EOn the \u003Ccode\u003E\u0026lt;game\u0026gt;\u003C/code\u003E directive, use \u003Ccode\u003Eng-repeat\u003C/code\u003E to loop through the \u003Ccode\u003Escores\u003C/code\u003E.\u003C/li\u003E\n            \u003Cli\u003EPass each item into the \u003Ccode\u003E\u0026lt;game\u0026gt;\u003C/code\u003E directive&#x27;s \u003Ccode\u003Einfo\u003C/code\u003E attribute.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_gameboard_0_6&quot;,&quot;text&quot;:&quot;View the result by visiting http://localhost:8000 in the browser.&quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs_gameboard&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/directives/projects/angularjs_gameboard.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_gameboard&quot;,&quot;unit_slug&quot;:&quot;directives&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false},&quot;angularjs_feedster&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs_feedster&quot;,&quot;title&quot;:&quot;Feedster&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll build a news feed using custom directives.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/feedster.jpg&quot;,&quot;preview_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/4/feedster/index.html&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/angularjsfeedster&quot;,&quot;objective&quot;:&quot;Feedster is creating an AngularJS app for their news feed. \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/feedster/index.html\&quot;\u003EHere&#x27;s what it looks like\u003C/a\u003E. Click on each post&#x27;s +1 button.&quot;,&quot;meta&quot;:{&quot;author&quot;:{&quot;fullname&quot;:&quot;Lalith Polepeddi&quot;,&quot;username&quot;:&quot;lpolepeddi&quot;}},&quot;self_assessments&quot;:[{&quot;tasks&quot;:[{&quot;key&quot;:&quot;angularjs_feedster_0_0&quot;,&quot;text&quot;:&quot;Create a new module named \u003Ccode\u003EFeedsterApp\u003C/code\u003E, and then attach it to the \u003Ccode\u003E\u0026lt;body\u0026gt;\u003C/code\u003E element in the view.&quot;},{&quot;key&quot;:&quot;angularjs_feedster_0_1&quot;,&quot;text&quot;:&quot;In the controller, there is a property called \u003Ccode\u003E$scope.posts\u003C/code\u003E containing an array of objects with information about each post. Attach the controller to the \u003Ccode\u003E\u0026lt;div class=\&quot;posts\&quot;\u0026gt;\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_feedster_0_2&quot;,&quot;text&quot;:&quot;Create a directive named \u003Ccode\u003EfeedsterPost\u003C/code\u003E:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EMake a new file \u003Cstrong\u003Ejs/directives/feedsterPost.js\u003C/strong\u003E. In it, create a new directive named \u003Ccode\u003EfeedsterPost\u003C/code\u003E.\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003Escope\u003C/code\u003E to specify that we&#x27;ll pass information into this directive through an attribute named \u003Ccode\u003Epost\u003C/code\u003E\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003EtemplateUrl\u003C/code\u003E to tell this directive to use the \u003Cstrong\u003Ejs/directives/feedsterPost.html\u003C/strong\u003E file\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_feedster_0_3&quot;,&quot;text&quot;:&quot;Include this new JavaScript file in index.html as a \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_feedster_0_4&quot;,&quot;text&quot;:&quot;Next, write the directive&#x27;s template. In the file \u003Cstrong\u003Ejs/directives/feedsterPost.html\u003C/strong\u003E, finish the template so it displays a post&#x27;s details. Looking at the format of the data in \u003Ccode\u003E$scope.posts\u003C/code\u003E, display each post&#x27;s author name, author avatar, comment image, and comment text. Remember to use \u003Ccode\u003Eng-src\u003C/code\u003E to display images.&quot;},{&quot;key&quot;:&quot;angularjs_feedster_0_5&quot;,&quot;text&quot;:&quot;In the view inside the \u003Ccode\u003E.post\u003C/code\u003E div, use the \u003Ccode\u003E\u0026lt;feedster-post\u0026gt;\u003C/code\u003E directive to display the details of each post:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EOn the \u003Ccode\u003E.post\u003C/code\u003E div, use \u003Ccode\u003Eng-repeat\u003C/code\u003E to loop through \u003Ccode\u003Eposts\u003C/code\u003E.\u003C/li\u003E\n            \u003Cli\u003EPass each item into the \u003Ccode\u003E\u0026lt;feedster-post\u0026gt;\u003C/code\u003E directive&#x27;s \u003Ccode\u003Epost\u003C/code\u003E attribute.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_feedster_0_6&quot;,&quot;text&quot;:&quot;View the result by visiting http://localhost:8000 in the browser.&quot;},{&quot;key&quot;:&quot;angularjs_feedster_0_7&quot;,&quot;text&quot;:&quot;Create another directive named \u003Ccode\u003EplusOne\u003C/code\u003E:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EMake a new file \u003Cstrong\u003Ejs/directives/plusOne.js\u003C/strong\u003E. In it, create a new directive named \u003Ccode\u003EplusOne\u003C/code\u003E.\u003C/li\u003E\n            \u003Cli\u003ESet \u003Ccode\u003Escope\u003C/code\u003E to an empty object \u003Ccode\u003E{}}\u003C/code\u003E\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003EtemplateUrl\u003C/code\u003E to tell this directive to use the \u003Cstrong\u003Ejs/directives/plusOne.html\u003C/strong\u003E file\u003C/li\u003E\n            \u003Cli\u003EAdd a \u003Ccode\u003Elink\u003C/code\u003E option, and set it to this function named \u003Ccode\u003Elike()\u003C/code\u003E:\n              \u003Cpre\u003E\u003Ccode class=\&quot;lang-javascript\&quot;\u003Efunction(scope, element, attrs) {\n  scope.like = function() {\n    element.toggleClass(&#x27;btn-like&#x27;);\n  }\n}\u003C/code\u003E\u003C/pre\u003E\n              The \u003Ccode\u003Elike()\u003C/code\u003E function toggles the class \u003Ccode\u003Ebtn-like\u003C/code\u003E on the element.\n            \u003C/li\u003E\n          \n        \n\u003Cli\u003EInclude this new JavaScript file in index.html as a \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E element.\u003C/li\u003E\n        \n\u003Cli\u003EIn the directive&#x27;s template \u003Cstrong\u003Ejs/directives/plusOne.html\u003C/strong\u003E, use \u003Ccode\u003Eng-click\u003C/code\u003E to run the \u003Ccode\u003Elike()\u003C/code\u003E function when the \u003Ccode\u003E\u0026lt;button\u0026gt;\u003C/code\u003E is clicked.\u003C/li\u003E\n\u003Cli\u003EIn the view inside the \u003Ccode\u003E.post\u003C/code\u003E div, use the \u003Ccode\u003E\u0026lt;plus-one\u0026gt;\u003C/code\u003E directive to display a +1 button for each post. View the result in the browser.\u003C/li\u003E\n\u003C/ol\u003E     &quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs_feedster&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/directives/projects/angularjs_feedster.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_feedster&quot;,&quot;unit_slug&quot;:&quot;directives&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false}},&quot;lessons&quot;:{&quot;directives&quot;:{&quot;node_type&quot;:&quot;lesson&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;directives&quot;,&quot;title&quot;:&quot;Directives&quot;,&quot;description&quot;:&quot;Learn how to use directives to make standalone UI components.&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/directives&quot;,&quot;exercises&quot;:{&quot;directives-directives-i&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;directives-directives-i&quot;,&quot;title&quot;:&quot;Directives I&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-directives&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;js/controllers/MainController.js&quot;},{&quot;filename&quot;:&quot;index.html&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;Here&#x27;s an AngularJS app for a mobile app store:\n* In the controller **MainController.js**, there are three objects `$scope.move`, `$scope.shutterbugg`, and `$scope.gameboard` that each contain info about an app, like its title and price.\n* In the view **index.html** in the `.main` section, each app is displayed inside a `.card` div.\n\nBut looking at the view, the same code is written over and over again to display each app. This is repetitive and error-prone. Let&#x27;s fix this.\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(\&quot;In the new file **js/directives/appInfo.js**, type in this code: \\n\\\n```javascript \\n\\\napp.directive(&#x27;appInfo&#x27;, function() { \\n\\\n  return { \\n\\\n    restrict: &#x27;E&#x27;, \\n\\\n    scope: { \\n\\\n      info: &#x27;=&#x27; \\n\\\n    }, \\n\\\n    templateUrl: &#x27;js/directives/appInfo.html&#x27; \\n\\\n  }; \\n\\\n}); \\n\\\n```\&quot;, function(Tests, callback) {\n  Tests.karmaTest(&#x27;karma1.js&#x27;, callback);\n});\ncheckpoint(&#x27;Include this new JavaScript file in **index.html** in line 48 as a `\u003Cscript\u003E` element.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n      if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;\u003Cscript src=[\\&#x27;\&quot;]js\\/directives\\/appInfo.js[\\&#x27;\&quot;]\u003E&#x27;)) {\n        return {pass: true};\n      }\n\n        return {pass: false, errors: { friendly: \&quot;Did you include js/directives/appInfo.js as a script element in the view?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n\n  }, callback);\n});\ncheckpoint(&#x27;In the new file **js/directives/appInfo.html**. Type in this HTML to display an app\\&#x27;s info: \\n\\\n```html \\n\\\n\u003Cimg class=\&quot;icon\&quot; ng-src=\&quot;{{ info.icon }}\&quot;\u003E \\n\\\n\u003Ch2 class=\&quot;title\&quot;\u003E{{ info.title }}\u003C/h2\u003E \\n\\\n\u003Cp class=\&quot;developer\&quot;\u003E{{ info.developer }}\u003C/p\u003E \\n\\\n\u003Cp class=\&quot;price\&quot;\u003E{{ info.price | currency }}\u003C/p\u003E \\n\\\n```&#x27;, function(Tests, callback) {\n  Tests.karmaTest(&#x27;karma2.js&#x27;, callback);\n});\ncheckpoint(&#x27;In **index.html**, replace the contents of the first `.card` div with the new `\u003Capp-info\u003E` element: \\n\\\n```html \\n\\\n\u003Cdiv class=\&quot;card\&quot;\u003E \\n\\\n  \u003Capp-info info=\&quot;move\&quot;\u003E\u003C/app-info\u003E \\n\\\n\u003C/div\u003E \\n\\\n```&#x27;, function(Tests, callback) {\n  Tests.webSCT(&#x27;sct1.js&#x27;, callback);\n});\ncheckpoint(&#x27;Do the same for the second and third `.card` divs. Replace their contents with \\n\\\n```\u003Capp-info info=\&quot;shutterbugg\&quot;\u003E\u003C/app-info\u003E``` \\n\\\nand \\n\\\n```\u003Capp-info info=\&quot;gameboard\&quot;\u003E\u003C/app-info\u003E```\\n\\n\\\nView the AngularJS app in the browser by typing http://localhost:8000.&#x27;, function(Tests, callback) {Tests.componentTest(function(Components) {\n      if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;\u003Capp-info info=[\\&#x27;\&quot;]gameboard[\\&#x27;\&quot;]\u003E\\\\s*\u003C/app-info\u003E&#x27;)) {\n        return {pass: true};\n      }\n\n        return {pass: false, errors: { friendly: \&quot;Did you add \u003Capp-info\u003E directives to display shutterbugg and gameboard?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n\n  }, callback);\n});&quot;,&quot;files&quot;:{&quot;karma1.js&quot;:&quot;describe(&#x27;directives&#x27;, function(){\n\n  beforeEach(module(&#x27;AppMarketApp&#x27;));\n  beforeEach(module(&#x27;js/directives/appInfo.html&#x27;));\n\n  beforeEach(inject(function($rootScope, $compile, $injector) {\n    elm = angular.element(\&quot;\u003Capp-info info=&#x27;info&#x27;\u003E\u003C/app-info\u003E\&quot;);\n\n    scope = $rootScope;\n    scope.info = {icon: \&quot;https://www.google.com/images/srpr/logo11w.png\&quot;, title: \&quot;hello\&quot;, developer: \&quot;kelvin\&quot;, price: 19};\n\n    $compile(elm)(scope);\n    scope.$digest();\n  }));\n\n  it(&#x27;Did you make a directive named appInfo?&#x27;, inject(function($controller) {\n    expect(elm.hasClass(&#x27;ng-isolate-scope&#x27;)).toBeTruthy();\n  }));\n\n});\n&quot;,&quot;karma2.js&quot;:&quot;describe(&#x27;directives&#x27;, function(){\n\n  beforeEach(module(&#x27;AppMarketApp&#x27;));\n  beforeEach(module(&#x27;js/directives/appInfo.html&#x27;));\n\n  beforeEach(inject(function($rootScope, $compile, $injector) {\n    elm = angular.element(\&quot;\u003Capp-info info=&#x27;info&#x27;\u003E\u003C/app-info\u003E\&quot;);\n\n    scope = $rootScope;\n    scope.info = {icon: \&quot;https://www.google.com/images/srpr/logo11w.png\&quot;, title: \&quot;hello\&quot;, developer: \&quot;kelvin\&quot;, price: 19};\n\n    $compile(elm)(scope);\n    scope.$digest();\n  }));\n\n  it(&#x27;Did you display an app\\&#x27;s info in js/directives/appInfo.html?&#x27;, inject(function($controller) {\n    var title = elm.find(&#x27;h2&#x27;);\n\n    expect(title.text()).toBe(&#x27;hello&#x27;);\n  }));\n\n});\n&quot;,&quot;sct1.js&quot;:&quot;$expect(&#x27;app-info&#x27;).to.exist(&#x27;Did you replace the contents of the first .card div with the \u003Capp-info\u003E element?&#x27;);&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/directives/lessons/directives/exercises/directives-directives-i.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/directives/exercises/directives-directives-i&quot;},&quot;directives-directives-ii&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;directives-directives-ii&quot;,&quot;title&quot;:&quot;Directives II&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-directives&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;js/directives/appInfo.js&quot;},{&quot;filename&quot;:&quot;index.html&quot;},{&quot;filename&quot;:&quot;js/directives/appInfo.html&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;What did we just do? We wrote code to teach the browser a new HTML element `\u003Capp-info\u003E`, and used it in the view to display each app&#x27;s details.\n\nFirst in **js/directives/appInfo.js**, we made a new _directive_. We used `app.directive` to create a new directive named `&#x27;appInfo&#x27;`. It returns an object with three options:\n1. `restrict` specifies how the directive will be used in the view. The `&#x27;E&#x27;` means it will be used as a new HTML element.\n2. `scope` specifies that we will pass information into this directive through an attribute named `info`. The `=` tells the directive to look for an attribute named `info` in the `\u003Capp-info\u003E` element, like this:\n    ```javascript\n    \u003Capp-info info=\&quot;shutterbugg\&quot;\u003E\u003C/app-info\u003E\n    ```\n    The data in `info` becomes available to use in the template given by `templateURL`.\n3. `templateUrl` specifies the HTML to use in order to display the data in `scope.info`. Here we use the HTML in **js/directives/appInfo.html**.\n\nLooking at **js/directives/appInfo.html**, we define the HTML to display details about an app, like its title and price. We use expressions and filters to display the data.\n\nThen in **index.html** we use the new directive as the HTML element `\u003Capp-info\u003E`. We pass in objects from the controller&#x27;s scope (`$scope.shutterbugg`) into the `\u003Capp-info\u003E` element&#x27;s `info` attribute so that it displays.\n&quot;,&quot;instructions&quot;:&quot;Click **Next** to continue.&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/directives/lessons/directives/exercises/directives-directives-ii.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/directives/exercises/directives-directives-ii&quot;},&quot;directives-directives-iii&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;directives-directives-iii&quot;,&quot;title&quot;:&quot;Directives III&quot;,&quot;setup&quot;:{&quot;command&quot;:&quot;cp js/controllers/.MainController_3.js js/controllers/MainController.js&quot;},&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-directives&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;js/controllers/MainController.js&quot;},{&quot;filename&quot;:&quot;index.html&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;Why is creating your own directives useful?\n1. **Readability.** Directives let you write expressive HTML. Looking at **index.html** you can understand the app&#x27;s behavior just by reading the HTML. \n2. **Reusability.** Directives let you create self-contained units of functionality. We could easily plug in this directive into another AngularJS app and avoid writing a lot of repetitive HTML.&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;In the controller, there is a new property `$scope.forecast`. Display this property in the view by creating another `\u003Cdiv class=\&quot;card\&quot;\u003E` element containing an `\u003Capp-info\u003E` element.&#x27;, function(Tests, callback) {\n  Tests.webSCT(&#x27;sct1.js&#x27;, callback);\n});&quot;,&quot;files&quot;:{&quot;sct1.js&quot;:&quot;var pass = false;\n$(&#x27;app-info&#x27;).each(function() { if ($(this).attr(&#x27;info&#x27;) === \&quot;forecast\&quot;) { pass = true; }; });\nif (!pass) {$expect(&#x27;not-exist&#x27;).to.exist(&#x27;Add an app-info with info = forecast&#x27;);}\n&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/directives/lessons/directives/exercises/directives-directives-iii.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/directives/exercises/directives-directives-iii&quot;},&quot;directives-built-in-and-custom-directives&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;directives-built-in-and-custom-directives&quot;,&quot;title&quot;:&quot;Built-in and Custom Directives&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-directives&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;js/controllers/MainController.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;We know that AngularJS comes with a few built-in directives like `ng-repeat` and `ng-click`.\n\nWe&#x27;ve seen that AngularJS makes it possible to create your own custom directives, such as `\u003Capp-info\u003E`.\n\nWe can use Angular&#x27;s built-in directives together with custom directives to create more readable apps.\n\nFor reference, here&#x27;s how to use `ng-repeat`:\n```html\n\u003Cdiv ng-repeat=\&quot;product in products\&quot;\u003E\n  \u003Cimg ng-src=\&quot;{{ product.cover }}\&quot;\u003E\n  \u003Cp class=\&quot;title\&quot;\u003E{{ product.name }}\u003C/p\u003E\n\u003C/div\u003E\n```\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(\&quot;In the controller, create a new property `$scope.apps`. Set it equal to an array of objects: \\n\\\n```javascript \\n\\\n[ \\n\\\n  { \\n\\\n    icon: &#x27;img/move.jpg&#x27;, \\n\\\n    title: &#x27;MOVE&#x27;, \\n\\\n    developer: &#x27;MOVE, Inc.&#x27;, \\n\\\n    price: 0.99 \\n\\\n  }, \\n\\\n  { \\n\\\n    icon: &#x27;img/shutterbugg.jpg&#x27;, \\n\\\n    title: &#x27;Shutterbugg&#x27;, \\n\\\n    developer: &#x27;Chico Dusty&#x27;, \\n\\\n    price: 2.99 \\n\\\n  } \\n\\\n] \\n\\\n```\&quot;, function(Tests, callback) {\n  Tests.karmaTest(&#x27;karma.js&#x27;, callback);\n});\n\ncheckpoint(&#x27;Add two more objects to the array describing your favorite apps. Make sure to define the four properties for each app.&#x27;, function(Tests, callback) {\n  Tests.karmaTest(&#x27;karma2.js&#x27;, callback);\n});\n\ncheckpoint(&#x27;In the view, use `ng-repeat` to loop through `$scope.apps` and display each element. To do this, add `ng-repeat` to a `\u003Cdiv class=\&quot;card\&quot;\u003E`, and then use the custom directive `\u003Capp-info\u003E` to display each element.&#x27;, function(Tests, callback) {\n  Tests.webSCT(&#x27;sct1.js&#x27;, callback);\n});&quot;,&quot;files&quot;:{&quot;karma2.js&quot;:&quot;describe(&#x27;AppMarketApp&#x27;, function(){\n\n  beforeEach(module(&#x27;AppMarketApp&#x27;));\n\n  it(&#x27;Remember to add two more apps to $scope.apps.&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n\n    expect(scope.apps).toBeDefined();\n    expect(scope.apps.length).toBeGreaterThan(3);\n  }));\n\n});\n&quot;,&quot;sct1.js&quot;:&quot;$expect(&#x27;.card&#x27;).to.have.attr(&#x27;ng-repeat&#x27;);\n\n$expect(&#x27;app-info&#x27;).to.be.above(2);&quot;,&quot;karma.js&quot;:&quot;describe(&#x27;AppMarketApp&#x27;, function(){\n\n  beforeEach(module(&#x27;AppMarketApp&#x27;));\n\n  it(&#x27;Did you create $scope.apps and set it equal to an array?&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n\n    expect(scope.apps).toBeDefined();\n    expect(scope.apps.length).toBeGreaterThan(1);\n  }));\n\n});&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/directives/lessons/directives/exercises/directives-built-in-and-custom-directives.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/directives/exercises/directives-built-in-and-custom-directives&quot;},&quot;directives-install-app-i&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;directives-install-app-i&quot;,&quot;title&quot;:&quot;installApp I&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-directives&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;js/directives/installApp.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;Directives are a core feature of AngularJS. So far we&#x27;ve used custom directives to simply display static content, but they can do more than this. It&#x27;s possible to bake interactivity into directives.\n\nLet&#x27;s start creating another directive that reacts to a user&#x27;s click.\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;In the new file **js/directives/installApp.js**, create a new directive named `installApp`. Refer to the `appInfo` directive for an example: \\n\\\n* use `app.directive` to create a new directive named `installApp` \\n\\\n* use the `restrict` option to create a new Element \\n\\\n* set the scope option to an empty object `{}` \\n\\\n* use the `templateUrl` option to tell this directive to use the **js/directives/installApp.html** file&#x27;, function(Tests, callback) {\n  Tests.karmaTest(&#x27;karma.js&#x27;, callback);\n});\n\ncheckpoint(&#x27;Include this new JavaScript file in **index.html** as a `\u003Cscript\u003E` element.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n      if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;\u003Cscript src=[\\&#x27;\&quot;]js\\/directives\\/installApp.js[\\&#x27;\&quot;]\u003E&#x27;)) {\n        return {pass: true};\n      }\n\n        return {pass: false, errors: { friendly: \&quot;Make sure to include js/directives/installApp.js as a new \u003Cscript\u003E element in the view.\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n\n  }, callback);\n});\n\ncheckpoint(\&quot;In the `installApp` directive, add a fourth option named `link`, and type in the following function: \\n\\\n```javascript \\n\\\nfunction(scope, element, attrs) { \\n\\\n  scope.buttonText = \\\&quot;Install\\\&quot;, \\n\\\n  scope.installed = false, \\n\\n\\\n  scope.download = function() { \\n\\\n    element.toggleClass(&#x27;btn-active&#x27;); \\n\\\n    if(scope.installed) { \\n\\\n      scope.buttonText = \\\&quot;Install\\\&quot;; \\n\\\n      scope.installed = false; \\n\\\n    } else { \\n\\\n      scope.buttonText = \\\&quot;Uninstall\\\&quot;; \\n\\\n      scope.installed = true; \\n\\\n    } \\n\\\n  } \\n\\\n} \\n\\\n```\&quot;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n      if (Components.CodeEditor.codeContains(&#x27;js/directives/installApp.js&#x27;, &#x27;link: function\\\\(scope, element, attrs\\\\)&#x27;)) {\n        return {pass: true};\n      }\n\n        return {pass: false, errors: { friendly: \&quot;Did you add the function to installApp.js?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n\n  }, callback);\n});\n&quot;,&quot;files&quot;:{&quot;karma.js&quot;:&quot;describe(&#x27;directives&#x27;, function(){\n\n  beforeEach(module(&#x27;AppMarketApp&#x27;));\n  beforeEach(module(&#x27;js/directives/installApp.html&#x27;));\n\n  beforeEach(inject(function($rootScope, $compile, $injector) {\n    elm = angular.element(\&quot;\u003Cinstall-app\u003E\u003C/install-app\u003E\&quot;);\n\n    scope = $rootScope;\n\n    $compile(elm)(scope);\n    scope.$digest();\n  }));\n\n  it(&#x27;Did you create a new directive named installApp?&#x27;, inject(function($controller) {\n    expect(elm.hasClass(&#x27;ng-isolate-scope&#x27;)).toBeTruthy();\n  }));\n\n});\n&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/directives/lessons/directives/exercises/directives-install-app-i.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/directives/exercises/directives-install-app-i&quot;},&quot;directives-install-app-ii&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;directives-install-app-ii&quot;,&quot;title&quot;:&quot;installApp II&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-directives&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;js/directives/installApp.html&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;We used `app.directive` to create a new directive named `&#x27;installApp&#x27;`.\n* The directive contains the three options `restrict`, `scope`, and `templateUrl` that we saw before in the `&#x27;appInfo&#x27;` directive.\n* It also contains a fourth option `link`. The `link` is used to create interactive directives that respond to user actions.\n\nThe link function takes three inputs:\n1. `scope` refers to the directive&#x27;s scope. Any new properties attached to `$scope` will become available to use in the directive&#x27;s template.\n2. `element` refers to the directive&#x27;s HTML element.\n3. `attrs` contains the element&#x27;s attributes.\n\nInside the `link` function, there are two properties `buttonText` and `installed`, and the function `download()`. We&#x27;ll use these in the directive&#x27;s template next.\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;Next, write the directive\\&#x27;s template: \\n\\n\\\nIn the new file **js/directives/installApp.html**. Type in the following HTML: \\n\\\n```html \\n\\\n\u003Cbutton class=\&quot;btn btn-active\&quot; ng-click=\&quot;download()\&quot;\u003E \\n\\\n  {{ buttonText }} \\n\\\n\u003C/button\u003E \\n\\\n```&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n    if (Components.CodeEditor.codeContains(&#x27;js/directives/installApp.html&#x27;, &#x27;\u003Cbutton\\\\s*class=[\\&#x27;\&quot;]btn btn-active[\\&#x27;\&quot;]\\\\s*ng-click=[\\&#x27;\&quot;]download\\\\(\\\\)[\\&#x27;\&quot;]\u003E&#x27;)) {\n      return {pass: true};\n    }\n\n      return {pass: false, errors: { friendly: \&quot;Did you write the template for the installApp directive?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n\n  }, callback);\n});\n&quot;,&quot;files&quot;:{}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/directives/lessons/directives/exercises/directives-install-app-ii.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/directives/exercises/directives-install-app-ii&quot;},&quot;directives-install-app-iii&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;directives-install-app-iii&quot;,&quot;title&quot;:&quot;installApp III&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-directives&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;index.html&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;The template uses Angular&#x27;s built-in `ng-click` directive. When the button is clicked, `ng-click` will tell AngularJS to run the `download()` function in the directive.\n\nThe `download()` function uses the `scope.installed` property to check if an app is installed. When an app is installed, `download()` does three things:\n* toggles the `.btn-active` class\n* changes the button text to \&quot;Uninstall\&quot;\n* changes `scope.installed` to `true`\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;Finally, use the new directive in the view: \\n\\n\\\nIn **index.html**, add the new `\u003Cinstall-app\u003E` element inside the `.card` div under the `\u003Capp-info\u003E` element. &#x27;, function(Tests, callback) {\nTests.componentTest(function(Components) {\n      if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;\u003Cinstall-app\u003E&#x27;)) {\n        return {pass: true};\n      }\n\n        return {pass: false, errors: { friendly: \&quot;Did you use \u003Cinstall-app\u003E in the view?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n\n  }, callback);\n});\ncheckpoint(&#x27;View the AngularJS app in the browser by typing http://localhost:8000.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n        if (Components.WebBrowser.loadedOneOf([\&quot;http://localhost:8000\&quot;, \&quot;localhost:3000\&quot;])) {\n          return {pass: true};\n        }\n\nreturn {pass: false, errors: { friendly: \&quot;Did you visit &#x27;localhost:8000/&#x27; in the browser?\&quot;, component: \&quot;WebBrowser\&quot; }};\n    }, callback);\n});&quot;,&quot;files&quot;:{}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/directives/lessons/directives/exercises/directives-install-app-iii.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/directives/exercises/directives-install-app-iii&quot;},&quot;directives-generalizations&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;directives-generalizations&quot;,&quot;title&quot;:&quot;Generalizations&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-directives&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;index.html&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;Well done! An \&quot;Install\&quot; button now shows up under each app. When you click the button, it changes to an \&quot;Uninstall\&quot; button. When you click it again, it changes back to an \&quot;Install\&quot; button.\n\nWhat can we generalize so far?\n* Directives are a powerful way to create self-contained, interactive components. Unlike jQuery which adds interactivity as a layer on top of HTML, AngularJS treats interactivity as a native component of HTML.\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/directives/lessons/directives/exercises/directives-generalizations.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/directives/exercises/directives-generalizations&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/directives/lessons/directives/directives.en.yml&quot;,&quot;exercises_order&quot;:[&quot;directives-directives-i&quot;,&quot;directives-directives-ii&quot;,&quot;directives-directives-iii&quot;,&quot;directives-built-in-and-custom-directives&quot;,&quot;directives-install-app-i&quot;,&quot;directives-install-app-ii&quot;,&quot;directives-install-app-iii&quot;,&quot;directives-generalizations&quot;],&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/directives/resume&quot;,&quot;unit_slug&quot;:&quot;directives&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/directives/directives.en.yml&quot;,&quot;lessons_order&quot;:[&quot;directives&quot;],&quot;projects_order&quot;:[&quot;angularjs_bolt-network-2&quot;,&quot;angularjs_gameboard&quot;,&quot;angularjs_feedster&quot;],&quot;quizzes&quot;:{&quot;angularjs-quiz-2&quot;:{&quot;node_type&quot;:&quot;quiz&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs-quiz-2&quot;,&quot;title&quot;:&quot;AngularJS Quiz 2&quot;,&quot;questions&quot;:[{&quot;question&quot;:{&quot;text&quot;:&quot;What directory are custom directives stored in?&quot;},&quot;answers&quot;:[{&quot;text&quot;:&quot;js/controllers/directives&quot;},{&quot;text&quot;:&quot;js/shared/directives&quot;},{&quot;text&quot;:&quot;js/directives&quot;},{&quot;text&quot;:&quot;js/custom/directives&quot;}],&quot;correct_index&quot;:3},{&quot;question&quot;:{&quot;text&quot;:&quot;What HTML code would be used to implement this directive?&quot;,&quot;snippet&quot;:{&quot;code&quot;:[&quot;app.directive(&#x27;appInfo&#x27;, function() {\n return {\n restrict: &#x27;E&#x27;,\n scope: {\n info: &#x27;=&#x27;\n },\n templateUrl: &#x27;js/directives/appInfo.html&#x27;\n };\n });&quot;],&quot;language&quot;:&quot;javascript&quot;}},&quot;answers&quot;:[{&quot;text&quot;:&quot;\u003Cdiv src=\&quot;app-info\&quot;\u003E&quot;},{&quot;text&quot;:&quot;\u003Capp-info\u003E&quot;},{&quot;text&quot;:&quot;\u003Capp info=\&quot;app\&quot;\u003E&quot;},{&quot;text&quot;:&quot;\u003Capp-info info=\&quot;info\&quot;\u003E&quot;}],&quot;correct_index&quot;:4},{&quot;question&quot;:{&quot;text&quot;:&quot;In a directive, what is the purpose of the restrict property?&quot;},&quot;answers&quot;:[{&quot;text&quot;:&quot;The restrict property specifies how the directive will be used in the view.&quot;},{&quot;text&quot;:&quot;The restrict property specifies the attribute we will pass the directive through.&quot;},{&quot;text&quot;:&quot;The restrict property nullifies the directive.&quot;},{&quot;text&quot;:&quot;The restrict property makes the data available in the view.&quot;}],&quot;correct_index&quot;:1},{&quot;question&quot;:{&quot;text&quot;:&quot;In a directive, what is the purpose of the template property?&quot;},&quot;answers&quot;:[{&quot;text&quot;:&quot;The template property indicates which directives to omit.&quot;},{&quot;text&quot;:&quot;The template property includes the directive in the stated file.&quot;},{&quot;text&quot;:&quot;The template property indicates what HTML to use when the directive is called in the view&quot;},{&quot;text&quot;:&quot;None of the Above&quot;}],&quot;correct_index&quot;:3},{&quot;question&quot;:{&quot;text&quot;:&quot;In a directive, what is the purpose of the scope property?&quot;},&quot;answers&quot;:[{&quot;text&quot;:&quot;The scope property specifies the attribute we will pass the directive through and how it will be passed.&quot;},{&quot;text&quot;:&quot;The scope property defines the application&#x27;s scope.&quot;},{&quot;text&quot;:&quot;The scope property specifies how the directive will be used in the view.&quot;},{&quot;text&quot;:&quot;The scope property instantiates the directive.&quot;}],&quot;correct_index&quot;:1},{&quot;question&quot;:{&quot;text&quot;:&quot;What HTML file is used by this directive?&quot;,&quot;snippet&quot;:{&quot;code&quot;:[&quot;app.directive(&#x27;weather&#x27;, function() {\n return {\n restrict: &#x27;E&#x27;,\n scope: {\n info: &#x27;=&#x27;\n },\n templateUrl: &#x27;js/directives/appInfo.html&#x27;\n };\n });&quot;],&quot;language&quot;:&quot;javascript&quot;}},&quot;answers&quot;:[{&quot;text&quot;:&quot;js/directives/appInfo.html&quot;},{&quot;text&quot;:&quot;js/directives/weather.html&quot;},{&quot;text&quot;:&quot;weather.html&quot;},{&quot;text&quot;:&quot;directive.html&quot;}],&quot;correct_index&quot;:1},{&quot;question&quot;:{&quot;text&quot;:&quot;In a directive, what is the purpose of the link property?&quot;},&quot;answers&quot;:[{&quot;text&quot;:&quot;The link property links the template to the directive, once the template is indicated.&quot;},{&quot;text&quot;:&quot;The link property is used to create interactive directives that respond to user action.&quot;},{&quot;text&quot;:&quot;The link property specifies how the directive will be used in the view.&quot;},{&quot;text&quot;:&quot;The link property created an attribute for the directive.&quot;}],&quot;correct_index&quot;:2},{&quot;question&quot;:{&quot;text&quot;:&quot;What three inputs does the link property accept?&quot;},&quot;answers&quot;:[{&quot;text&quot;:&quot;reference, resource, and scope&quot;},{&quot;text&quot;:&quot;element, reference, and url&quot;},{&quot;text&quot;:&quot;scope, element, and attr&quot;},{&quot;text&quot;:&quot;scope, route, and element&quot;}],&quot;correct_index&quot;:3},{&quot;question&quot;:{&quot;text&quot;:&quot;How would the HTML of a directive use a scope variable called \&quot;app\&quot;?&quot;,&quot;snippet&quot;:{&quot;code&quot;:[&quot;\u003Cdiv class=\&quot;card\&quot; ng-repeat=\&quot;app in apps\&quot;\u003E\n  \u003Capp-info info=\&quot;app\&quot;\u003E\u003C/app-info\u003E\n\u003C/div\u003E&quot;],&quot;language&quot;:&quot;javascript&quot;}},&quot;answers&quot;:[{&quot;text&quot;:&quot;{{ app }}&quot;},{&quot;text&quot;:&quot;app&quot;},{&quot;text&quot;:&quot;info&quot;},{&quot;text&quot;:&quot;{{ info }}&quot;}],&quot;correct_index&quot;:4}],&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/directives/quizs/angularjs-quiz-2.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs-quiz-2&quot;,&quot;unit_slug&quot;:&quot;directives&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false}},&quot;quizzes_order&quot;:[&quot;angularjs-quiz-2&quot;]},&quot;services&quot;:{&quot;node_type&quot;:&quot;unit&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;services&quot;,&quot;title&quot;:&quot;Services&quot;,&quot;description&quot;:&quot;Use services to communicate with a server.&quot;,&quot;projects&quot;:{&quot;angularjs_outbox-1&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs_outbox-1&quot;,&quot;title&quot;:&quot;Outbox 1&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll build an email app.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/outbox-1.jpg&quot;,&quot;preview_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/4/outbox-1/index.html&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/angularjsoutbox-1&quot;,&quot;objective&quot;:&quot;Outbox is creating an AngularJS app for their email app. \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/outbox-1/index.html\&quot;\u003EHere&#x27;s what it looks like\u003C/a\u003E. The app displays a list of messages.&quot;,&quot;meta&quot;:{&quot;author&quot;:{&quot;fullname&quot;:&quot;Lalith Polepeddi&quot;,&quot;username&quot;:&quot;lpolepeddi&quot;}},&quot;self_assessments&quot;:[{&quot;tasks&quot;:[{&quot;key&quot;:&quot;angularjs_outbox-1_0_0&quot;,&quot;text&quot;:&quot;Create a new module named \u003Ccode\u003EOutboxApp\u003C/code\u003E, and then attach it to the \u003Ccode\u003E\u0026lt;body\u0026gt;\u003C/code\u003E element in the view.&quot;},{&quot;key&quot;:&quot;angularjs_outbox-1_0_1&quot;,&quot;text&quot;:&quot;Visit \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/emails-api/emails.json\&quot; target=\&quot;_blank\&quot;\u003Eemails.json\u003C/a\u003E. It&#x27;s a JSON object containing an array of emails. Let&#x27;s fetch this data and display it in the app.&quot;},{&quot;key&quot;:&quot;angularjs_outbox-1_0_2&quot;,&quot;text&quot;:&quot;Create a service named \u003Ccode\u003Eemails\u003C/code\u003E for getting this email data:\n\u003Col type=\&quot;a\&quot;\u003E\n\u003Cli\u003EMake a new folder named \u003Cstrong\u003Ejs/services\u003C/strong\u003E. In this folder, create a new file named \u003Cstrong\u003Ejs/services/emails.js\u003C/strong\u003E.\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003Eapp.factory\u003C/code\u003E to create a new service named \u003Ccode\u003Eemails\u003C/code\u003E.\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003E$http\u003C/code\u003E to get the email data from \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/emails-api/emails.json\&quot; target=\&quot;_blank\&quot;\u003Eemails.json\u003C/a\u003E.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_outbox-1_0_3&quot;,&quot;text&quot;:&quot;Include this new JavaScript file in the view as a new \u003Ccode\u003Escript\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_outbox-1_0_4&quot;,&quot;text&quot;:&quot;In the controller, use the \u003Ccode\u003Eemails\u003C/code\u003E service to fetch data from the server:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EFirst add \u003Ccode\u003Eemails\u003C/code\u003E into \u003Ccode\u003EHomeController\u003C/code\u003E as a dependency so that it&#x27;s available to use.\u003C/li\u003E\n            \u003Cli\u003EThen use \u003Ccode\u003Eemails\u003C/code\u003E within the controller to asynchronously fetch the email data from the server and store it into \u003Ccode\u003E$scope.emails\u003C/code\u003E.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_outbox-1_0_5&quot;,&quot;text&quot;:&quot;Attach the controller to the \u003Ccode\u003E\u0026lt;div class=\&quot;main\&quot;\u0026gt;\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_outbox-1_0_6&quot;,&quot;text&quot;:&quot;In the view, finish the code to display an email. Looking at the format of the data in \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/emails-api/emails.json\&quot; target=\&quot;_blank\&quot;\u003Eemails.json\u003C/a\u003E, display each email&#x27;s \u003Ccode\u003Efrom\u003C/code\u003E, \u003Ccode\u003Esubject\u003C/code\u003E, and \u003Ccode\u003Edatetime\u003C/code\u003E in their corresponding \u003Ccode\u003E\u0026lt;span\u0026gt;\u003C/code\u003E elements.&quot;},{&quot;key&quot;:&quot;angularjs_outbox-1_0_7&quot;,&quot;text&quot;:&quot;View the result by visiting http://localhost:8000 in the browser.&quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs_outbox-1&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/services/projects/angularjs_outbox-1.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_outbox-1&quot;,&quot;unit_slug&quot;:&quot;services&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false},&quot;angularjs_top-10&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs_top-10&quot;,&quot;title&quot;:&quot;Top 10&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll fetch movie data from the server and display it in a custom directive.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/top-10.jpg&quot;,&quot;preview_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/4/top-10/index.html&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/angularjstop-10&quot;,&quot;objective&quot;:&quot;Top 10 is creating an AngularJS app to chart popular TV shows. \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/top-10/index.html\&quot;\u003EHere&#x27;s what it looks like\u003C/a\u003E.\n\n&quot;,&quot;meta&quot;:{&quot;author&quot;:{&quot;fullname&quot;:&quot;Lalith Polepeddi&quot;,&quot;username&quot;:&quot;lpolepeddi&quot;}},&quot;self_assessments&quot;:[{&quot;tasks&quot;:[{&quot;key&quot;:&quot;angularjs_top-10_0_0&quot;,&quot;text&quot;:&quot;Create a new module named \u003Ccode\u003ETop10App\u003C/code\u003E, and then attach it to the \u003Ccode\u003E\u0026lt;body\u0026gt;\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_top-10_0_1&quot;,&quot;text&quot;:&quot;Visit \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/shows-api/shows.json\&quot; target=\&quot;_blank\&quot;\u003Eshows.json\u003C/a\u003E. It&#x27;s a JSON object containing an array of TV shows. Let&#x27;s fetch this data and display it in the app.&quot;},{&quot;key&quot;:&quot;angularjs_top-10_0_2&quot;,&quot;text&quot;:&quot;Create a service named \u003Ccode\u003Eshows\u003C/code\u003E for getting this data. In a file named \u003Cstrong\u003Ejs/services/shows.js\u003C/strong\u003E, create a new service named \u003Ccode\u003Eshows\u003C/code\u003E that gets data from the \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/shows-api/shows.json\&quot; target=\&quot;_blank\&quot;\u003Eshows API\u003C/a\u003E. Include this new JavaScript file in the view as a new \u003Ccode\u003Escript\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_top-10_0_3&quot;,&quot;text&quot;:&quot;In the controller, use the \u003Ccode\u003Eshows\u003C/code\u003E service to load data from the server into the \u003Ccode\u003E$scope.shows\u003C/code\u003E property. Then attach the controller to the \u003Ccode\u003E\u0026lt;div class=\&quot;main\&quot;\u0026gt;\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_top-10_0_4&quot;,&quot;text&quot;:&quot;Create a directive named \u003Ccode\u003EtvShow\u003C/code\u003E:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EMake a new file \u003Cstrong\u003Ejs/directives/tvShow.js\u003C/strong\u003E. In it, create the new directive named \u003Ccode\u003EtvShow\u003C/code\u003E.\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003Escope\u003C/code\u003E to specify that we&#x27;ll pass information into this directive through an attribute named \u003Ccode\u003Einfo\u003C/code\u003E.\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003EtemplateUrl\u003C/code\u003E to tell this directive to use the \u003Cstrong\u003Ejs/directives/tvShow.html\u003C/strong\u003E file.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_top-10_0_5&quot;,&quot;text&quot;:&quot;Include this new JavaScript file in the view as a \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_top-10_0_6&quot;,&quot;text&quot;:&quot;In the directive&#x27;s template \u003Cstrong\u003Ejs/directives/tvShow.html\u003C/strong\u003E, display each TV show&#x27;s details. Looking at the format of the data in the \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/shows-api/shows.json\&quot; target=\&quot;_blank\&quot;\u003Eshows API\u003C/a\u003E, display each show&#x27;s \u003Ccode\u003Eseries_img\u003C/code\u003E, \u003Ccode\u003Eseries\u003C/code\u003E, \u003Ccode\u003Egenre\u003C/code\u003E, \u003Ccode\u003Erun_start\u003C/code\u003E, and \u003Ccode\u003Edescription\u003C/code\u003E.&quot;},{&quot;key&quot;:&quot;angularjs_top-10_0_7&quot;,&quot;text&quot;:&quot;Finish the view display each item in the \u003Ccode\u003Eshows\u003C/code\u003E array. Under the \u003Ccode\u003E.rank\u003C/code\u003E div, use the \u003Ccode\u003E\u0026lt;tv-show\u0026gt;\u003C/code\u003E directive to display the details of each show. Pass in each show into the \u003Ccode\u003E\u0026lt;tv-show\u0026gt;\u003C/code\u003E directive&#x27;s \u003Ccode\u003Einfo\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_top-10_0_8&quot;,&quot;text&quot;:&quot;View the result by visiting http://localhost:8000 in the browser.&quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs_top-10&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/services/projects/angularjs_top-10.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_top-10&quot;,&quot;unit_slug&quot;:&quot;services&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false}},&quot;lessons&quot;:{&quot;services&quot;:{&quot;node_type&quot;:&quot;lesson&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;services&quot;,&quot;title&quot;:&quot;Services&quot;,&quot;description&quot;:&quot;Use services to communicate with a server.&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/services&quot;,&quot;exercises&quot;:{&quot;services-i&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;services-i&quot;,&quot;title&quot;:&quot;Services I&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-services&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;js/services/forecast.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;So far we&#x27;ve made AngularJS apps by adding data to a controller, and then displaying it in a view.\n\nBut what happens when the data contains hundreds of items, or if it&#x27;s constantly changing like weather or financial data? Hardcoding data into a controller won&#x27;t work anymore.\n\nA better solution is to read the live data from a server. We can do this by creating a _service_.\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;In the browser frame on the right, visit https://s3.amazonaws.com/codecademy-content/courses/ltp4/forecast-api/forecast.json. It\\&#x27;s a JSON object containing a `city_name` and an array `days` containing weather data for the next five days.&#x27;, function (Tests, callback)\n    {\n    Tests.componentTest(function (Components) {\n      if (Components.WebBrowser.loadedURL(&#x27;https://s3.amazonaws.com/codecademy-content/courses/ltp4/forecast-api/forecast.json&#x27;)) {\n        return { pass: true };\n      }\n      return {\n        pass: false,\n        errors: {\n          friendly: &#x27;Did you visit \\&#x27;https://s3.amazonaws.com/codecademy-content/courses/ltp4/forecast-api/forecast.json\\&#x27; in the browser?&#x27;,\n          component: &#x27;WebBrowser&#x27;\n        }\n      };\n    }, callback);\n  });\ncheckpoint(&#x27;Create a service named `forecast` that fetches the weather data from the server. In the new file **js/services/forecast.js**. Type in this code exactly as you see here: \\n```javascript \\napp.factory(\\&#x27;forecast\\&#x27;, [\\&#x27;$http\\&#x27;, function($http) { \\n  return $http.get(\\&#x27;https://s3.amazonaws.com/codecademy-content/courses/ltp4/forecast-api/forecast.json\\&#x27;) \\n            .success(function(data) { \\n              return data; \\n            }) \\n            .error(function(err) { \\n              return err; \\n            }); \\n}]); \\n```&#x27;, function (Tests, callback)\n    {\n    Tests.karmaTest(&#x27;karma2.js&#x27;, callback);\n  });\ncheckpoint(&#x27;Include **js/services/forecast.js** in **index.html** in line 62 as a new `\u003Cscript\u003E` element.&#x27;, function (Tests, callback)\n    {\n    Tests.componentTest(function (Components) {\n      if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;\u003Cscript src=[\\&#x27;\&quot;]js/services/forecast.js[\\&#x27;\&quot;]\u003E&#x27;)) {\n        return { pass: true };\n      }\n      return {\n        pass: false,\n        errors: {\n          friendly: &#x27;Did you include js/services/forecast.js as a new script element in index.html?&#x27;,\n          component: &#x27;PersistentCodeEditor&#x27;\n        }\n      };\n    }, callback);\n  });\ncheckpoint(&#x27;In the controller, modify `MainController` by passing in the `forecast` service, like this: \\n```javascript \\napp.controller(\\&#x27;MainController\\&#x27;, [\\&#x27;$scope\\&#x27;, \\&#x27;forecast\\&#x27;, function($scope, forecast) { \\n  // ... \\n}]); \\n```&#x27;, function (Tests, callback)\n    {\n    Tests.componentTest(function (Components) {\n      if (Components.CodeEditor.codeContains(&#x27;js/controllers/MainController.js&#x27;, &#x27;app.controller\\\\([\\&#x27;\&quot;]MainController[\\&#x27;\&quot;],\\\\s*\\\\[[\\&#x27;\&quot;]\\\\$scope[\\&#x27;\&quot;], [\\&#x27;\&quot;]forecast[\\&#x27;\&quot;], function\\\\(\\\\$scope, forecast\\\\)&#x27;)) {\n        return { pass: true };\n      }\n      return {\n        pass: false,\n        errors: {\n          friendly: &#x27;Did you pass in the forecast service into MainController?&#x27;,\n          component: &#x27;PersistentCodeEditor&#x27;\n        }\n      };\n    }, callback);\n  });\ncheckpoint(&#x27;Inside `MainController`, use the `forecast` service to save the weather data into `$scope.fiveDay`, like this: \\n```javascript \\n  forecast.success(function(data) { \\n    $scope.fiveDay = data; \\n  }); \\n```&#x27;, function (Tests, callback)\n    {\n    Tests.componentTest(function (Components) {\n      if (Components.CodeEditor.codeContains(&#x27;js/controllers/MainController.js&#x27;, &#x27;forecast.success\\\\(function\\\\(data\\\\)\\\\s*{&#x27;)) {\n        return { pass: true };\n      }\n      return {\n        pass: false,\n        errors: {\n          friendly: &#x27;Remember to save the weather data into $scope.fiveDay.&#x27;,\n          component: &#x27;PersistentCodeEditor&#x27;\n        }\n      };\n    }, callback);\n  });&quot;,&quot;files&quot;:{&quot;karma2.js&quot;:&quot;describe(&#x27;Did you create a new service named forecast?&#x27;, function() {\n  var ctrl, scope, service;\n\n  beforeEach(module(&#x27;ForecastApp&#x27;));\n\n  it(&#x27;Did you create a new service named forecast?&#x27;, function() {\n    inject(function($controller, $rootScope, forecast) {\n      expect(forecast).toBeDefined();\n    });\n  });\n});\n&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/services/lessons/services/exercises/services-i.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/services/exercises/services-i&quot;},&quot;services-ii&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;services-ii&quot;,&quot;title&quot;:&quot;Services II&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-services&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;js/services/forecast.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;Well done! The `city_name` now shows up in the view. How does it work?\n1. First in **js/services/forecast.js**, we made a new _service_. We used `app.factory` to create a new service named `forecast`\n2. The `forecast` service needs to use AngularJS&#x27;s built-in `$http` to fetch JSON from the server. Therefore, we add `$http` to the `forecast` service as a dependency, like this:\n    ```javascript\n    [&#x27;$http&#x27;, function($http) {\n      // ...\n    }]\n    ```\n    Now `$http` is available to use inside `forecast`.\n3. Then, inside `forecast`, we use `$http` to construct an HTTP `GET` request for the weather data. If the request succeeds, the weather data is returned; otherwise the error info is returned.\n4. Next in the controller, we used the `forecast` service to fetch data from the server. First we added `forecast` into `MainController` as a dependency so that it&#x27;s available to use. Then within the controller we used `forecast` to asynchronously fetch the weather data from the server and store it into `$scope.fiveDay`\n5. As before, any properties attached to `$scope` become available to use in the view. This means in **index.html**, we can display the `city_name` using an expression as done before.\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;In the browser, visit https://s3.amazonaws.com/codecademy-content/courses/ltp4/forecast-api/forecast.json. Looking at the format of the data in the `days` array, each day has four pieces of data - `datetime`, `icon`, `high`, and `low`.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n        if (Components.WebBrowser.loadedURL(\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/forecast-api/forecast.json\&quot;)) {\n          return {pass: true};\n        }\n        return {pass: false, errors: { friendly: \&quot;Did you visit &#x27;https://s3.amazonaws.com/codecademy-content/courses/ltp4/forecast-api/forecast.json&#x27; in the browser?\&quot;, component: \&quot;WebBrowser\&quot; }};\n    }, callback);\n});\ncheckpoint(&#x27;Visit http://localhost:8000 to view the AngularJS app. Let\\&#x27;s finish the view so that it displays the weather for each day.\\n\\nNotice in the view, we\\&#x27;re using `ng-repeat` to loop through each item in the `days` array. Inside this loop, display a day\\&#x27;s four pieces of data.\\n\\\n\\n\\\nRemember to use `ng-src` to display an image.&#x27;, function(Tests, callback) {\n  Tests.webSCT(&#x27;sct1.js&#x27;, callback);\n});\ncheckpoint(&#x27;Use the `date` filter to format the `datetime`.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n      if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, \&quot;\\\\|\\\\s*date\\\\s*}}\&quot;)) {\n        return {pass: true};\n      }\n      return {pass: false, errors: { friendly: \&quot;Did you add format the datetime using the date filter?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n  }, callback);\n});\n&quot;,&quot;files&quot;:{&quot;sct1.js&quot;:&quot;$expect(&#x27;.weekday&#x27;).to.have.text(/\\S/, \&quot;Make sure to display the weekday inside the .weekday div. Use the `date` filter to format the datetime into a weekday.\&quot;);\n$expect(&#x27;img&#x27;).to.exist(\&quot;Add an img tag for the icon field\&quot;)\nif (!($(&#x27;img&#x27;)[0].hasAttribute(&#x27;ng-src&#x27;))) {\n  throw new Error(&#x27;Use ng-src to set the img url&#x27;);\n}\n$expect(&#x27;.high&#x27;).to.have.text(/\\d/);\n$expect(&#x27;.low&#x27;).to.have.text(/\\d/);\n&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/services/lessons/services/exercises/services-ii.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/services/exercises/services-ii&quot;},&quot;services-generalizations&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;services-generalizations&quot;,&quot;title&quot;:&quot;Generalizations&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-services&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;js/services/forecast.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;Why are services useful?  Instead of filling the controller with code to fetch weather data from a server, it&#x27;s better to move this independent logic into a service so that it can be reused by other parts of the app.\n\nWhat can we generalize so far?\n* Directives are a way to make standalone UI components, like `\u003Capp-info\u003E`\n* Services are a way to make standalone communication logic, like `forecast` which fetches weather data from a server\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;&quot;,&quot;files&quot;:{}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/services/lessons/services/exercises/services-generalizations.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/services/exercises/services-generalizations&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/services/lessons/services/services.en.yml&quot;,&quot;exercises_order&quot;:[&quot;services-i&quot;,&quot;services-ii&quot;,&quot;services-generalizations&quot;],&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/services/resume&quot;,&quot;unit_slug&quot;:&quot;services&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/services/services.en.yml&quot;,&quot;lessons_order&quot;:[&quot;services&quot;],&quot;projects_order&quot;:[&quot;angularjs_outbox-1&quot;,&quot;angularjs_top-10&quot;],&quot;quizzes&quot;:{&quot;angularjs-quiz-3&quot;:{&quot;node_type&quot;:&quot;quiz&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs-quiz-3&quot;,&quot;title&quot;:&quot;AngularJS Quiz 3&quot;,&quot;questions&quot;:[{&quot;question&quot;:{&quot;text&quot;:&quot;What is the purpose of a service?&quot;},&quot;answers&quot;:[{&quot;text&quot;:&quot;Services are a way to condense data once it is stored in the controller.&quot;},{&quot;text&quot;:&quot;Services are a way to render complex HTML elements on a page.&quot;},{&quot;text&quot;:&quot;Services allow the app to read live data from a server.&quot;},{&quot;text&quot;:&quot;Services are a shortcut for creating individual directives.&quot;}],&quot;correct_index&quot;:3},{&quot;question&quot;:{&quot;text&quot;:&quot;What is the correct syntax for creating a service?&quot;},&quot;answers&quot;:[{&quot;text&quot;:&quot;app.service();&quot;},{&quot;text&quot;:&quot;app.constant();&quot;},{&quot;text&quot;:&quot;app.checker();&quot;},{&quot;text&quot;:&quot;app.factory();&quot;}],&quot;correct_index&quot;:4},{&quot;question&quot;:{&quot;text&quot;:&quot;What directory is are services stored in?&quot;},&quot;answers&quot;:[{&quot;text&quot;:&quot;js/controllers/services&quot;},{&quot;text&quot;:&quot;js/services&quot;},{&quot;text&quot;:&quot;js/shared/services&quot;},{&quot;text&quot;:&quot;js/db/services&quot;}],&quot;correct_index&quot;:2},{&quot;question&quot;:{&quot;text&quot;:&quot;What happens when forecast is added as a dependency in MainController?&quot;,&quot;snippet&quot;:{&quot;code&quot;:[&quot;app.controller(&#x27;MainController&#x27;, [&#x27;$scope&#x27;, &#x27;forecast&#x27;, function($scope, forecast) { \n  // ... \n}]);&quot;],&quot;language&quot;:&quot;javascript&quot;}},&quot;answers&quot;:[{&quot;text&quot;:&quot;The controller replaces all instances of $scope with forecast in the app.&quot;},{&quot;text&quot;:&quot;The controller is able to use forecast to asynchronously fetch weather data from the server.&quot;},{&quot;text&quot;:&quot;The controller is able act independently of the service.&quot;},{&quot;text&quot;:&quot;The controller is able to run checks on data submitted through the server.&quot;}],&quot;correct_index&quot;:2},{&quot;question&quot;:{&quot;text&quot;:&quot;In the associated service, what is $http.get() used for?&quot;,&quot;snippet&quot;:{&quot;code&quot;:[&quot;app.factory(&#x27;forecast&#x27;, [&#x27;$http&#x27;, function($http) {\n return $http.get(&#x27;https://s3.amazonaws.com/codecademy-content/courses/ltp4/forecast-api/forecast.json&#x27;)\n .success(function(data) {\n return data;\n })\n .error(function(err) {\n return err;\n });\n }]);&quot;],&quot;language&quot;:&quot;javascript&quot;}},&quot;answers&quot;:[{&quot;text&quot;:&quot;To get data from a specified url through a GET request&quot;},{&quot;text&quot;:&quot;To visit a specified URL when the service is called&quot;},{&quot;text&quot;:&quot;To create a new link in an app&quot;},{&quot;text&quot;:&quot;To fetch the data rendered in an app&#x27;s view.&quot;}],&quot;correct_index&quot;:1},{&quot;question&quot;:{&quot;text&quot;:&quot;If a service had been created in js/service/forecast.js to fetch data from a server, how would you attach it to scope in MainController?&quot;,&quot;snippet&quot;:{&quot;code&quot;:[&quot;app.controller(&#x27;MainController&#x27;, [&#x27;$scope&#x27;, function($scope) {\n forecast.success(function(data) {\n...\n });\n }]);&quot;],&quot;language&quot;:&quot;javascript&quot;}},&quot;answers&quot;:[{&quot;text&quot;:&quot;$scope.fiveDay = data;&quot;},{&quot;text&quot;:&quot;var fiveDay = $scope.data;&quot;},{&quot;text&quot;:&quot;scope.fiveDay = data;&quot;},{&quot;text&quot;:&quot;$scope.data&quot;}],&quot;correct_index&quot;:1}],&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/services/quizs/angularjs-quiz-3.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs-quiz-3&quot;,&quot;unit_slug&quot;:&quot;services&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false}},&quot;quizzes_order&quot;:[&quot;angularjs-quiz-3&quot;]},&quot;routing&quot;:{&quot;node_type&quot;:&quot;unit&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;routing&quot;,&quot;title&quot;:&quot;Routing&quot;,&quot;description&quot;:&quot;Add routes to build powerful single-page applications.&quot;,&quot;projects&quot;:{&quot;angularjs_outbox-2&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs_outbox-2&quot;,&quot;title&quot;:&quot;Outbox 2&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll add to your email app by mapping URLs to views.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/outbox-2.jpg&quot;,&quot;preview_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/4/outbox-2/index.html#/outbox&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/angularjsoutbox-2&quot;,&quot;objective&quot;:&quot;Outbox is creating an AngularJS app for their email app. \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/outbox-2/index.html#/outbox\&quot;\u003EHere&#x27;s what it looks like\u003C/a\u003E. The app displays a list of messages. When you click on an email, it shows the entire message.&quot;,&quot;meta&quot;:{&quot;author&quot;:{&quot;fullname&quot;:&quot;Lalith Polepeddi&quot;,&quot;username&quot;:&quot;lpolepeddi&quot;}},&quot;self_assessments&quot;:[{&quot;tasks&quot;:[{&quot;key&quot;:&quot;angularjs_outbox-2_0_0&quot;,&quot;text&quot;:&quot;In the view in the \u003Ccode\u003E\u0026lt;head\u0026gt;\u003C/code\u003E element, include \u003Cstrong\u003Eangular-route.js\u003C/strong\u003E as a \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E element.\n\n```html\n\u003Cscript src=\&quot;https://code.angularjs.org/1.2.28/angular-route.min.js\&quot;\u003E\u003C/script\u003E\n```\n  \nYou need to include this additional JavaScript file in order to add routing to your app because it does not come with the AngularJS library by default.&quot;},{&quot;key&quot;:&quot;angularjs_outbox-2_0_1&quot;,&quot;text&quot;:&quot;In \u003Cstrong\u003Eapp.js\u003C/strong\u003E, define the app&#x27;s routes:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EUse \u003Ccode\u003Eapp.config()\u003C/code\u003E and \u003Ccode\u003E$routeProvider\u003C/code\u003E to set up the routes.\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003E.when()\u003C/code\u003E to map the URL \u003Ccode\u003E/outbox\u003C/code\u003E to the controller \u003Ccode\u003EHomeController\u003C/code\u003E and the template \u003Cstrong\u003Eviews/home.html\u003C/strong\u003E.\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003E.when()\u003C/code\u003E to map the URL \u003Ccode\u003E/outbox/:id\u003C/code\u003E to the controller \u003Ccode\u003EEmailController\u003C/code\u003E and the template \u003Cstrong\u003Eviews/email.html\u003C/strong\u003E.\u003C/li\u003E\n            \u003Cli\u003EOtherwise if a user accidentally visits a URL other than the two above, use \u003Ccode\u003E.otherwise()\u003C/code\u003E to redirect to \u003Ccode\u003E/outbox\u003C/code\u003E.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_outbox-2_0_2&quot;,&quot;text&quot;:&quot;In the view in the main section, add \u003Ccode\u003E\u0026lt;div ng-view\u0026gt;\u0026lt;/div\u0026gt;\u003C/code\u003E.&quot;},{&quot;key&quot;:&quot;angularjs_outbox-2_0_3&quot;,&quot;text&quot;:&quot;View the result by visiting http://localhost:8000 in the browser:\n          \u003Cul\u003E\n            \u003Cli\u003EWhen you visit \u003Ccode\u003E/outbox\u003C/code\u003E, a view is constructed by injecting \u003Cstrong\u003Eviews/home.html\u003C/strong\u003E into the \u003Ccode\u003E\u0026lt;div ng-view\u0026gt;\u0026lt;/div\u0026gt;\u003C/code\u003E in \u003Cstrong\u003Eindex.html\u003C/strong\u003E.\u003C/li\u003E\n            \u003Cli\u003ELikewise, when you click on an email, a view is constructed by injecting \u003Cstrong\u003Eviews/email.html\u003C/strong\u003E into \u003Ccode\u003E\u0026lt;div ng-view\u0026gt;\u0026lt;/div\u0026gt;\u003C/code\u003E.\u003C/li\u003E\n          \u003C/ul\u003E\n        \u003C/li\u003E&quot;},{&quot;key&quot;:&quot;angularjs_outbox-2_0_4&quot;,&quot;text&quot;:&quot;In the view, finish the code to display an email. Looking at the format of the data in the \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/emails-api/emails.json\&quot; target=\&quot;_blank\&quot;\u003Eemail API\u003C/a\u003E, display an email&#x27;s \u003Ccode\u003Esubject\u003C/code\u003E, \u003Ccode\u003Efrom\u003C/code\u003E, \u003Ccode\u003Edatetime\u003C/code\u003E, and \u003Ccode\u003Emessage\u003C/code\u003E. View the result in the browser.&quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs_outbox-2&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/routing/projects/angularjs_outbox-2.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_outbox-2&quot;,&quot;unit_slug&quot;:&quot;routing&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false},&quot;angularjs_calendar&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs_calendar&quot;,&quot;title&quot;:&quot;Calendar&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll create a calendar app with routes for each view.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/calendar.jpg&quot;,&quot;preview_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/4/calendar/index.html#/&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/angularjscalendar&quot;,&quot;objective&quot;:&quot;Calendar is creating an AngularJS app for their calendar service. \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/calendar/index.html#/\&quot;\u003EHere&#x27;s what it looks like\u003C/a\u003E. The app displays a list of events in a single day. When you click on an event, it shows its details.&quot;,&quot;meta&quot;:{&quot;author&quot;:{&quot;fullname&quot;:&quot;Lalith Polepeddi&quot;,&quot;username&quot;:&quot;lpolepeddi&quot;}},&quot;self_assessments&quot;:[{&quot;tasks&quot;:[{&quot;key&quot;:&quot;angularjs_calendar_0_0&quot;,&quot;text&quot;:&quot;In the view inside the \u003Ccode\u003E\u0026lt;head\u0026gt;\u003C/code\u003E element, include \u003Ca href=\&quot;https://code.angularjs.org/1.2.28/angular-route.min.js\&quot; target=\&quot;_blank\&quot;\u003Eangular-route.js\u003C/a\u003E as a new \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_calendar_0_1&quot;,&quot;text&quot;:&quot;In \u003Cstrong\u003Eapp.js\u003C/strong\u003E, inject \u003Ccode\u003EngRoute\u003C/code\u003E into the module&#x27;s dependency array so that routing is available for the app to use.&quot;},{&quot;key&quot;:&quot;angularjs_calendar_0_2&quot;,&quot;text&quot;:&quot;In \u003Cstrong\u003Eapp.js\u003C/strong\u003E, define the app&#x27;s routes:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EUse \u003Ccode\u003Eapp.config()\u003C/code\u003E and \u003Ccode\u003E$routeProvider\u003C/code\u003E to set up the routes.\u003C/li\u003E\n            \u003Cli\u003EMap the URL \u003Ccode\u003E/\u003C/code\u003E to the controller \u003Ccode\u003EDayController\u003C/code\u003E and the template \u003Cstrong\u003Eviews/day.html\u003C/strong\u003E. We&#x27;ll write these next.\u003C/li\u003E\n            \u003Cli\u003EOtherwise, redirect to \u003Ccode\u003E/\u003C/code\u003E\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_calendar_0_3&quot;,&quot;text&quot;:&quot;Create a service to get event data and display it in the app:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EVisit \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/events-api/events.json\&quot; target=\&quot;_blank\&quot;\u003Eevents.json\u003C/a\u003E. It&#x27;s a JSON object containing a \u003Ccode\u003Edate\u003C/code\u003E and an an array of \u003Ccode\u003Eevents\u003C/code\u003E. Let&#x27;s fetch this data and display it in the app.\u003C/li\u003E\n            \u003Cli\u003ECreate a service named \u003Ccode\u003Eevents\u003C/code\u003E for getting this data. In a file named \u003Cstrong\u003Ejs/services/events.js\u003C/strong\u003E, create a new service named \u003Ccode\u003Eevents\u003C/code\u003E that gets data from the \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/events-api/events.json\&quot; target=\&quot;_blank\&quot;\u003Eevents API\u003C/a\u003E. Include this new JavaScript file in the view as a new \u003Ccode\u003Escript\u003C/code\u003E element.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_calendar_0_4&quot;,&quot;text&quot;:&quot;Set up the controller \u003Ccode\u003EDayController\u003C/code\u003E and the template \u003Cstrong\u003Eviews/day.html\u003C/strong\u003E:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EIn the controller \u003Ccode\u003EDayController\u003C/code\u003E, use the \u003Ccode\u003Eevents\u003C/code\u003E service to load data from the server into the \u003Ccode\u003E$scope.day\u003C/code\u003E property.\u003C/li\u003E\n            \u003Cli\u003EFinish the template \u003Cstrong\u003Eviews/day.html\u003C/strong\u003E. Follow the comment on line 1 and use the \u003Ccode\u003Edate\u003C/code\u003E filter to format a day&#x27;s \u003Ccode\u003Edate\u003C/code\u003E. Then, follow the comment in line 5 to loop through and display each event.\n            \u003Cbr\u003E\n            Check out \u003Ca href=\&quot;http://www.ng-newsletter.com/posts/beginner2expert-config.html\&quot;\u003Ethis page\u003C/a\u003E and scroll down to the \&quot;date\&quot; section for examples of how to use the \u003Ccode\u003Edate\u003C/code\u003E filter.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_calendar_0_5&quot;,&quot;text&quot;:&quot;In the view in the main section, add \u003Ccode\u003E\u0026lt;div ng-view\u0026gt;\u0026lt;/div\u0026gt;\u003C/code\u003E.&quot;},{&quot;key&quot;:&quot;angularjs_calendar_0_6&quot;,&quot;text&quot;:&quot;View the result by visiting http://localhost:8000 in the browser. When you visit \u003Ccode\u003E/\u003C/code\u003E, a view is constructed by injecting \u003Cstrong\u003Eviews/day.html\u003C/strong\u003E into the \u003Ccode\u003E\u0026lt;div ng-view\u0026gt;\u0026lt;/div\u0026gt;\u003C/code\u003E in \u003Cstrong\u003Eindex.html\u003C/strong\u003E.&quot;},{&quot;key&quot;:&quot;angularjs_calendar_0_7&quot;,&quot;text&quot;:&quot;When a user clicks on an event, she should be able to view more information about that event. Let&#x27;s set this up next, following the same sequence of steps from above:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EIn \u003Cstrong\u003Eapp.js\u003C/strong\u003E, add another route. Map the URL \u003Ccode\u003E/:id\u003C/code\u003E to the controller \u003Ccode\u003EEventController\u003C/code\u003E and the template \u003Cstrong\u003Eviews/event.html\u003C/strong\u003E.\u003C/li\u003E\n            \u003Cli\u003EIn the controller \u003Ccode\u003EEventController\u003C/code\u003E, use the \u003Ccode\u003Eevents\u003C/code\u003E service to load a single event into the \u003Ccode\u003E$scope.event\u003C/code\u003E property. Use \u003Ccode\u003E$routeParams.id\u003C/code\u003E to access a specific event by its index.\u003C/li\u003E\n            \u003Cli\u003EFinish the template in \u003Cstrong\u003Eviews/event.html\u003C/strong\u003E to display an event. Looking at the format of the data in the \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/events-api/events.json\&quot; target=\&quot;_blank\&quot;\u003Eevents API\u003C/a\u003E, display an event&#x27;s \u003Ccode\u003Ename\u003C/code\u003E, \u003Ccode\u003Efrom\u003C/code\u003E, \u003Ccode\u003Eto\u003C/code\u003E, and \u003Ccode\u003Ewhere\u003C/code\u003E.\u003C/li\u003E\n            \u003Cli\u003EView the result in the browser. When you click on an event, a view is constructed by injecting \u003Cstrong\u003Eviews/event.html\u003C/strong\u003E into the \u003Ccode\u003E\u0026lt;div ng-view\u0026gt;\u0026lt;/div\u0026gt;\u003C/code\u003E in \u003Cstrong\u003Eindex.html\u003C/strong\u003E.\u003C/li\u003E\n          \u003C/ol\u003E&quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs_calendar&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/routing/projects/angularjs_calendar.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_calendar&quot;,&quot;unit_slug&quot;:&quot;routing&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false},&quot;angularjs_reader&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs_reader&quot;,&quot;title&quot;:&quot;Reader&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll create an e-reader app.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/reader.jpg&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/angularjsreader&quot;,&quot;preview_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/4/reader/index.html#/books&quot;,&quot;objective&quot;:&quot;Reader is creating an AngularJS app for their e-reader service. \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/reader/index.html#/books\&quot;\u003EHere&#x27;s what it looks like\u003C/a\u003E.\n* The app displays a list of books on the home page.\n* When you click on a book, it takes you to the book&#x27;s description.\n* When you click the Read button, it takes you to the book&#x27;s first chapter. From there, you can use the Forward and Back buttons to read the book.&quot;,&quot;meta&quot;:{&quot;author&quot;:{&quot;fullname&quot;:&quot;Lalith Polepeddi&quot;,&quot;username&quot;:&quot;lpolepeddi&quot;}},&quot;self_assessments&quot;:[{&quot;tasks&quot;:[{&quot;key&quot;:&quot;angularjs_reader_0_0&quot;,&quot;text&quot;:&quot;In the view inside the \u003Ccode\u003E\u0026lt;head\u0026gt;\u003C/code\u003E element, include \u003Ca href=\&quot;https://code.angularjs.org/1.2.28/angular-route.min.js\&quot; target=\&quot;_blank\&quot;\u003Eangular-route.js\u003C/a\u003E as a new \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_reader_0_1&quot;,&quot;text&quot;:&quot;In \u003Cstrong\u003Eapp.js\u003C/strong\u003E, inject \u003Ccode\u003EngRoute\u003C/code\u003E into the module&#x27;s dependency array so that routing is available for the app to use.&quot;},{&quot;key&quot;:&quot;angularjs_reader_0_3&quot;,&quot;text&quot;:&quot;In \u003Cstrong\u003Eapp.js\u003C/strong\u003E, define the app&#x27;s routes:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EUse \u003Ccode\u003Eapp.config()\u003C/code\u003E and \u003Ccode\u003E$routeProvider\u003C/code\u003E to set up the routes.\u003C/li\u003E\n            \u003Cli\u003EMap the URL \u003Ccode\u003E/books\u003C/code\u003E to the controller \u003Ccode\u003EBookshelfController\u003C/code\u003E and the template \u003Cstrong\u003Eviews/bookshelf.html\u003C/strong\u003E.\u003C/li\u003E\n            \u003Cli\u003EOtherwise, redirect to \u003Ccode\u003E/books\u003C/code\u003E.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_reader_0_4&quot;,&quot;text&quot;:&quot;Create a service named \u003Ccode\u003Ebooks\u003C/code\u003E for getting data from the \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/books-api/books.json\&quot; target=\&quot;_blank\&quot;\u003Ebooks API\u003C/a\u003E. Create the service in a new file named \u003Cstrong\u003Ejs/services/books.js\u003C/strong\u003E. Include this new JavaScript file in the view as a \u003Ccode\u003Escript\u003C/code\u003E element.\n          \u003Cul\u003E\n            \u003Cli\u003EThe books API is a JSON object containing an array of books. Here&#x27;s how a single book is represented in this array:\n            \u003Cpre\u003E\u003Ccode class=\&quot;lang-javascript\&quot;\u003E{\n  \&quot;title\&quot;: \&quot;Metamorphosis\&quot;,\n  \&quot;cover\&quot;: \&quot;img/metamorphosis.jpg\&quot;,\n  \&quot;author\&quot;: \&quot;Franz Kafka\&quot;,\n  \&quot;description\&quot;: \&quot;Gregor Samsa turns into a large insect-like creature.\&quot;,\n  \&quot;chapters\&quot;: [\n    {\n      \&quot;title\&quot;: \&quot;I\&quot;,\n      \&quot;paragraphs\&quot;: [\&quot;paragraph 1\&quot;, \&quot;paragraph 2\&quot;]\n    },\n    {\n      \&quot;title\&quot;: \&quot;II\&quot;,\n      \&quot;paragraphs\&quot;: [\&quot;paragraph 1\&quot;, \&quot;paragraph 2\&quot;, \&quot;paragraph 3\&quot;, \&quot;paragraph 4\&quot;]\n    },\n    {\n      \&quot;title\&quot;: \&quot;III\&quot;,\n      \&quot;paragraphs\&quot;: [\&quot;paragraph 1\&quot;, \&quot;paragraph 2\&quot;, \&quot;paragraph 3\&quot;]\n    }\n  ]\n}\u003C/code\u003E\u003C/pre\u003E\n              \u003Cp\u003EEach book has a \u003Ccode\u003Etitle\u003C/code\u003E, \u003Ccode\u003Ecover\u003C/code\u003E, \u003Ccode\u003Eauthor\u003C/code\u003E, \u003Ccode\u003Edescription\u003C/code\u003E, and array of \u003Ccode\u003Echapters\u003C/code\u003E. Each chapter has a \u003Ccode\u003Etitle\u003C/code\u003E and array of \u003Ccode\u003Eparagraphs\u003C/code\u003E.\u003C/p\u003E\n            \u003C/li\u003E\n          \u003C/ul\u003E&quot;},{&quot;key&quot;:&quot;angularjs_reader_0_5&quot;,&quot;text&quot;:&quot;Set up the controller \u003Ccode\u003EBookshelfController\u003C/code\u003E and the template \u003Cstrong\u003Eviews/bookshelf.html\u003C/strong\u003E:\n          \u003Col type=\&quot;a\&quot;\u003E\n             \u003Cli\u003EIn the controller \u003Ccode\u003EBookshelfController\u003C/code\u003E, use the \u003Ccode\u003Ebooks\u003C/code\u003E service to load data from the server into the \u003Ccode\u003E$scope.myBooks\u003C/code\u003E.\u003C/li\u003E\n             \u003Cli\u003EFinish the template \u003Cstrong\u003Eviews/bookshelf.html\u003C/strong\u003E so that it displays each book.\u003Cbr\u003E\n              Notice in \u003Cstrong\u003Eviews/bookshelf.html\u003C/strong\u003E, we&#x27;re using \u003Ccode\u003E\u0026lt;a href=\&quot;#/books/{{ $index }}\&quot;\u0026gt;\u003C/code\u003E to create a URL for each book. The \u003Ccode\u003E$index\u003C/code\u003E gives the index of a book in the \u003Ccode\u003EmyBooks\u003C/code\u003E array. This means the URL of the first book is \u003Ccode\u003E#/books/0\u003C/code\u003E, the URL of the second book is \u003Ccode\u003E#/books/1\u003C/code\u003E, and so forth.\n             \u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_reader_0_6&quot;,&quot;text&quot;:&quot;In the view in the main section, add \u003Ccode\u003E\u0026lt;div ng-view\u0026gt;\u0026lt;/div\u0026gt;\u003C/code\u003E.&quot;},{&quot;key&quot;:&quot;angularjs_reader_0_7&quot;,&quot;text&quot;:&quot;View the result by visiting http://localhost:8000 in the browser. When you visit \u003Ccode\u003E/books\u003C/code\u003E, a view is constructed by injecting \u003Cstrong\u003Eviews/bookshelf.html\u003C/strong\u003E into the \u003Ccode\u003E\u0026lt;div ng-view\u0026gt;\u0026lt;/div\u0026gt;\u003C/code\u003E in \u003Cstrong\u003Eindex.html\u003C/strong\u003E.\u003C/li\u003E&quot;},{&quot;key&quot;:&quot;angularjs_reader_0_8&quot;,&quot;text&quot;:&quot;When a user clicks on a book, she should go to the book&#x27;s description. Let&#x27;s set this up next, following the same sequence of steps from above:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EIn \u003Cstrong\u003Eapp.js\u003C/strong\u003E, add another route. Map the URL \u003Ccode\u003E/books/:bookId\u003C/code\u003E to the controller \u003Ccode\u003EBookController\u003C/code\u003E and the template \u003Cstrong\u003Eviews/book.html\u003C/strong\u003E.\u003C/li\u003E\n            \u003Cli\u003EIn \u003Ccode\u003EBookController\u003C/code\u003E, use the \u003Ccode\u003Ebooks\u003C/code\u003E service to load a single book into the \u003Ccode\u003E$scope.book\u003C/code\u003E property. To do this, use the \u003Ccode\u003Ebooks\u003C/code\u003E service to fetch an array of books from the server, and then use \u003Ccode\u003E$routeParams.bookId\u003C/code\u003E to access the specific book by its index. Store the specific book into \u003Ccode\u003E$scope.book\u003C/code\u003E.\n              \u003Cul\u003E\n                \u003Cli\u003ERemember we can use Angular&#x27;s \u003Ccode\u003E$routeParams\u003C/code\u003E to retrieve \u003Ccode\u003EbookId\u003C/code\u003E from the URL by using \u003Ccode\u003E$routeParams.bookId\u003C/code\u003E.\u003C/li\u003E\n              \u003C/ul\u003E\n            \u003C/li\u003E\n            \u003Cli\u003EFinish the template in \u003Cstrong\u003Eviews/book.html\u003C/strong\u003E to display a book&#x27;s description. Looking at the format of the data in books API given above, display a book&#x27;s cover, title, author, and description.\u003C/li\u003E\n            \u003Cli\u003EView the result in the browser. When you click on a book, a view is constructed by injecting \u003Cstrong\u003Eviews/book.html\u003C/strong\u003E into the \u003Ccode\u003E\u0026lt;div ng-view\u0026gt;\u0026lt;/div\u0026gt;\u003C/code\u003E in \u003Cstrong\u003Eindex.html\u003C/strong\u003E.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_reader_0_9&quot;,&quot;text&quot;:&quot;When a user clicks on the Read button, she should go to the book&#x27;s first chapter. From there, she can use the Next and Back buttons to read the book. Let&#x27;s set this up next, following the same sequence of steps from above:\n\u003Col type=\&quot;a\&quot;\u003E\n  \u003Cli\u003EIn \u003Cstrong\u003Eapp.js\u003C/strong\u003E, add another route. Map the URL \u003Ccode\u003E/books/:bookId/chapters/:chapterId\u003C/code\u003E to the controller \u003Ccode\u003EChapterController\u003C/code\u003E and the template \u003Cstrong\u003Eviews/chapter.html\u003C/strong\u003E.\u003C/li\u003E\n  \u003Cli\u003EIn \u003Ccode\u003EChapterController\u003C/code\u003E, use the \u003Ccode\u003Ebooks\u003C/code\u003E service to load a single chapter into the \u003Ccode\u003E$scope.chapter\u003C/code\u003E property. To do this, in line 4 first get a specific book from the books API by using its index, just as you did in \u003Ccode\u003EBookController\u003C/code\u003E. Store the specific book into \u003Ccode\u003E$scope.book\u003C/code\u003E.\u003C/li\u003E\n  \u003Cli\u003EUnder it, access the array of chapters inside \u003Ccode\u003E$scope.book\u003C/code\u003E, and get a specific chapter in the array by using its index \u003Ccode\u003E$routeParams.chapterId\u003C/code\u003E. Store the specific chapter into \u003Ccode\u003E$scope.chapter\u003C/code\u003E.\u003C/li\u003E\n  \u003Cli\u003EFinish the template in \u003Cstrong\u003Eviews/chapter.html\u003C/strong\u003E to display a chapter. Looking at the format of the data in books API given above, display the book title, book author, chapter title, and chapter paragraphs.\u003C/li\u003E\n  \u003Cli\u003EView the result in the browser. When you click on the Read button, a view is constructed by injecting \u003Cstrong\u003Eviews/chapter.html\u003C/strong\u003E into the \u003Ccode\u003E\u0026lt;div ng-view\u0026gt;\u0026lt;/div\u0026gt;\u003C/code\u003E in \u003Cstrong\u003Eindex.html\u003C/strong\u003E. When you click on the Next and Back buttons, you navigate from chapter to chapter.\u003C/li\u003E\n\u003C/ol\u003E&quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs_reader&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/routing/projects/angularjs_reader.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_reader&quot;,&quot;unit_slug&quot;:&quot;routing&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false}},&quot;lessons&quot;:{&quot;routing&quot;:{&quot;node_type&quot;:&quot;lesson&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;routing&quot;,&quot;title&quot;:&quot;Routing&quot;,&quot;description&quot;:&quot;Add routes to build powerful single-page applications.&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/routing&quot;,&quot;exercises&quot;:{&quot;routing-routing-i&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;routing-routing-i&quot;,&quot;title&quot;:&quot;Routing I&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-routing&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;index.html&quot;},{&quot;filename&quot;:&quot;js/app.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;So far we&#x27;ve made AngularJS apps that display data in a single view **index.html**.\n\nBut what happens when the app grows and needs to display more information? Stuffing more code to a single view will quickly make things messy.\n\nA better solution is to use multiple templates that display different pieces of data based on the URL that the user is visiting. We can do this with Angular&#x27;s _application routes_.&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;In **index.html** under the `.header` section, type in the code exactly as you see here: \\n\\\n```html \\n\\\n\u003Cdiv ng-view\u003E\u003C/div\u003E \\n\\\n```&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n      if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;\u003Cdiv ng-view\u003E\\\\s*\u003C/div\u003E&#x27;)) {\n        return {pass: true};\n      }\n      return {pass: false, errors: { friendly: \&quot;Did you type \u003Cdiv ng-view\u003E\u003C/div\u003E in the view?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n  }, callback);\n});\ncheckpoint(&#x27;View the AngularJS app in the browser by typing http://localhost:8000/.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n        if (Components.WebBrowser.loadedOneOf([\&quot;http://localhost:8000/\&quot;, \&quot;localhost:8000\&quot;])) {\n          return {pass: true};\n        }\n  return {pass: false, errors: { friendly: \&quot;Did you navigate to &#x27;http://localhost:8000/&#x27; in the browser?\&quot;, component: \&quot;WebBrowser\&quot; }};\n    }, callback);\n});\ncheckpoint(\&quot;In **app.js** under the `angular.module`, type in this code: \\n\\\n```javascript \\n\\\napp.config(function ($routeProvider) { \\n\\\n  $routeProvider \\n\\\n    .when(&#x27;/&#x27;, { \\n\\\n      controller: &#x27;HomeController&#x27;, \\n\\\n      templateUrl: &#x27;views/home.html&#x27; \\n\\\n    }) \\n\\\n    .otherwise({ \\n\\\n      redirectTo: &#x27;/&#x27; \\n\\\n    }); \\n\\\n}); \\n\\\n```\&quot;, function(Tests, callback) {\n  Tests.karmaTest(&#x27;karma.js&#x27;, callback);\n});&quot;,&quot;files&quot;:{&quot;karma.js&quot;:&quot;describe(&#x27;Routes test&#x27;, function() {\n    // Mock our module in our tests\n    beforeEach(module(&#x27;GalleryApp&#x27;));\n\n    // We want to store a copy of the three services we&#x27;ll use in our tests\n    // so we can later reference these services in our tests.\n    var $location, $route, $rootScope;\n\n    // We added _ in our dependencies to avoid conflicting with our variables.\n    // Angularjs will strip out the _ and inject the dependencies.\n    beforeEach(inject(function(_$location_, _$route_, _$rootScope_){\n        $location = _$location_;\n        $route = _$route_;\n        $rootScope = _$rootScope_;\n    }));\n\n    // We need to setup a mock backend to handle the fetching of templates from the &#x27;templateUrl&#x27;.\n    beforeEach(inject(function($httpBackend){\n        $httpBackend.expectGET(&#x27;views/home.html&#x27;).respond(200, &#x27;main HTML&#x27;);\n        // or we can use $templateCache service to store the template.\n        // $routeProvider will search for the template in the $templateCache first\n        // before fetching it using http\n        // $templateCache.put(&#x27;templates/main.html&#x27;, &#x27;main HTML&#x27;);\n    }));\n\n    // Our test code is set up. We can now start writing the tests.\n\n    // When a user navigates to the index page, they are shown the index page with the proper\n    // controller\n    it(&#x27;Make sure to type the code in app.js exactly as shown in Step 2&#x27;, function(){\n        expect($location.path()).toBe(&#x27;&#x27;);\n\n        $location.path(&#x27;/&#x27;);\n\n        // The router works with the digest lifecycle, wherein after the location is set,\n        // it takes a single digest loop cycle to process the route,\n        // transform the page content, and finish the routing.\n        // In order to trigger the location request, we\u2019ll run a digest cycle (on the $rootScope)\n        // and check that the controller is as expected.\n        $rootScope.$digest();\n\n        expect($location.path()).toBe( &#x27;/&#x27; );\n        expect($route.current.controller).toBe(&#x27;HomeController&#x27;);\n    });\n\n    it(&#x27;Make sure to type the code in app.js exactly as shown in Step 2&#x27;, function(){\n        expect($location.path()).toBe(&#x27;&#x27;);\n\n        $location.path(&#x27;/a/non-existent/route&#x27;);\n\n        $rootScope.$digest();\n\n        expect($location.path()).toBe( &#x27;/&#x27; );\n        expect($route.current.controller).toBe(&#x27;HomeController&#x27;);\n    });\n});\n&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/routing/lessons/routing/exercises/routing-routing-i.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/routing/exercises/routing-routing-i&quot;},&quot;routing-routing-ii&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;routing-routing-ii&quot;,&quot;title&quot;:&quot;Routing II&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-routing&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;index.html&quot;},{&quot;filename&quot;:&quot;js/app.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;Great! A gallery of images shows up. How does it work?\n1. In **app.js** inside the `app.config()` method, we use Angular&#x27;s `$routeProvider` to define the application routes.\n2. We used `.when()` to map the URL `/` to to the controller `HomeController` and the template `home.html`. The `HomeController` uses the service **js/services/photos.js** to fetch the array of all photos from https://s3.amazonaws.com/codecademy-content/courses/ltp4/photos-api/photos.json and stores it into `$scope.photos`. The `home.html` uses `ng-repeat` to loop through each item in the `photos` array and display each photo.\n3. Otherwise if a user accidentally visits a URL other than `/`, we just redirect to `/` using `.otherwise()`.\n4. Now when a user visits `/`, a view will be constructed by injecting `home.html` into the `\u003Cdiv ng-view\u003E\u003C/div\u003E` in **index.html**.\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;In **app.js** between the `.when()` and `.otherwise()`, add another `.when()` that maps the URL `/photos/:id` to the controller `PhotoController` and the template **views/photo.html**.&#x27;, function(Tests, callback) {\n  Tests.karmaTest(&#x27;karma1.js&#x27;, callback);\n});\ncheckpoint(&#x27;Visit http://localhost:8000/ and click on a photo. A detail page about that photo should appear.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n        if (Components.WebBrowser.loadedOneOf([\&quot;http://localhost:8000/\&quot;, \&quot;localhost:8000\&quot;])) {\n          return {pass: true};\n        }\n\nreturn {pass: false, errors: { friendly: \&quot;Did you visit &#x27;http://localhost:8000/&#x27; in the browser?\&quot;, component: \&quot;WebBrowser\&quot; }};\n    }, callback);\n});&quot;,&quot;files&quot;:{&quot;karma1.js&quot;:&quot;describe(&#x27;Routes test&#x27;, function() {\n    // Mock our module in our tests\n    beforeEach(module(&#x27;GalleryApp&#x27;));\n\n    // We want to store a copy of the three services we&#x27;ll use in our tests\n    // so we can later reference these services in our tests.\n    var $location, $route, $rootScope;\n\n    // We added _ in our dependencies to avoid conflicting with our variables.\n    // Angularjs will strip out the _ and inject the dependencies.\n    beforeEach(inject(function(_$controller_, _$location_, _$route_, _$rootScope_){\n        $controller = _$controller_;\n        $location = _$location_;\n        $route = _$route_;\n        $rootScope = _$rootScope_;\n        PhotoController = $controller(&#x27;PhotoController&#x27;, { $scope: $rootScope, $routeParams: {id: &#x27;1&#x27;}});\n    }));\n\n    // We need to setup a mock backend to handle the fetching of templates from the &#x27;templateUrl&#x27;.\n    beforeEach(inject(function($httpBackend){\n        $httpBackend.whenGET(&#x27;views/home.html&#x27;).respond(200, &#x27;main HTML&#x27;);\n        $httpBackend.whenGET(&#x27;views/photo.html&#x27;).respond(200, &#x27;photo HTML&#x27;);\n        $httpBackend.whenGET(&#x27;https://s3.amazonaws.com/codecademy-content/courses/ltp4/photos-api/photos.json&#x27;).respond([\n          {\n            \&quot;title\&quot;: \&quot;Canada\&quot;,\n            \&quot;author\&quot;: \&quot;Tim Gage\&quot;,\n            \&quot;url\&quot;: \&quot;https://dl.dropboxusercontent.com/u/110238630/ltp4-photos-api/canada.jpg\&quot;,\n            \&quot;pubdate\&quot;: 1412208000000,\n            \&quot;upvotes\&quot;: 60,\n            \&quot;views\&quot;: 1195\n          }])\n    }));\n\n    it(&#x27;Did you use .when() to map the URL /photos/:id?&#x27;, function(){\n        expect($location.path()).toBe(&#x27;&#x27;);\n\n        $location.path(&#x27;/photos/1&#x27;);\n\n        $rootScope.$digest();\n\n        expect($location.path()).toBe(&#x27;/photos/1&#x27;);\n        expect($route.current.controller).toBe(&#x27;PhotoController&#x27;);\n    });\n});\n&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/routing/lessons/routing/exercises/routing-routing-ii.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/routing/exercises/routing-routing-ii&quot;},&quot;routing-routing-iii&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;routing-routing-iii&quot;,&quot;title&quot;:&quot;Routing III&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-routing&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;js/app.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;What did we just do?\n\n1. In **app.js**, we mapped a URL to `PhotoController` and `photo.html`. We added a variable part named `id` to the URL, like this: `/photos/:id`.\n2. In **PhotoController**, we used Angular&#x27;s `$routeParams` to retrieve `id` from the URL by using `$routeParams.id`. Notice that we injected both `$routeParams` and the `photos` service into the `PhotoController` dependency array to make them available to use inside the controller.\n3. Then to fetch an individual photo, we first used the `photos` service to fetch the array of photos from the server, and then used `$routeParams.id` to access the specific photo by its index.\n4. As before, any properties attached to `$scope` become available to use in the view. This means in **photo.html**, we can display the photo&#x27;s `detail` using expressions as done before.\n\nNotice that when you click on links, the app doesn&#x27;t do a full reload. Only the part of the view specified by `\u003Cdiv ng-view\u003E\u003C/div\u003E` changes.&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;Finish the template so that it displays a photo\\&#x27;s details. \\n\\\n\\n\\\nFirst, in the browser, visit https://s3.amazonaws.com/codecademy-content/courses/ltp4/photos-api/photos.json. Looking at the format of the data in the array, each photo has six pieces of data - `title`, `author`, `url`, `pubdate`, `upvotes`, and `views`.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n        if (Components.WebBrowser.loadedURL(\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/photos-api/photos.json\&quot;)) {\n          return {pass: true};\n        }\n\nreturn {pass: false, errors: { friendly: \&quot;Did you visit &#x27;https://s3.amazonaws.com/codecademy-content/courses/ltp4/photos-api/photos.json&#x27; in the browser?\&quot;, component: \&quot;WebBrowser\&quot; }};\n    }, callback);\n});\ncheckpoint(&#x27;In the template **photo.html**, display a photo\\&#x27;s remaining five pieces of data. Then visit http://localhost:8000/ in the browser and click on a photo. A detail page about that photo should appear.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n        if (Components.WebBrowser.loadedOneOf([\&quot;http://localhost:8000/\&quot;, \&quot;localhost:8000\&quot;])) {\n          return {pass: true};\n        }\n\nreturn {pass: false, errors: { friendly: \&quot;Did you visit &#x27;http://localhost:8000/&#x27; in the browser?\&quot;, component: \&quot;WebBrowser\&quot; }};\n    }, callback);\n});\ncheckpoint(&#x27;Use the `number` filter to format the `views` and `upvotes`.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n      if (Components.CodeEditor.codeContains(&#x27;views/photo.html&#x27;, \&quot;\\\\|\\\\s*number\\\\s*}}\&quot;)) {\n        return {pass: true};\n      }\n\n        return {pass: false, errors: { friendly: \&quot;Did you add code to format views and upvotes?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n\n  }, callback);\n});\ncheckpoint(&#x27;Use the `date` filter to format the `pubdate`.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n      if (Components.CodeEditor.codeContains(&#x27;views/photo.html&#x27;, \&quot;\\\\s*\\\\|\\\\s*date\\\\s*}}\&quot;)) {\n        return {pass: true};\n      }\n\n        return {pass: false, errors: { friendly: \&quot;Did you add the code in to format pubdate?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n\n  }, callback);\n});\ncheckpoint(&#x27;View the result in the browser. The photo\\&#x27;s views, upvotes, and date should now be formatted.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n        if (Components.WebBrowser.loadedOneOf([\&quot;http://localhost:8000/\&quot;, \&quot;localhost:8000\&quot;])) {\n          return {pass: true};\n        }\n\nreturn {pass: false, errors: { friendly: \&quot;Did you visit &#x27;http://localhost:8000/&#x27; in the browser?\&quot;, component: \&quot;WebBrowser\&quot; }};\n    }, callback);\n});\n&quot;,&quot;files&quot;:{&quot;sct1.js&quot;:&quot;$expect(&#x27;.title&#x27;).not.to.be.empty();\n$expect(&#x27;.author&#x27;).not.to.be.empty();\n$expect(&#x27;.views&#x27;).not.to.be.empty();\n$expect(&#x27;.upvotes&#x27;).not.to.be.empty();\n$expect(&#x27;.pubdate&#x27;).not.to.be.empty();&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/routing/lessons/routing/exercises/routing-routing-iii.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/routing/exercises/routing-routing-iii&quot;},&quot;routing-generalizations&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;routing-generalizations&quot;,&quot;title&quot;:&quot;Generalizations&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-routing&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;js/app.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;Why are routes useful? Instead of filling a single view with more code than needed, routes let us map URLs to self-contained controllers and templates. Furthermore, now that the app has URLs, users can easily bookmark and share the app&#x27;s pages.\n\nWhat can we generalize so far?\n* Directives are a way to make standalone UI components, like `\u003Capp-info\u003E`\n* Services are a way to make standalone communication logic, like `forecast` which fetches weather data from a server\n* Routes are a way to manage apps containing more views.\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;&quot;,&quot;files&quot;:{}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/routing/lessons/routing/exercises/routing-generalizations.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/routing/exercises/routing-generalizations&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/routing/lessons/routing/routing.en.yml&quot;,&quot;exercises_order&quot;:[&quot;routing-routing-i&quot;,&quot;routing-routing-ii&quot;,&quot;routing-routing-iii&quot;,&quot;routing-generalizations&quot;],&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/routing/resume&quot;,&quot;unit_slug&quot;:&quot;routing&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/routing/routing.en.yml&quot;,&quot;lessons_order&quot;:[&quot;routing&quot;],&quot;projects_order&quot;:[&quot;angularjs_outbox-2&quot;,&quot;angularjs_calendar&quot;,&quot;angularjs_reader&quot;],&quot;quizzes&quot;:{&quot;angularjs-quiz-4&quot;:{&quot;node_type&quot;:&quot;quiz&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs-quiz-4&quot;,&quot;title&quot;:&quot;AngularJS Quiz 4&quot;,&quot;questions&quot;:[{&quot;question&quot;:{&quot;text&quot;:&quot;What is the purpose of routes?&quot;},&quot;answers&quot;:[{&quot;text&quot;:&quot;Routes allow you to map URLs to self-contained controllers and templates.&quot;},{&quot;text&quot;:&quot;When a user brings up a new window&quot;},{&quot;text&quot;:&quot;Routes are solely created for the purpose of redirecting a inputted URL to a different URL.&quot;},{&quot;text&quot;:&quot;Routes are used to fetch data from a server.&quot;}],&quot;correct_index&quot;:1},{&quot;question&quot;:{&quot;text&quot;:&quot;Given the following code in app.js, what is the purpose of &#x27;$routeProvider&#x27;?&quot;,&quot;snippet&quot;:{&quot;code&quot;:[&quot;var app = angular.module(&#x27;GalleryApp&#x27;, [&#x27;ngRoute&#x27;]);\napp.config(function ($routeProvider) { \n  $routeProvider \n    ...\n});&quot;],&quot;language&quot;:&quot;javascript&quot;}},&quot;answers&quot;:[{&quot;text&quot;:&quot;$routeProvider is where new templates are stored.&quot;},{&quot;text&quot;:&quot;$routeProvider is used to define the application routes.&quot;},{&quot;text&quot;:&quot;$routeProvider uses boolean values to turn routes on or off.&quot;},{&quot;text&quot;:&quot;$routeProvider provides an alternative if a route if broken.&quot;}],&quot;correct_index&quot;:2},{&quot;question&quot;:{&quot;text&quot;:&quot;Given the following code in app.js, what is the significance of .when(&#x27;/&#x27;)?&quot;,&quot;snippet&quot;:{&quot;code&quot;:[&quot;var app = angular.module(&#x27;GalleryApp&#x27;, [&#x27;ngRoute&#x27;]);\napp.config(function ($routeProvider) { \n  $routeProvider \n    .when(&#x27;/&#x27;, { \n      controller: &#x27;HomeController&#x27;, \n      templateUrl: &#x27;views/home.html&#x27; \n    }) \n});&quot;],&quot;language&quot;:&quot;javascript&quot;}},&quot;answers&quot;:[{&quot;text&quot;:&quot;.when() maps the URL / to to the controller HomeController&quot;},{&quot;text&quot;:&quot;.when() maps the URL / to to the controller HomeController and the template home.html.&quot;},{&quot;text&quot;:&quot;.when() creates a URL &#x27;/&#x27;&quot;},{&quot;text&quot;:&quot;.when() redirects the URL views/home.html to &#x27;/&#x27;&quot;}],&quot;correct_index&quot;:2},{&quot;question&quot;:{&quot;text&quot;:&quot;Given the following code in app.js, what is the significance of .otherwise()?&quot;,&quot;snippet&quot;:{&quot;code&quot;:[&quot;var app = angular.module(&#x27;GalleryApp&#x27;, [&#x27;ngRoute&#x27;]);\napp.config(function ($routeProvider) { \n  $routeProvider \n    .when(&#x27;/&#x27;, { \n      controller: &#x27;HomeController&#x27;, \n      templateUrl: &#x27;views/home.html&#x27; \n    }) \n    .otherwise({ \n      redirectTo: &#x27;/&#x27; \n    }); \n});&quot;],&quot;language&quot;:&quot;javascript&quot;}},&quot;answers&quot;:[{&quot;text&quot;:&quot;.otherwise() defines the home route.&quot;},{&quot;text&quot;:&quot;.otherwise() closes the router&quot;},{&quot;text&quot;:&quot;.otherwise() handles all cases where the URL entered is not defined&quot;},{&quot;text&quot;:&quot;.otherwise() opens the router.&quot;}],&quot;correct_index&quot;:3},{&quot;question&quot;:{&quot;text&quot;:&quot;Given the following code in PhotoController, what is the significance of $routeParams.id&quot;,&quot;snippet&quot;:{&quot;code&quot;:[&quot;app.controller(&#x27;PhotoController&#x27;, [&#x27;$scope&#x27;, &#x27;photos&#x27;, &#x27;$routeParams&#x27;, function($scope, photos, $routeParams) {\n  photos.success(function(data) {\n    $scope.detail = data[$routeParams.id];\n  });\n}]);&quot;],&quot;language&quot;:&quot;javascript&quot;}},&quot;answers&quot;:[{&quot;text&quot;:&quot;$routeParams.id creates a new route called /photos/:id&quot;},{&quot;text&quot;:&quot;$routeParams.id caches an individual photo&quot;},{&quot;text&quot;:&quot;$routeParams.id accesses a specific photo by its index&quot;},{&quot;text&quot;:&quot;$routeParams.id creates an id for a specific photo&quot;}],&quot;correct_index&quot;:3},{&quot;question&quot;:{&quot;text&quot;:&quot;What is the purpose of ng-view?&quot;},&quot;answers&quot;:[{&quot;text&quot;:&quot;ng-view is a directive that includes the rendered template of the current route into the main layout index.html&quot;},{&quot;text&quot;:&quot;ng-view is a directive that iterates through all of an application html templates at once.&quot;},{&quot;text&quot;:&quot;ng-view is a directive that links to the rendered template from index.html&quot;},{&quot;text&quot;:&quot;ng-view is a directive that you can use instead of $route&quot;}],&quot;correct_index&quot;:1}],&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/routing/quizs/angularjs-quiz-4.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs-quiz-4&quot;,&quot;unit_slug&quot;:&quot;routing&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false}},&quot;quizzes_order&quot;:[&quot;angularjs-quiz-4&quot;]},&quot;angularjs_piat&quot;:{&quot;node_type&quot;:&quot;unit&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs_piat&quot;,&quot;title&quot;:&quot;Putting It All Together&quot;,&quot;description&quot;:&quot;Take what you learned in this course and put it all together with these projects.&quot;,&quot;projects&quot;:{&quot;angularjs_nearme-1&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs_nearme-1&quot;,&quot;title&quot;:&quot;NearMe 1&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll build a location-based service using a third-party custom directive.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/near-me-1.jpg&quot;,&quot;preview_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/4/nearme-1/index.html&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/angularjsnearme-1&quot;,&quot;objective&quot;:&quot;NearMe is creating an AngularJS app for their location-based service service. \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/nearme-1/index.html\&quot;\u003EHere&#x27;s what it looks like\u003C/a\u003E. The app displays places of interest on a map. When you click on a map marker, a popup with a message displays.&quot;,&quot;meta&quot;:{&quot;author&quot;:{&quot;fullname&quot;:&quot;Lalith Polepeddi&quot;,&quot;username&quot;:&quot;lpolepeddi&quot;}},&quot;self_assessments&quot;:[{&quot;tasks&quot;:[{&quot;key&quot;:&quot;angularjs_nearme-1_0_0&quot;,&quot;text&quot;:&quot;Include the AngularJS library in your project. We&#x27;ve downloaded the AngularJS library to \u003Cstrong\u003Ejs/vendor/angular.min.js\u003C/strong\u003E. Include this file as a new \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E element inside the \u003Ccode\u003E\u0026lt;head\u0026gt;\u003C/code\u003E of \u003Cstrong\u003Eindex.html\u003C/strong\u003E.&quot;},{&quot;key&quot;:&quot;angularjs_nearme-1_0_1&quot;,&quot;text&quot;:&quot;In \u003Cstrong\u003Ejs/app.js\u003C/strong\u003E, create a new module named \u003Ccode\u003ENearMeApp\u003C/code\u003E. Include it as a new  \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E element, and then attach it to the \u003Ccode\u003E\u0026lt;body\u0026gt;\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_nearme-1_0_2&quot;,&quot;text&quot;:&quot;In \u003Cstrong\u003Ejs/controllers/MainController.js\u003C/strong\u003E, create a new controller named \u003Ccode\u003EMainController\u003C/code\u003E. Include it as a new  \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E element, and then attach it to the \u003Ccode\u003E\u0026lt;div class=\&quot;main\&quot;\u0026gt;\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_nearme-1_0_3&quot;,&quot;text&quot;:&quot;So far, you&#x27;ve been writing your own custom directives. Developers in the AngularJS community have been creating and sharing their own directives for others to use. A popular directive is the \u003Ca href=\&quot;http://tombatossals.github.io/angular-leaflet-directive/#!/\&quot; target=\&quot;_blank\&quot;\u003Eleaflet directive\u003C/a\u003E, which allows you to embed a map in your AngularJS app. Let&#x27;s use it here in the NearMe app:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003ECreate a new file \u003Cstrong\u003Ejs/vendor/leaflet.js\u003C/strong\u003E. Copy all the code from the \u003Ca target=\&quot;_blank\&quot; href=\&quot;http://cdn.leafletjs.com/leaflet-0.7.1/leaflet.js\&quot;\u003ELeaflet JavaScript file\u003C/a\u003E and paste it into your \u003Cstrong\u003Ejs/vendor/leaflet.js\u003C/strong\u003E. Then include \u003Cstrong\u003Ejs/vendor/leaflet.js\u003C/strong\u003E as a new \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E.\u003C/li\u003E\n            \u003Cli\u003ECreate a new file \u003Cstrong\u003Ejs/vendor/angular-leaflet-directive.min.js\u003C/strong\u003E. Copy all the code from the \u003Ca target=\&quot;_blank\&quot; href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/nearme-1/js/vendor/angular-leaflet-directive.min.js\&quot;\u003ELeaflet directive\u003C/a\u003E and paste it into your \u003Cstrong\u003Ejs/vendor/angular-leaflet-directive.min.js\u003C/strong\u003E. Then include \u003Cstrong\u003Ejs/vendor/angular-leaflet-directive.min.js\u003C/strong\u003E as a new \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E.\u003C/li\u003E\n            \u003Cli\u003ECreate a new file \u003Cstrong\u003Ecss/leaflet.css\u003C/strong\u003E. Copy all the code from the \u003Ca target=\&quot;_blank\&quot; href=\&quot;http://cdn.leafletjs.com/leaflet-0.7.1/leaflet.css\&quot;\u003ELeaflet CSS file\u003C/a\u003E and paste it into your \u003Cstrong\u003Ecss/leaflet.css\u003C/strong\u003E. Then include \u003Cstrong\u003Ecss/leaflet.css\u003C/strong\u003E as a new \u003Ccode\u003E\u0026lt;link\u0026gt;\u003C/code\u003E element inside the \u003Ccode\u003E\u0026lt;head\u0026gt;\u003C/code\u003E of \u003Cstrong\u003Eindex.html\u003C/strong\u003E.\u003C/li\u003E\n            \u003Cli\u003EIn the module, inject \u003Ccode\u003Eleaflet-directive\u003C/code\u003E into the dependency array so that the leaflet directive is available for the app to use.\u003C/li\u003E\n            \u003Cli\u003EIn the view, use the \u003Ccode\u003E\u0026lt;leaflet\u0026gt;\u003C/code\u003E directive to display a map.\u003C/li\u003E\n          \u003C/ol\u003E\n        &quot;},{&quot;key&quot;:&quot;angularjs_nearme-1_0_4&quot;,&quot;text&quot;:&quot;View the result by visiting http://localhost:8000 in the browser.&quot;},{&quot;key&quot;:&quot;angularjs_nearme-1_0_5&quot;,&quot;text&quot;:&quot;The \u003Ccode\u003E\u0026lt;leaflet\u0026gt;\u003C/code\u003E directive can take information about the map&#x27;s position through the \u003Ccode\u003Ecenter\u003C/code\u003E attribute:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EIn the controller, make a new property called \u003Ccode\u003E$scope.mapCenter\u003C/code\u003E, and set it equal to the following object:\n              \u003Cpre\u003E\u003Ccode class=\&quot;lang-javascript\&quot;\u003E{\n  lat: 40.741934,\n  lng: -74.004897,\n  zoom: 17\n}\u003C/code\u003E\u003C/pre\u003E\n            \u003C/li\u003E\n            \u003Cli\u003EIn the view, pass \u003Ccode\u003EmapCenter\u003C/code\u003E into the directive&#x27;s \u003Ccode\u003Ecenter\u003C/code\u003E attribute.\u003C/li\u003E\n            \u003Cli\u003EView the result in the browser. The map is now centered around the latitude and longitude 40.741934, -74.004897.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_nearme-1_0_6&quot;,&quot;text&quot;:&quot;\u003Ccode\u003E\u0026lt;leaflet\u0026gt;\u003C/code\u003E directive can take information about the map&#x27;s markers through the \u003Ccode\u003Emarkers\u003C/code\u003E attribute:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EIn the controller, make a new property called \u003Ccode\u003E$scope.mapMarkers\u003C/code\u003E, and set it equal to the following array:\n              \u003Cpre\u003E\u003Ccode class=\&quot;lang-javascript\&quot;\u003E[\n  {\n    lat: 40.741389,\n    lng: -74.003056,\n    message: \&quot;111 Eighth Avenue\&quot;\n  },\n  {\n    lat: 40.7425,\n    lng: -74.006111,\n    message: \&quot;Chelsea Market\&quot;\n  }\n]\u003C/code\u003E\u003C/pre\u003E\n            \u003C/li\u003E\n            \u003Cli\u003EIn the view, pass \u003Ccode\u003EmapMarkers\u003C/code\u003E into the directive&#x27;s \u003Ccode\u003Emarkers\u003C/code\u003E attribute.\u003C/li\u003E\n            \u003Cli\u003EView the result in the browser. The map has two markers that you can click on.\u003C/li\u003E\n          \u003C/ol\u003E&quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs_nearme&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/angularjs_piat/projects/angularjs_nearme-1.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_nearme-1&quot;,&quot;unit_slug&quot;:&quot;angularjs_piat&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false},&quot;angularjs_nearme-2&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs_nearme-2&quot;,&quot;title&quot;:&quot;NearMe 2&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll fetch data from the Wikipedia API and display it in your map.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/near-me-2.jpg&quot;,&quot;preview_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/4/nearme-2/index.html&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/angularjsnearme-2&quot;,&quot;objective&quot;:&quot;NearMe is creating an AngularJS app for their location-based service service. \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/nearme-2/index.html\&quot;\u003EHere&#x27;s what it looks like\u003C/a\u003E. The app displays places of interest on a map. When you click on a map marker, a popup with a message displays.&quot;,&quot;meta&quot;:{&quot;author&quot;:{&quot;fullname&quot;:&quot;Lalith Polepeddi&quot;,&quot;username&quot;:&quot;lpolepeddi&quot;}},&quot;self_assessments&quot;:[{&quot;tasks&quot;:[{&quot;key&quot;:&quot;angularjs_nearme-2_0_0&quot;,&quot;text&quot;:&quot;Rather than hardcode the map markers in the controller, let&#x27;s write a service to fetch them from a real API:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EWikipedia has added latitude/longtiude coordinates to several of their articles about places and landmarks. The \u003Ca target=\&quot;_blank\&quot; href=\&quot;https://en.wikipedia.org/w/api.php?action=query\u0026amp;list=geosearch\u0026amp;gsradius=5000\u0026amp;gscoord=40.741934%7C-74.004897\u0026amp;gslimit=30\&quot;\u003EWikipedia Geodata API\u003C/a\u003E returns a JSON object containing an array of Wikipedia articles near a given point, in this case the latitude and longitude 40.741934, -74.004897.\u003C/li\u003E\n            \u003Cli\u003EIn \u003Cstrong\u003Ejs/services/places.js\u003C/strong\u003E, create a new service named \u003Ccode\u003Eplaces\u003C/code\u003E.\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003E$http\u003C/code\u003E to get places data from \u003Ca href=\&quot;https://en.wikipedia.org/w/api.php?action=query\u0026amp;list=geosearch\u0026amp;gsradius=5000\u0026amp;gscoord=40.741934%7C-74.004897\u0026amp;gslimit=30\u0026amp;format=json\u0026amp;callback=JSON_CALLBACK\&quot;\u003Ehttps://en.wikipedia.org/w/api.php?action=query\u0026amp;list=geosearch\u0026amp;gsradius=5000\u0026amp;gscoord=40.741934%7C-74.004897\u0026amp;gslimit=30\u0026amp;format=json\u0026amp;callback=JSON_CALLBACK\u003C/a\u003E. Use \u003Ccode\u003E$http.jsonp\u003C/code\u003E instead of \u003Ccode\u003E$http.get\u003C/code\u003E.\u003C/li\u003E\n            \u003Cli\u003EInclude the service as a \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E element.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_nearme-2_0_1&quot;,&quot;text&quot;:&quot;In the controller, delete \u003Ccode\u003E$scope.mapMarkers\u003C/code\u003E.&quot;},{&quot;key&quot;:&quot;angularjs_nearme-2_0_2&quot;,&quot;text&quot;:&quot;In its place, use the \u003Ccode\u003Eplaces\u003C/code\u003E service to fetch marker data from the Wikipedia API:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003ECreate a new file \u003Cstrong\u003Ejs/vendor/helpers.js\u003C/strong\u003E. Copy all the code from \u003Ca target=\&quot;_blank\&quot; href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/nearme-2/js/vendor/helpers.js\&quot;\u003Ethis JavaScript file\u003C/a\u003E and paste it into your \u003Cstrong\u003Ejs/vendor/helpers.js\u003C/strong\u003E. Then include it as as a new \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E. We&#x27;ll use the \u003Ccode\u003EgeodataToMarkers()\u003C/code\u003E function to format the Wikipedia API&#x27;s output so that we can use it in the map.\u003C/li\u003E\n            \u003Cli\u003EAdd \u003Ccode\u003Eplaces\u003C/code\u003E into \u003Ccode\u003EMainController\u003C/code\u003E as a dependency so that it&#x27;s available to use.\u003C/li\u003E\n            \u003Cli\u003EThen use \u003Ccode\u003Eplaces\u003C/code\u003E within the controller to asynchronously fetch the places data from the server, and store it into \u003Ccode\u003E$scope.geodata\u003C/code\u003E.\u003C/li\u003E\n            \u003Cli\u003EUse the\u003Ccode\u003EgeodataToMarkers()\u003C/code\u003E function to format \u003Ccode\u003E$scope.geodata\u003C/code\u003E, and store that output into \u003Ccode\u003E$scope.mapMarkers\u003C/code\u003E, like this:\n              \u003Cpre\u003E\u003Ccode class=\&quot;lang-javascript\&quot;\u003E$scope.mapMarkers = geodataToMarkers($scope.geodata);\u003C/code\u003E\u003C/pre\u003E\n            \u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_nearme-2_0_3&quot;,&quot;text&quot;:&quot;In the view, pass `mapMarkers` into the `\u0026lt;leaflet\u0026gt;` directive&#x27;s `markers` attribute.&quot;},{&quot;key&quot;:&quot;angularjs_nearme-2_0_4&quot;,&quot;text&quot;:&quot;View the result by visiting http://localhost:8000 in the browser. Wikipedia articles around the point 40.741934, -74.004897 now show up on the map. The \u003Ccode\u003EgeodataToMarkers()\u003C/code\u003E function added links inside each map marker&#x27;s popup that go to the corresponding Wikipedia article.&quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs_nearme&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/angularjs_piat/projects/angularjs_nearme-2.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_nearme-2&quot;,&quot;unit_slug&quot;:&quot;angularjs_piat&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false},&quot;angularjs_nearme-3&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs_nearme-3&quot;,&quot;title&quot;:&quot;NearMe 3&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll map URLs to different views in your app using routing.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/near-me-3.jpg&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/angularjsnearme-3&quot;,&quot;preview_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/4/nearme-3/index.html&quot;,&quot;objective&quot;:&quot;NearMe is creating an AngularJS app for their location-based service service. \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/nearme-3/index.html\&quot;\u003EHere&#x27;s what it looks like\u003C/a\u003E. Now when you click on the About link at the top right, an page with more information about the app displays.&quot;,&quot;meta&quot;:{&quot;author&quot;:{&quot;fullname&quot;:&quot;Lalith Polepeddi&quot;,&quot;username&quot;:&quot;lpolepeddi&quot;}},&quot;self_assessments&quot;:[{&quot;tasks&quot;:[{&quot;key&quot;:&quot;angularjs_nearme-3_0_0&quot;,&quot;text&quot;:&quot;Include \u003Ca href=\&quot;https://code.angularjs.org/1.2.28/angular-route.min.js\&quot; target=\&quot;_blank\&quot;\u003Eangular-route.js\u003C/a\u003E as a new \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E element inside the \u003Ccode\u003E\u0026lt;head\u0026gt;\u003C/code\u003E of \u003Cstrong\u003Eindex.html\u003C/strong\u003E.&quot;},{&quot;key&quot;:&quot;angularjs_nearme-3_0_1&quot;,&quot;text&quot;:&quot;In \u003Cstrong\u003Eapp.js\u003C/strong\u003E, inject \u003Ccode\u003EngRoute\u003C/code\u003E into the module&#x27;s dependency array so that routing is available for the app to use.&quot;},{&quot;key&quot;:&quot;angularjs_nearme-3_0_2&quot;,&quot;text&quot;:&quot;In \u003Cstrong\u003Eapp.js\u003C/strong\u003E, define the app&#x27;s routes:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EUse \u003Ccode\u003Eapp.config()\u003C/code\u003E and \u003Ccode\u003E$routeProvider\u003C/code\u003E to set up the routes.\u003C/li\u003E\n            \u003Cli\u003EMap the URL \u003Ccode\u003E/\u003C/code\u003E to the controller \u003Ccode\u003EMainController\u003C/code\u003E and the template \u003Cstrong\u003Eviews/main.html\u003C/strong\u003E.\u003C/li\u003E\n            \u003Cli\u003EOtherwise, redirect to \u003Ccode\u003E/\u003C/code\u003E\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_nearme-3_0_3&quot;,&quot;text&quot;:&quot;Refactor the app to set up the controller \u003Ccode\u003EMainController\u003C/code\u003E and the template \u003Cstrong\u003Eviews/main.html\u003C/strong\u003E:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EMake a new file \u003Cstrong\u003Eviews/main.html\u003C/strong\u003E.\u003C/li\u003E\n            \u003Cli\u003ECut the \u003Ccode\u003E\u0026lt;div class=\&quot;main\&quot;\u0026lt;\u003C/code\u003E section from \u003Cstrong\u003Eindex.html\u003C/strong\u003E, and paste it into \u003Cstrong\u003Eviews/main.html\u003C/strong\u003E.\u003C/li\u003E\n            \u003Cli\u003EIn \u003Cstrong\u003Eindex.html\u003C/strong\u003E, replace the \u003Ccode\u003E\u0026lt;div class=\&quot;main\&quot;\u0026gt;\u003C/code\u003E with \u003Ccode\u003E\u0026lt;div ng-view\u0026gt;\u0026lt;/div\u0026gt;\u003C/code\u003E.\u003C/li\u003E\n            \u003Cli\u003EIn \u003Cstrong\u003Eviews/main.html\u003C/strong\u003E, remove the \u003Ccode\u003Eng-controller=\&quot;MainController\&quot;\u003C/code\u003E from \u003Ccode\u003E\u0026lt;div class=\&quot;main\&quot;\u0026gt;\u003C/code\u003E.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_nearme-3_0_4&quot;,&quot;text&quot;:&quot;View the result by visiting http://localhost:8000 in the browser. The app should be working just it did before refactoring.&quot;},{&quot;key&quot;:&quot;angularjs_nearme-3_0_5&quot;,&quot;text&quot;:&quot;In \u003Cstrong\u003Eindex.html\u003C/strong\u003E in the header section under the \u003Ccode\u003E\u0026lt;h1\u0026gt;\u003C/code\u003E, add a link to the About page, like this:\n          \u003Cpre\u003E\u003Ccode class=\&quot;lang-javascript\&quot;\u003E\u0026lt;a class=\&quot;pull-right\&quot; href=\&quot;#/about\&quot;\u0026gt;About\u0026lt;/a\u0026gt;\u003C/code\u003E\u003C/pre\u003E&quot;},{&quot;key&quot;:&quot;angularjs_nearme-3_0_6&quot;,&quot;text&quot;:&quot;When a user clicks on the About link, she should be able to view a new page with more information about the app. Let&#x27;s set this up next, following the same sequence of steps from above:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EIn \u003Cstrong\u003Eapp.js\u003C/strong\u003E, add another route. Map the URL \u003Ccode\u003E/about\u003C/code\u003E to the controller \u003Ccode\u003EAboutController\u003C/code\u003E and the template \u003Cstrong\u003Eviews/about.html\u003C/strong\u003E.\u003C/li\u003E\n            \u003Cli\u003EIn \u003Cstrong\u003Ejs/controllers/AboutController.js\u003C/strong\u003E, create a new controller named \u003Ccode\u003EAboutController\u003C/code\u003E. Include it as a new \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E element.\u003C/li\u003E\n            \u003Cli\u003ECreate a template in \u003Cstrong\u003Eviews/about.html\u003C/strong\u003E to display an About page. \u003Ca target=\&quot;_blank\&quot; href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/nearme-3/index.html#/about\&quot;\u003EHere&#x27;s what ours looks like\u003C/a\u003E. Write HTML in the template and CSS in \u003Cstrong\u003Ecss/main.css\u003C/strong\u003E to create an About page for the app.\u003C/li\u003E\n            \u003Cli\u003EAdd a link to the About page that says \&quot;Start exploring\&quot;. Set the \u003Ccode\u003Ehref=\&quot;#/\&quot;\u003C/code\u003E so it links back to the map.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_nearme-3_0_7&quot;,&quot;text&quot;:&quot;View the result in the browser. When you click on the About page, a view is constructed by injecting \u003Cstrong\u003Eviews/about.html\u003C/strong\u003E into the \u003Ccode\u003E\u0026lt;div ng-view\u0026gt;\u0026lt;/div\u0026gt;\u003C/code\u003E in \u003Cstrong\u003Eindex.html\u003C/strong\u003E.&quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs_nearme&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/angularjs_piat/projects/angularjs_nearme-3.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_nearme-3&quot;,&quot;unit_slug&quot;:&quot;angularjs_piat&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/angularjs_piat/angularjs_piat.en.yml&quot;,&quot;lessons&quot;:{},&quot;lessons_order&quot;:[],&quot;projects_order&quot;:[&quot;angularjs_nearme-1&quot;,&quot;angularjs_nearme-2&quot;,&quot;angularjs_nearme-3&quot;],&quot;quizzes&quot;:{},&quot;quizzes_order&quot;:[]}},&quot;updated_at&quot;:&quot;1447954433&quot;,&quot;resume_path&quot;:&quot;/en/courses/learn-angularjs/resume&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs&quot;,&quot;wip&quot;:false,&quot;units_order&quot;:[&quot;your-first-app&quot;,&quot;directives&quot;,&quot;services&quot;,&quot;routing&quot;,&quot;angularjs_piat&quot;],&quot;lessons&quot;:{&quot;your-first-app&quot;:{&quot;node_type&quot;:&quot;lesson&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;your-first-app&quot;,&quot;title&quot;:&quot;Your First App&quot;,&quot;description&quot;:&quot;Get up and running quickly by building an AngularJS app from scratch.&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/your-first-app&quot;,&quot;exercises&quot;:{&quot;your-first-app-hello-angularjs-i&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;your-first-app-hello-angularjs-i&quot;,&quot;title&quot;:&quot;Hello AngularJS I&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-your-first-app&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;js/app.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;AngularJS is a JavaScript web framework aimed to make web apps simple to build and easy to maintain.\n\nWe&#x27;ll start by building a simple AngularJS app. After making this app, we&#x27;ll generalize a few steps that can be used to build more complex apps. By the end of this course, you&#x27;ll be able to use this sequence of steps to jumpstart your own AngularJS apps.&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;Let\\&#x27;s get started by making a simple AngularJS app. We\\&#x27;ll explain each step in the next exercise. \\n\\n\\\nIn **app.js**, type in the contents exactly as you see here: \\n\\\n```javascript \\n\\\nvar app = angular.module(\&quot;myApp\&quot;, []); \\n\\\n```&#x27;, function(Tests, callback) {\n  Tests.karmaTest(&#x27;karma1.js&#x27;, callback);\n});\ncheckpoint(&#x27;Open up **index.html**. Modify the `\u003Cbody\u003E` tag so it looks like this: \\n\\\n```html \\n\\\n\u003Cbody ng-app=\&quot;myApp\&quot;\u003E \\n\\\n```&#x27;, function(Tests, callback) {\n\n    Tests.webSCT(&#x27;webSCT1.js&#x27;, callback);\n});\ncheckpoint(\&quot;Open up **js/controllers/MainController.js**. Type in the contents exactly as you see here: \\n\\\n```javascript \\n\\\napp.controller(&#x27;MainController&#x27;, [&#x27;$scope&#x27;, function($scope) { \\n\\\n  $scope.title = &#x27;Top Sellers in Books&#x27;; \\n\\\n}]); \\n\\\n```\&quot;, function(Tests, callback) {\n  Tests.karmaTest(&#x27;karma2.js&#x27;, callback);\n});\ncheckpoint(&#x27;Go to **index.html**. Modify the `\u003Cdiv class=\&quot;main\&quot;\u003E` tag so it looks like this: \\n\\\n```html \\n\\\n\u003Cdiv class=\&quot;main\&quot; ng-controller=\&quot;MainController\&quot;\u003E \\n\\\n```&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n        if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;\u003Cdiv class=[\\&#x27;\&quot;]main[\\&#x27;\&quot;] ng-controller=[\\&#x27;\&quot;]MainController[\\&#x27;\&quot;]\u003E&#x27;)) {\n          return {pass: true};\n        }\n\nreturn {pass: false, errors: { friendly: \&quot;Make sure to add ng-controller to \u003Cdiv class=\\\&quot;main\\\&quot;\u003E.\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n    }, callback);\n });\ncheckpoint(&#x27;In **index.html** inside `\u003Cdiv class=\&quot;main\&quot;\u003E`, modify the `\u003Ch1\u003E` element so it looks like this: \\n\\\n```html \\n\\\n\u003Ch1\u003E{{ title }}\u003C/h1\u003E \\n\\\n```\\n\\nView the AngularJS app in the browser by visiting http://localhost:8000. The \&quot;Top Sellers in Books\&quot; content appears as the heading of the page.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n        if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;\u003Ch1\u003E\\\\s*{{\\\\s*title\\\\s*}}\\\\s*\u003C/h1\u003E&#x27;)) {\n          return {pass: true};\n        }\n\nreturn {pass: false, errors: { friendly: \&quot;Make sure to display the title in the view.\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n    }, callback);\n});&quot;,&quot;files&quot;:{&quot;karma1.js&quot;:&quot;describe(&#x27;myApp&#x27;, function(){\n\n  beforeEach(module(&#x27;myApp&#x27;));\n\n  it(&#x27;In app.js, make sure to type var app = angular.module(\&quot;myApp\&quot;, []);&#x27;, inject(function($controller) {\n  }));\n\n});&quot;,&quot;karma2.js&quot;:&quot;describe(&#x27;myApp&#x27;, function(){\n\n  beforeEach(module(&#x27;myApp&#x27;));\n\n  it(&#x27;Make sure that the \&quot;Top Sellers in Books\&quot; title appears as the heading of the page.&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n\n    expect(scope.title).toBe(&#x27;Top Sellers in Books&#x27;);\n  }));\n\n});\n&quot;,&quot;webSCT1.js&quot;:&quot;$expect(&#x27;body&#x27;).to.have.attr(&#x27;ng-app&#x27;, &#x27;myApp&#x27;);\n&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/your-first-app/lessons/your-first-app/exercises/your-first-app-hello-angularjs-i.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/your-first-app/exercises/your-first-app-hello-angularjs-i&quot;},&quot;your-first-app-hello-angularjs-ii&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;your-first-app-hello-angularjs-ii&quot;,&quot;title&quot;:&quot;Hello AngularJS II&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-your-first-app&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;js/app.js&quot;},{&quot;filename&quot;:&quot;index.html&quot;},{&quot;filename&quot;:&quot;js/controllers/MainController.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;Awesome! You built an AngularJS app. How does it work?\n\n1. In **app.js**, we created a new _module_ named `MyApp`. A _module_ contains the different components of an AngularJS app.\n2. Then, in **index.html** we added `\u003Cbody ng-app=\&quot;myApp\&quot;\u003E`. The `ng-app` is called a _directive_. It tells AngularJS that the `MyApp` module will live within the `\u003Cbody\u003E` element, termed the application&#x27;s _scope_. In other words, we used the `ng-app` directive to define the application scope.\n3. In **MainController.js** we created a new _controller_ named `MainController`. A _controller_ manages the app&#x27;s data. Here we use the property `title` to store a string, and attach it to `$scope`.\n4. Then, in **index.html**, we added `\u003Cdiv class=\&quot;main\&quot; ng-controller=\&quot;MainController\&quot;\u003E`. Like `ng-app`, `ng-controller` is a _directive_ that defines the controller scope. This means that properties attached to `$scope` in `MainController` become available to use within `\u003Cdiv class=\&quot;main\&quot;\u003E`.\n5. Inside `\u003Cdiv class=\&quot;main\&quot;\u003E` we accessed `$scope.title` using `{{ title }}`. This is called an _expression_. Expressions are used to display values on the page.\n6. The value of `title` showed up when we viewed the app in the browser.&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;Both the controller `MainController` and the view **index.html** have access to `$scope`. This means we can use `$scope` to communicate between the controller and the view. In the controller, change the value of `title` to your own string.&#x27;,\n  function(Tests, callback) {\n    Tests.karmaTest(&#x27;karma1.js&#x27;, callback);\n  });\ncheckpoint(&#x27;Likewise, any new properties attached to `$scope` will become available to use in the view. In the controller, attach `promo` to `$scope`, and set its value to your own string.&#x27;,\n  function(Tests, callback) {\n    Tests.karmaTest(&#x27;karma2.js&#x27;, callback);\n  });\ncheckpoint(&#x27;In the view under the `\u003Ch1\u003E` element, add an `\u003Ch2\u003E` element and use an expression to display `promo` on the page.&#x27;, function(Tests, callback) {\n   Tests.componentTest(function(Components) {\n        if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;\u003Ch2\u003E\\\\s*{{\\\\s*promo\\\\s*}}\\\\s*\u003C/h2\u003E&#x27;)) {\n          return {pass: true};\n        }\n\nreturn {pass: false, errors: { friendly: \&quot;Make sure to display promo in the view.\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n    }, callback);\n });&quot;,&quot;files&quot;:{&quot;karma1.js&quot;:&quot;describe(&#x27;myApp&#x27;, function(){\n\n  beforeEach(module(&#x27;myApp&#x27;));\n\n  it(&#x27;Did you change the value of title to your own string?&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n\n    expect(scope.title).not.toBe(&#x27;Top Sellers in Books&#x27;);\n  }));\n\n});\n&quot;,&quot;karma2.js&quot;:&quot;describe(&#x27;myApp&#x27;, function(){\n\n  beforeEach(module(&#x27;myApp&#x27;));\n\n  it(&#x27;Did you add $scope.promo to the controller?&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n\n    expect(scope.title).toBeDefined();\n    expect(scope.promo).toBeDefined();\n  }));\n\n});\n&quot;,&quot;sct3.js&quot;:&quot;//TODO(KM) check for h2 under h1 for promo\n&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/your-first-app/lessons/your-first-app/exercises/your-first-app-hello-angularjs-ii.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/your-first-app/exercises/your-first-app-hello-angularjs-ii&quot;},&quot;your-first-app-workflow&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;your-first-app-workflow&quot;,&quot;title&quot;:&quot;Workflow&quot;,&quot;setup&quot;:{&quot;command&quot;:&quot;cp .index_3.html index.html&quot;},&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-your-first-app&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;index.html&quot;},{&quot;filename&quot;:&quot;js/controllers/MainController.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;So far this is our typical workflow when making an AngularJS app:\n1. Create a module, and use `ng-app` in the view to define the application scope.\n2. Create a controller, and use `ng-controller` in the view to define the controller scope.\n3. Add data to `$scope` in the controller so they can be displayed with expressions in the view.\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;Let\\&#x27;s add more data to the controller and display them in the view. In the controller, attach another property to `$scope` named `product`. Set it equal to an object with the following properties: \\n\\\n```javascript \\n\\\n{ \\n\\\n  name: \\&#x27;The Book of Trees\\&#x27;, \\n\\\n  price: 19 \\n\\\n} \\n\\\n```&#x27;, function(Tests, callback) {\n  Tests.karmaTest(&#x27;karma1.js&#x27;, callback);\n});\n\ncheckpoint(&#x27;Then, in **index.html** inside `\u003Cp class=\&quot;title\&quot;\u003E`, access the product\\&#x27;s name with `product.name` and display it using an expression.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n        if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;{{\\\\s*product.name\\\\s*}}&#x27;)) {\n          return {pass: true};\n        }\n\nreturn {pass: false, errors: { friendly: \&quot;Did you display the product name?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n    }, callback);\n});\n\ncheckpoint(&#x27;In `\u003Cp class=\&quot;price\&quot;\u003E`, access and display the product\\&#x27;s price.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n        if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;{{\\\\s*product.price\\\\s*}}&#x27;)) {\n          return {pass: true};\n        }\n\nreturn {pass: false, errors: { friendly: \&quot;Did you display the product price?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n    }, callback);\n});\n&quot;,&quot;files&quot;:{&quot;karma1.js&quot;:&quot;describe(&#x27;myApp&#x27;, function(){\n\n  beforeEach(module(&#x27;myApp&#x27;));\n\n  it(&#x27;Did you add $scope.product to the controller?&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n\n    expect(scope.product).toEqual({name: \&quot;The Book of Trees\&quot;, price: 19});\n  }));\n\n});&quot;,&quot;sct2.js&quot;:&quot;//TOD(KM) check product price exists in p class = title\n&quot;,&quot;sct.js&quot;:&quot;//TODO(KM) check product name exists in p class = title\n&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/your-first-app/lessons/your-first-app/exercises/your-first-app-workflow.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/your-first-app/exercises/your-first-app-workflow&quot;},&quot;your-first-app-filters-i&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;your-first-app-filters-i&quot;,&quot;title&quot;:&quot;Filters I&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-your-first-app&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;index.html&quot;},{&quot;filename&quot;:&quot;js/controllers/MainController.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;Well done! In the controller, you used an object to group together related data about a product. Then in the view, you used dot notation to display the values.&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;Currently the product price shows up as a number. It would be better to format it as a currency. Rather than change the data in the controller, let\\&#x27;s use an AngularJS _filter_ to format the data in the view. \\n\\n\\\nIn **index.html** in `\u003Cp class=\&quot;price\&quot;\u003E`, change the expression to look like this: \\n\\\n``` \\n\\\n{{ product.price | currency }} \\n\\\n```\\n\\nWe\\&#x27;ll explain how this works in the next exercise.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n      if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;\\\\|\\\\s*currency\\\\s*}}&#x27;)) {\n        return {pass: true};\n      }\n      return {pass: false, errors: { friendly: \&quot;Did you add the currency filter to the price?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n  }, callback);\n});\n&quot;,&quot;files&quot;:{}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/your-first-app/lessons/your-first-app/exercises/your-first-app-filters-i.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/your-first-app/exercises/your-first-app-filters-i&quot;},&quot;your-first-app-filters-ii&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;your-first-app-filters-ii&quot;,&quot;title&quot;:&quot;Filters II&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-your-first-app&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;index.html&quot;},{&quot;filename&quot;:&quot;js/controllers/MainController.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;Great! The product price changed from a number to a formatted currency. How does it work?\n\n1. AngularJS gets the value of `product.price`.\n2. It sends this number into the `currency` filter. The pipe symbol (`|`) takes the output on the left and \&quot;pipes\&quot; it to the right.\n3. The filter outputs a formatted currency with the dollar sign and the correct decimal places.\n\nIn this way, filters help to separate the content in the controller from its presentation in the view.\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;AngularJS comes with [a few more built-in filters](https://docs.angularjs.org/api/ng/filter). Let\\&#x27;s use two more. \\n\\n\\\nIn **MainController.js** inside `$scope.product`, add a third property named `pubdate`: \\n\\\n``` \\n\\\npubdate: new Date(\\&#x27;2014\\&#x27;, \\&#x27;03\\&#x27;, \\&#x27;08\\&#x27;) \\n\\\n```&#x27;, function(Tests, callback) {             Tests.karmaTest(&#x27;karma.js&#x27;, callback);           });\n\ncheckpoint(&#x27;In **index.html** inside `\u003Cp class=\&quot;date\&quot;\u003E`, display the product\\&#x27;s `pubdate`.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n        if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;{{\\\\s*product.pubdate&#x27;)) {\n          return {pass: true};\n        }\n\nreturn {pass: false, errors: { friendly: \&quot;Did you display the pubdate?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n    }, callback);\n});\n\ncheckpoint(&#x27;Format the product\\&#x27;s `pubdate` by piping it to the `date` filter.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n        if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;\\\\|\\\\s*date\\\\s*&#x27;)) {\n          return {pass: true};\n        }\n\nreturn {pass: false, errors: { friendly: \&quot;Did you add the date filter to pubdate?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n    }, callback);\n});\n\ncheckpoint(&#x27;Format the product\\&#x27;s `name` by piping it to the `uppercase` filter.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n        if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;\\\\|\\\\s*uppercase\\\\s*}}&#x27;)) {\n          return {pass: true};\n        }\n\nreturn {pass: false, errors: { friendly: \&quot;Did you add the uppercase filter to the product name?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n    }, callback);\n});\n&quot;,&quot;files&quot;:{&quot;karma.js&quot;:&quot;describe(&#x27;myApp&#x27;, function(){\n\n  beforeEach(module(&#x27;myApp&#x27;));\n\n  it(&#x27;Did you add pubdate as a third property inside $scope.product?&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n\n    expect(scope.product.pubdate).toEqual( new Date(&#x27;2014&#x27;, &#x27;03&#x27;, &#x27;08&#x27;));\n  }));\n\n});\n&quot;,&quot;sct.js&quot;:&quot;//TODO(km) check dsplay pub date\n&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/your-first-app/lessons/your-first-app/exercises/your-first-app-filters-ii.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/your-first-app/exercises/your-first-app-filters-ii&quot;},&quot;your-first-app-ng-repeat-i&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;your-first-app-ng-repeat-i&quot;,&quot;title&quot;:&quot;ng-repeat I&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-your-first-app&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;index.html&quot;},{&quot;filename&quot;:&quot;js/controllers/MainController.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;Let&#x27;s do a quick review:\n* A **module** contains the different components of an AngularJS app\n* A **controller** manages the app&#x27;s data\n* An **expression** displays values on the page\n* A **filter** formats the value of an expression\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;Let\\&#x27;s add more data to the controller and display them in the view. \\n\\n\\\nIn the controller, delete the `$scope.product` object.&#x27;, function(Tests, callback) {             Tests.karmaTest(&#x27;karma.js&#x27;, callback);           });\ncheckpoint(&#x27;Attach a new property to `$scope` named `products`. Set it equal to an array of objects. Type in the contents exactly as you see here: \\n\\\n```javascript \\n\\\n[ \\n\\\n  { \\n\\\n    name: \\&#x27;The Book of Trees\\&#x27;, \\n\\\n    price: 19, \\n\\\n    pubdate: new Date(\\&#x27;2014\\&#x27;, \\&#x27;03\\&#x27;, \\&#x27;08\\&#x27;), \\n\\\n    cover: \\&#x27;img/the-book-of-trees.jpg\\&#x27; \\n\\\n  }, \\n\\\n  { \\n\\\n    name: \\&#x27;Program or be Programmed\\&#x27;, \\n\\\n    price: 8, \\n\\\n    pubdate: new Date(\\&#x27;2013\\&#x27;, \\&#x27;08\\&#x27;, \\&#x27;01\\&#x27;), \\n\\\n    cover: \\&#x27;img/program-or-be-programmed.jpg\\&#x27; \\n\\\n  } \\n\\\n] \\n\\\n```&#x27;, function(Tests, callback) {             Tests.karmaTest(&#x27;karma2.js&#x27;, callback);           });\ncheckpoint(&#x27;In the view inside `\u003Cdiv class=\&quot;main\&quot;\u003E`, delete the `\u003Cdiv class=\&quot;col-md-6\&quot;\u003E` element. \\n\\\n\\n\\\nReplace it with this HTML. Type in the contents exactly as you see here: \\n\\\n```html \\n\\\n\u003Cdiv ng-repeat=\&quot;product in products\&quot; class=\&quot;col-md-6\&quot;\u003E \\n\\\n  \u003Cdiv class=\&quot;thumbnail\&quot;\u003E \\n\\\n    \u003Cimg src=\&quot;img/the-book-of-trees.jpg\&quot;\u003E \\n\\\n    \u003Cp class=\&quot;title\&quot;\u003E{{ product.name }}\u003C/p\u003E \\n\\\n    \u003Cp class=\&quot;price\&quot;\u003E{{ product.price | currency }}\u003C/p\u003E \\n\\\n    \u003Cp class=\&quot;date\&quot;\u003E{{ product.pubdate | date }}\u003C/p\u003E \\n\\\n  \u003C/div\u003E \\n\\\n\u003C/div\u003E \\n\\\n``` \\n\\\n\\n\\\nYou\\&#x27;ll see that both products have the same cover image. Let\\&#x27;s fix this bug in the next exercise. Click Next to continue.&#x27;, function(Tests, callback) {\n  Tests.webSCT(&#x27;sct4.js&#x27;, callback);\n});&quot;,&quot;files&quot;:{&quot;karma2.js&quot;:&quot;describe(&#x27;myApp&#x27;, function(){\n\n  beforeEach(module(&#x27;myApp&#x27;));\n\n  it(&#x27;Did you set $scope.products equal to an array of objects?&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n\n    expect(scope.products.length).toBe(2);\n  }));\n\n  it(&#x27;In $scope.products, did you add \&quot;The Book of Trees\&quot; object?&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n    var product = scope.products[0];\n    expect(product).toEqual({ name: &#x27;The Book of Trees&#x27;,\n      price: 19,\n      pubdate: new Date(&#x27;2014&#x27;, &#x27;03&#x27;, &#x27;08&#x27;),\n      cover: &#x27;img/the-book-of-trees.jpg&#x27;\n    });\n  }));\n\n  it(&#x27;In $scope.products, did you add the \&quot;Program or be Programmed\&quot; object?&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n\n    var product = scope.products[1];\n    expect(product).toEqual({\n    name: &#x27;Program or be Programmed&#x27;,\n    price: 8,\n    pubdate: new Date(&#x27;2013&#x27;, &#x27;08&#x27;, &#x27;01&#x27;),\n    cover: &#x27;img/program-or-be-programmed.jpg&#x27;\n  } );\n  }));\n});&quot;,&quot;karma.js&quot;:&quot;describe(&#x27;myApp&#x27;, function(){\n\n  beforeEach(module(&#x27;myApp&#x27;));\n\n  it(&#x27;Did you delete $scope.product?&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n\n    expect(scope.product).not.toBeDefined();\n  }));\n});\n&quot;,&quot;sct4.js&quot;:&quot;$expect(&#x27;.main .col-md-6&#x27;).to.be.above(1);\n&quot;,&quot;sct3.js&quot;:&quot;$expect(&#x27;.main .col-md-6&#x27;).not.to.exist(&#x27;Remember to delete the \u003Cdiv class=\&quot;col-md-6\&quot;\u003E inside \u003Cdiv class=\&quot;main\&quot;\u003E&#x27;);&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/your-first-app/lessons/your-first-app/exercises/your-first-app-ng-repeat-i.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/your-first-app/exercises/your-first-app-ng-repeat-i&quot;},&quot;your-first-app-ng-repeat-ii&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;your-first-app-ng-repeat-ii&quot;,&quot;title&quot;:&quot;ng-repeat II&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-your-first-app&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;index.html&quot;},{&quot;filename&quot;:&quot;js/controllers/MainController.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;Well done! You got both books in `$scope.products` to show up in the view. How does it work?\n\n1. In the controller, we used `products` to store an array containing two objects.\n2. Then in the view, we added `\u003Cdiv ng-repeat=\&quot;product in products\&quot;\u003E`. Like `ng-app` and `ng-controller`, the `ng-repeat` is a directive. It loops through an array and displays each element. Here, the `ng-repeat` repeats all the HTML inside `\u003Cdiv class=\&quot;col-md-6\&quot;\u003E` for each element in the `products` array.\n\nIn this way, `ng-repeat` shows both products in the `$scope.products` array. Instead of writing the same HTML twice as before, we just use `ng-repeat` to generate the HTML twice.\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;The problem now is that both products have the same image. Let\\&#x27;s fix this. \\n\\n\\\nIn the view inside `\u003Cdiv class=\&quot;col-md-6\&quot;\u003E`, replace \\n\\\n```javascript \\n\\\n\u003Cimg src=\&quot;img/the-book-of-trees.jpg\&quot;\u003E \\n\\\n``` \\n\\\nwith \\n\\\n```javascript \\n\\\n\u003Cimg ng-src=\&quot;{{ product.cover }}\&quot;\u003E \\n\\\n``` \\n\\\nThe `ng-src` is a directive that sets the `\u003Cimg\u003E` element\\&#x27;s `src` to a property in the controller.&#x27;, function(Tests, callback) {             Tests.webSCT(&#x27;sct1.js&#x27;, callback);\n});&quot;,&quot;files&quot;:{&quot;sct1.js&quot;:&quot;$expect(&#x27;img&#x27;).to.have.attr(&#x27;ng-src&#x27;);&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/your-first-app/lessons/your-first-app/exercises/your-first-app-ng-repeat-ii.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/your-first-app/exercises/your-first-app-ng-repeat-ii&quot;},&quot;your-first-app-directives&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;your-first-app-directives&quot;,&quot;title&quot;:&quot;Directives&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-your-first-app&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;index.html&quot;},{&quot;filename&quot;:&quot;js/controllers/MainController.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;We&#x27;ve used a few directives so far - `ng-app`, `ng-controller`, `ng-repeat`, and `ng-src`. What can we generalize about directives?\n\nDirectives bind behavior to HTML elements. When the app runs, AngularJS walks through each HTML element looking for directives. When it finds one, AngularJS triggers that behavior (like attaching a scope or looping through an array).\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;In the controller, add two of your favorite books to the `$scope.products` array. \\n\\n\\\nThe view will update as the `ng-repeat` loops the new elements in the `$scope.products` array.&#x27;, function(Tests, callback) {             Tests.karmaTest(&#x27;karma.js&#x27;, callback);           });&quot;,&quot;files&quot;:{&quot;karma.js&quot;:&quot;describe(&#x27;myApp&#x27;, function(){\n\n  beforeEach(module(&#x27;myApp&#x27;));\n\n  it(&#x27;Did you add two more books to the $scope.products array?&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n\n    expect(scope.products.length).toBe(4);\n  }));\n\n});&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/your-first-app/lessons/your-first-app/exercises/your-first-app-directives.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/your-first-app/exercises/your-first-app-directives&quot;},&quot;your-first-app-ng-click-i&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;your-first-app-ng-click-i&quot;,&quot;title&quot;:&quot;ng-click I&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-your-first-app&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;index.html&quot;},{&quot;filename&quot;:&quot;js/controllers/MainController.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;So far we&#x27;ve made a static AngularJS app by adding properties in the controller and displaying them in the view. AngularJS is a framework for building dynamic web apps, so let&#x27;s start to make this app interactive.\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;In the controller in the `$scope.products` array, add a new property named `likes` to each element. Set all `likes` properties to `0`.&#x27;, function(Tests, callback) {             Tests.karmaTest(&#x27;karma.js&#x27;, callback);           });\n\ncheckpoint(&#x27;In the view under `\u003Cp class=\&quot;date\&quot;\u003E`, type in a rating element: \\n\\\n```html \\n\\\n\u003Cdiv class=\&quot;rating\&quot;\u003E \\n\\\n  \u003Cp class=\&quot;likes\&quot;\u003E+ \u003C/p\u003E \\n\\\n\u003C/div\u003E \\n\\\n```\\n\\\nInside `\u003Cp class=\&quot;likes\&quot;\u003E`, display a product\\&#x27;s `likes` using an expression.&#x27;, function(Tests, callback) {             Tests.componentTest(function(Components) {\n      if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;{{\\\\s*product.likes\\\\s*}}&#x27;)) {\n        return {pass: true};\n      }\n\n      return {pass: false, errors: { friendly: \&quot;Did you display the product&#x27;s likes?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n\n  }, callback);\n});\n\ncheckpoint(&#x27;Back in the controller after `$scope.products`, attach a new property to `$scope` named `plusOne`. Set it equal to function. Type in the contents exactly as you see here: \\n\\\n```javascript \\n\\\nfunction(index) { \\n\\\n  $scope.products[index].likes += 1; \\n\\\n}; \\n\\\n```&#x27;, function(Tests, callback) {             Tests.karmaTest(&#x27;karma3.js&#x27;, callback);           });\n\ncheckpoint(&#x27;In the view modify `\u003Cp class=\&quot;likes\&quot;\u003E` to look like this: \\n\\\n```html \\n\\\n\u003Cp class=\&quot;likes\&quot; ng-click=\&quot;plusOne($index)\&quot;\u003E \\n\\\n``` \\n\\n\\\nView the AngularJS app in the browser. Click on the +0 in each product tile.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n      if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;\u003Cp class=[\\&#x27;\&quot;]likes[\\&#x27;\&quot;] ng-click=[\\&#x27;\&quot;]plusOne\\\\(\\\\$index\\\\)[\\&#x27;\&quot;]\u003E&#x27;)) {\n        return {pass: true};\n      }\n\n      return {pass: false, errors: { friendly: \&quot;Did you update the `\u003Cp class=&#x27;likes&#x27;\u003E`?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n\n  }, callback);\n});\n&quot;,&quot;files&quot;:{&quot;karma.js&quot;:&quot;describe(&#x27;myApp&#x27;, function(){\n\n  beforeEach(module(&#x27;myApp&#x27;));\n\n  it(&#x27;Make sure to set the likes property to 0.&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n\n    for (var i = 0; i \u003C scope.products.length; i++) {\n      expect(scope.products[i].likes).toBe(0);\n    }\n  }));\n\n});\n&quot;,&quot;karma3.js&quot;:&quot;describe(&#x27;myApp&#x27;, function(){\n\n  beforeEach(module(&#x27;myApp&#x27;));\n\n  it(&#x27;Did you create the function $scope.plusOne()?&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n\n    expect(scope.plusOne).toBeDefined();\n  }));\n\n  it(&#x27;On the \u003Cp class=\&quot;likes\&quot;\u003E element, make sure to use ng-click to call the plusOne() function.&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n    scope.plusOne(0);\n    expect(scope.products[0].likes).toBe(1);\n  }));\n});\n&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/your-first-app/lessons/your-first-app/exercises/your-first-app-ng-click-i.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/your-first-app/exercises/your-first-app-ng-click-i&quot;},&quot;your-first-app-ng-click-ii&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;your-first-app-ng-click-ii&quot;,&quot;title&quot;:&quot;ng-click II&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-your-first-app&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;index.html&quot;},{&quot;filename&quot;:&quot;js/controllers/MainController.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;Great! Each time you click on the number of likes, the number goes up. How does it work?\n\n1. The `ng-click` is a directive. When `\u003Cp class=\&quot;likes\&quot;\u003E` is clicked, `ng-click` tells AngularJS to run the `plusOne()` function in the controller.\n2. The `plusOne()` function gets the index of the product that was clicked, and then adds one to that product&#x27;s `likes` property.\n\nNotice that the `plusOne()` doesn&#x27;t interact with the view at all; it just updates the controller. Any change made to the controller shows up in the view.\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;In the controller in the `$scope.products` array, add a new property named `dislikes` to each element. Set `dislikes` to `0`.&#x27;, function(Tests, callback) {             Tests.karmaTest(&#x27;karma.js&#x27;, callback);           });\n\ncheckpoint(&#x27;In the view under `\u003Cp class=\&quot;likes\&quot;\u003E`, add an element for `\u003Cp class=\&quot;dislikes\&quot;\u003E`. Then display a product\\&#x27;s `dislikes` using an expression.&#x27;, function(Tests, callback) {             Tests.componentTest(function(Components) {\n      if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;{{\\\\s*product.dislikes\\\\s*}}&#x27;)) {\n        return {pass: true};\n      }\n      return {pass: false, errors: { friendly: \&quot;Did you display the product&#x27;s dislikes?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n  }, callback);\n});\n\ncheckpoint(&#x27;Back in the controller after `$scope.products`, attach a new property to `$scope` named `minusOne`. Set it equal to a function that adds one to a product\\&#x27;s `dislikes` property. Adapt the code from the `plusOne()` function to do this.&#x27;, function(Tests, callback) {             Tests.karmaTest(&#x27;karma3.js&#x27;, callback);           });\n\ncheckpoint(&#x27;In the view, use `ng-click` to trigger the `minusOne()` function when `\u003Cp class=\&quot;dislikes\&quot;\u003E` is clicked. \\n\\n View the AngularJS app in the browser. Click on the -0 in each product tile.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n      if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;ng-click&#x27;)) {\n        return {pass: true};\n      }\n      return {pass: false, errors: { friendly: \&quot;Did you add ng-click to trigger the minusOne() function?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n  }, callback);\n});\n&quot;,&quot;files&quot;:{&quot;karma.js&quot;:&quot;describe(&#x27;myApp&#x27;, function(){\n\n  beforeEach(module(&#x27;myApp&#x27;));\n\n  it(&#x27;Make sure the set the dislikes property to 0.&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n\n    for (var i = 0; i \u003C scope.products.length; i++) {\n      expect(scope.products[i].dislikes).toBe(0);\n    }\n  }));\n\n});&quot;,&quot;karma3.js&quot;:&quot;describe(&#x27;myApp&#x27;, function(){\n\n  beforeEach(module(&#x27;myApp&#x27;));\n\n  it(&#x27;Did you create the function $scope.minusOne()?&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n\n    expect(scope.minusOne).toBeDefined();\n  }));\n\n  it(&#x27;On the \u003Cp class=\&quot;dislikes\&quot;\u003E element, make sure to use ng-click to call the minusOne() function.&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n    scope.minusOne(0);\n    expect(scope.products[0].dislikes).toBe(1);\n  }));\n});&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/your-first-app/lessons/your-first-app/exercises/your-first-app-ng-click-ii.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/your-first-app/exercises/your-first-app-ng-click-ii&quot;},&quot;your-first-app-generalizations&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;your-first-app-generalizations&quot;,&quot;title&quot;:&quot;Generalizations&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-your-first-app&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;Image&quot;:{&quot;url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/img/yfa-generalizations.svg&quot;,&quot;_schema&quot;:&quot;Image&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;Congratulations! You built an AngularJS app from scratch. What can we generalize so far?\n\n1. A user visits the AngularJS app.\n2. The _view_ presents the app&#x27;s data through the use of _expressions_, _filters_, and _directives_. Directives bind new behavior HTML elements.\n3. A user clicks an element in the view. If the element has a directive, AngularJS runs the function.\n4. The function in the _controller_ updates the state of the data. \n5. The view automatically changes and displays the updated data. The page doesn&#x27;t need to reload at any point.&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/your-first-app/lessons/your-first-app/exercises/your-first-app-generalizations.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/your-first-app/exercises/your-first-app-generalizations&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/your-first-app/lessons/your-first-app/your-first-app.en.yml&quot;,&quot;exercises_order&quot;:[&quot;your-first-app-hello-angularjs-i&quot;,&quot;your-first-app-hello-angularjs-ii&quot;,&quot;your-first-app-workflow&quot;,&quot;your-first-app-filters-i&quot;,&quot;your-first-app-filters-ii&quot;,&quot;your-first-app-ng-repeat-i&quot;,&quot;your-first-app-ng-repeat-ii&quot;,&quot;your-first-app-directives&quot;,&quot;your-first-app-ng-click-i&quot;,&quot;your-first-app-ng-click-ii&quot;,&quot;your-first-app-generalizations&quot;],&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/your-first-app/resume&quot;,&quot;unit_slug&quot;:&quot;your-first-app&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false},&quot;directives&quot;:{&quot;node_type&quot;:&quot;lesson&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;directives&quot;,&quot;title&quot;:&quot;Directives&quot;,&quot;description&quot;:&quot;Learn how to use directives to make standalone UI components.&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/directives&quot;,&quot;exercises&quot;:{&quot;directives-directives-i&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;directives-directives-i&quot;,&quot;title&quot;:&quot;Directives I&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-directives&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;js/controllers/MainController.js&quot;},{&quot;filename&quot;:&quot;index.html&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;Here&#x27;s an AngularJS app for a mobile app store:\n* In the controller **MainController.js**, there are three objects `$scope.move`, `$scope.shutterbugg`, and `$scope.gameboard` that each contain info about an app, like its title and price.\n* In the view **index.html** in the `.main` section, each app is displayed inside a `.card` div.\n\nBut looking at the view, the same code is written over and over again to display each app. This is repetitive and error-prone. Let&#x27;s fix this.\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(\&quot;In the new file **js/directives/appInfo.js**, type in this code: \\n\\\n```javascript \\n\\\napp.directive(&#x27;appInfo&#x27;, function() { \\n\\\n  return { \\n\\\n    restrict: &#x27;E&#x27;, \\n\\\n    scope: { \\n\\\n      info: &#x27;=&#x27; \\n\\\n    }, \\n\\\n    templateUrl: &#x27;js/directives/appInfo.html&#x27; \\n\\\n  }; \\n\\\n}); \\n\\\n```\&quot;, function(Tests, callback) {\n  Tests.karmaTest(&#x27;karma1.js&#x27;, callback);\n});\ncheckpoint(&#x27;Include this new JavaScript file in **index.html** in line 48 as a `\u003Cscript\u003E` element.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n      if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;\u003Cscript src=[\\&#x27;\&quot;]js\\/directives\\/appInfo.js[\\&#x27;\&quot;]\u003E&#x27;)) {\n        return {pass: true};\n      }\n\n        return {pass: false, errors: { friendly: \&quot;Did you include js/directives/appInfo.js as a script element in the view?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n\n  }, callback);\n});\ncheckpoint(&#x27;In the new file **js/directives/appInfo.html**. Type in this HTML to display an app\\&#x27;s info: \\n\\\n```html \\n\\\n\u003Cimg class=\&quot;icon\&quot; ng-src=\&quot;{{ info.icon }}\&quot;\u003E \\n\\\n\u003Ch2 class=\&quot;title\&quot;\u003E{{ info.title }}\u003C/h2\u003E \\n\\\n\u003Cp class=\&quot;developer\&quot;\u003E{{ info.developer }}\u003C/p\u003E \\n\\\n\u003Cp class=\&quot;price\&quot;\u003E{{ info.price | currency }}\u003C/p\u003E \\n\\\n```&#x27;, function(Tests, callback) {\n  Tests.karmaTest(&#x27;karma2.js&#x27;, callback);\n});\ncheckpoint(&#x27;In **index.html**, replace the contents of the first `.card` div with the new `\u003Capp-info\u003E` element: \\n\\\n```html \\n\\\n\u003Cdiv class=\&quot;card\&quot;\u003E \\n\\\n  \u003Capp-info info=\&quot;move\&quot;\u003E\u003C/app-info\u003E \\n\\\n\u003C/div\u003E \\n\\\n```&#x27;, function(Tests, callback) {\n  Tests.webSCT(&#x27;sct1.js&#x27;, callback);\n});\ncheckpoint(&#x27;Do the same for the second and third `.card` divs. Replace their contents with \\n\\\n```\u003Capp-info info=\&quot;shutterbugg\&quot;\u003E\u003C/app-info\u003E``` \\n\\\nand \\n\\\n```\u003Capp-info info=\&quot;gameboard\&quot;\u003E\u003C/app-info\u003E```\\n\\n\\\nView the AngularJS app in the browser by typing http://localhost:8000.&#x27;, function(Tests, callback) {Tests.componentTest(function(Components) {\n      if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;\u003Capp-info info=[\\&#x27;\&quot;]gameboard[\\&#x27;\&quot;]\u003E\\\\s*\u003C/app-info\u003E&#x27;)) {\n        return {pass: true};\n      }\n\n        return {pass: false, errors: { friendly: \&quot;Did you add \u003Capp-info\u003E directives to display shutterbugg and gameboard?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n\n  }, callback);\n});&quot;,&quot;files&quot;:{&quot;karma1.js&quot;:&quot;describe(&#x27;directives&#x27;, function(){\n\n  beforeEach(module(&#x27;AppMarketApp&#x27;));\n  beforeEach(module(&#x27;js/directives/appInfo.html&#x27;));\n\n  beforeEach(inject(function($rootScope, $compile, $injector) {\n    elm = angular.element(\&quot;\u003Capp-info info=&#x27;info&#x27;\u003E\u003C/app-info\u003E\&quot;);\n\n    scope = $rootScope;\n    scope.info = {icon: \&quot;https://www.google.com/images/srpr/logo11w.png\&quot;, title: \&quot;hello\&quot;, developer: \&quot;kelvin\&quot;, price: 19};\n\n    $compile(elm)(scope);\n    scope.$digest();\n  }));\n\n  it(&#x27;Did you make a directive named appInfo?&#x27;, inject(function($controller) {\n    expect(elm.hasClass(&#x27;ng-isolate-scope&#x27;)).toBeTruthy();\n  }));\n\n});\n&quot;,&quot;karma2.js&quot;:&quot;describe(&#x27;directives&#x27;, function(){\n\n  beforeEach(module(&#x27;AppMarketApp&#x27;));\n  beforeEach(module(&#x27;js/directives/appInfo.html&#x27;));\n\n  beforeEach(inject(function($rootScope, $compile, $injector) {\n    elm = angular.element(\&quot;\u003Capp-info info=&#x27;info&#x27;\u003E\u003C/app-info\u003E\&quot;);\n\n    scope = $rootScope;\n    scope.info = {icon: \&quot;https://www.google.com/images/srpr/logo11w.png\&quot;, title: \&quot;hello\&quot;, developer: \&quot;kelvin\&quot;, price: 19};\n\n    $compile(elm)(scope);\n    scope.$digest();\n  }));\n\n  it(&#x27;Did you display an app\\&#x27;s info in js/directives/appInfo.html?&#x27;, inject(function($controller) {\n    var title = elm.find(&#x27;h2&#x27;);\n\n    expect(title.text()).toBe(&#x27;hello&#x27;);\n  }));\n\n});\n&quot;,&quot;sct1.js&quot;:&quot;$expect(&#x27;app-info&#x27;).to.exist(&#x27;Did you replace the contents of the first .card div with the \u003Capp-info\u003E element?&#x27;);&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/directives/lessons/directives/exercises/directives-directives-i.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/directives/exercises/directives-directives-i&quot;},&quot;directives-directives-ii&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;directives-directives-ii&quot;,&quot;title&quot;:&quot;Directives II&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-directives&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;js/directives/appInfo.js&quot;},{&quot;filename&quot;:&quot;index.html&quot;},{&quot;filename&quot;:&quot;js/directives/appInfo.html&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;What did we just do? We wrote code to teach the browser a new HTML element `\u003Capp-info\u003E`, and used it in the view to display each app&#x27;s details.\n\nFirst in **js/directives/appInfo.js**, we made a new _directive_. We used `app.directive` to create a new directive named `&#x27;appInfo&#x27;`. It returns an object with three options:\n1. `restrict` specifies how the directive will be used in the view. The `&#x27;E&#x27;` means it will be used as a new HTML element.\n2. `scope` specifies that we will pass information into this directive through an attribute named `info`. The `=` tells the directive to look for an attribute named `info` in the `\u003Capp-info\u003E` element, like this:\n    ```javascript\n    \u003Capp-info info=\&quot;shutterbugg\&quot;\u003E\u003C/app-info\u003E\n    ```\n    The data in `info` becomes available to use in the template given by `templateURL`.\n3. `templateUrl` specifies the HTML to use in order to display the data in `scope.info`. Here we use the HTML in **js/directives/appInfo.html**.\n\nLooking at **js/directives/appInfo.html**, we define the HTML to display details about an app, like its title and price. We use expressions and filters to display the data.\n\nThen in **index.html** we use the new directive as the HTML element `\u003Capp-info\u003E`. We pass in objects from the controller&#x27;s scope (`$scope.shutterbugg`) into the `\u003Capp-info\u003E` element&#x27;s `info` attribute so that it displays.\n&quot;,&quot;instructions&quot;:&quot;Click **Next** to continue.&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/directives/lessons/directives/exercises/directives-directives-ii.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/directives/exercises/directives-directives-ii&quot;},&quot;directives-directives-iii&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;directives-directives-iii&quot;,&quot;title&quot;:&quot;Directives III&quot;,&quot;setup&quot;:{&quot;command&quot;:&quot;cp js/controllers/.MainController_3.js js/controllers/MainController.js&quot;},&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-directives&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;js/controllers/MainController.js&quot;},{&quot;filename&quot;:&quot;index.html&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;Why is creating your own directives useful?\n1. **Readability.** Directives let you write expressive HTML. Looking at **index.html** you can understand the app&#x27;s behavior just by reading the HTML. \n2. **Reusability.** Directives let you create self-contained units of functionality. We could easily plug in this directive into another AngularJS app and avoid writing a lot of repetitive HTML.&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;In the controller, there is a new property `$scope.forecast`. Display this property in the view by creating another `\u003Cdiv class=\&quot;card\&quot;\u003E` element containing an `\u003Capp-info\u003E` element.&#x27;, function(Tests, callback) {\n  Tests.webSCT(&#x27;sct1.js&#x27;, callback);\n});&quot;,&quot;files&quot;:{&quot;sct1.js&quot;:&quot;var pass = false;\n$(&#x27;app-info&#x27;).each(function() { if ($(this).attr(&#x27;info&#x27;) === \&quot;forecast\&quot;) { pass = true; }; });\nif (!pass) {$expect(&#x27;not-exist&#x27;).to.exist(&#x27;Add an app-info with info = forecast&#x27;);}\n&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/directives/lessons/directives/exercises/directives-directives-iii.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/directives/exercises/directives-directives-iii&quot;},&quot;directives-built-in-and-custom-directives&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;directives-built-in-and-custom-directives&quot;,&quot;title&quot;:&quot;Built-in and Custom Directives&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-directives&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;js/controllers/MainController.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;We know that AngularJS comes with a few built-in directives like `ng-repeat` and `ng-click`.\n\nWe&#x27;ve seen that AngularJS makes it possible to create your own custom directives, such as `\u003Capp-info\u003E`.\n\nWe can use Angular&#x27;s built-in directives together with custom directives to create more readable apps.\n\nFor reference, here&#x27;s how to use `ng-repeat`:\n```html\n\u003Cdiv ng-repeat=\&quot;product in products\&quot;\u003E\n  \u003Cimg ng-src=\&quot;{{ product.cover }}\&quot;\u003E\n  \u003Cp class=\&quot;title\&quot;\u003E{{ product.name }}\u003C/p\u003E\n\u003C/div\u003E\n```\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(\&quot;In the controller, create a new property `$scope.apps`. Set it equal to an array of objects: \\n\\\n```javascript \\n\\\n[ \\n\\\n  { \\n\\\n    icon: &#x27;img/move.jpg&#x27;, \\n\\\n    title: &#x27;MOVE&#x27;, \\n\\\n    developer: &#x27;MOVE, Inc.&#x27;, \\n\\\n    price: 0.99 \\n\\\n  }, \\n\\\n  { \\n\\\n    icon: &#x27;img/shutterbugg.jpg&#x27;, \\n\\\n    title: &#x27;Shutterbugg&#x27;, \\n\\\n    developer: &#x27;Chico Dusty&#x27;, \\n\\\n    price: 2.99 \\n\\\n  } \\n\\\n] \\n\\\n```\&quot;, function(Tests, callback) {\n  Tests.karmaTest(&#x27;karma.js&#x27;, callback);\n});\n\ncheckpoint(&#x27;Add two more objects to the array describing your favorite apps. Make sure to define the four properties for each app.&#x27;, function(Tests, callback) {\n  Tests.karmaTest(&#x27;karma2.js&#x27;, callback);\n});\n\ncheckpoint(&#x27;In the view, use `ng-repeat` to loop through `$scope.apps` and display each element. To do this, add `ng-repeat` to a `\u003Cdiv class=\&quot;card\&quot;\u003E`, and then use the custom directive `\u003Capp-info\u003E` to display each element.&#x27;, function(Tests, callback) {\n  Tests.webSCT(&#x27;sct1.js&#x27;, callback);\n});&quot;,&quot;files&quot;:{&quot;karma2.js&quot;:&quot;describe(&#x27;AppMarketApp&#x27;, function(){\n\n  beforeEach(module(&#x27;AppMarketApp&#x27;));\n\n  it(&#x27;Remember to add two more apps to $scope.apps.&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n\n    expect(scope.apps).toBeDefined();\n    expect(scope.apps.length).toBeGreaterThan(3);\n  }));\n\n});\n&quot;,&quot;sct1.js&quot;:&quot;$expect(&#x27;.card&#x27;).to.have.attr(&#x27;ng-repeat&#x27;);\n\n$expect(&#x27;app-info&#x27;).to.be.above(2);&quot;,&quot;karma.js&quot;:&quot;describe(&#x27;AppMarketApp&#x27;, function(){\n\n  beforeEach(module(&#x27;AppMarketApp&#x27;));\n\n  it(&#x27;Did you create $scope.apps and set it equal to an array?&#x27;, inject(function($controller) {\n    var scope = {},\n          ctrl = $controller(&#x27;MainController&#x27;, {$scope:scope});\n\n    expect(scope.apps).toBeDefined();\n    expect(scope.apps.length).toBeGreaterThan(1);\n  }));\n\n});&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/directives/lessons/directives/exercises/directives-built-in-and-custom-directives.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/directives/exercises/directives-built-in-and-custom-directives&quot;},&quot;directives-install-app-i&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;directives-install-app-i&quot;,&quot;title&quot;:&quot;installApp I&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-directives&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;js/directives/installApp.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;Directives are a core feature of AngularJS. So far we&#x27;ve used custom directives to simply display static content, but they can do more than this. It&#x27;s possible to bake interactivity into directives.\n\nLet&#x27;s start creating another directive that reacts to a user&#x27;s click.\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;In the new file **js/directives/installApp.js**, create a new directive named `installApp`. Refer to the `appInfo` directive for an example: \\n\\\n* use `app.directive` to create a new directive named `installApp` \\n\\\n* use the `restrict` option to create a new Element \\n\\\n* set the scope option to an empty object `{}` \\n\\\n* use the `templateUrl` option to tell this directive to use the **js/directives/installApp.html** file&#x27;, function(Tests, callback) {\n  Tests.karmaTest(&#x27;karma.js&#x27;, callback);\n});\n\ncheckpoint(&#x27;Include this new JavaScript file in **index.html** as a `\u003Cscript\u003E` element.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n      if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;\u003Cscript src=[\\&#x27;\&quot;]js\\/directives\\/installApp.js[\\&#x27;\&quot;]\u003E&#x27;)) {\n        return {pass: true};\n      }\n\n        return {pass: false, errors: { friendly: \&quot;Make sure to include js/directives/installApp.js as a new \u003Cscript\u003E element in the view.\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n\n  }, callback);\n});\n\ncheckpoint(\&quot;In the `installApp` directive, add a fourth option named `link`, and type in the following function: \\n\\\n```javascript \\n\\\nfunction(scope, element, attrs) { \\n\\\n  scope.buttonText = \\\&quot;Install\\\&quot;, \\n\\\n  scope.installed = false, \\n\\n\\\n  scope.download = function() { \\n\\\n    element.toggleClass(&#x27;btn-active&#x27;); \\n\\\n    if(scope.installed) { \\n\\\n      scope.buttonText = \\\&quot;Install\\\&quot;; \\n\\\n      scope.installed = false; \\n\\\n    } else { \\n\\\n      scope.buttonText = \\\&quot;Uninstall\\\&quot;; \\n\\\n      scope.installed = true; \\n\\\n    } \\n\\\n  } \\n\\\n} \\n\\\n```\&quot;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n      if (Components.CodeEditor.codeContains(&#x27;js/directives/installApp.js&#x27;, &#x27;link: function\\\\(scope, element, attrs\\\\)&#x27;)) {\n        return {pass: true};\n      }\n\n        return {pass: false, errors: { friendly: \&quot;Did you add the function to installApp.js?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n\n  }, callback);\n});\n&quot;,&quot;files&quot;:{&quot;karma.js&quot;:&quot;describe(&#x27;directives&#x27;, function(){\n\n  beforeEach(module(&#x27;AppMarketApp&#x27;));\n  beforeEach(module(&#x27;js/directives/installApp.html&#x27;));\n\n  beforeEach(inject(function($rootScope, $compile, $injector) {\n    elm = angular.element(\&quot;\u003Cinstall-app\u003E\u003C/install-app\u003E\&quot;);\n\n    scope = $rootScope;\n\n    $compile(elm)(scope);\n    scope.$digest();\n  }));\n\n  it(&#x27;Did you create a new directive named installApp?&#x27;, inject(function($controller) {\n    expect(elm.hasClass(&#x27;ng-isolate-scope&#x27;)).toBeTruthy();\n  }));\n\n});\n&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/directives/lessons/directives/exercises/directives-install-app-i.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/directives/exercises/directives-install-app-i&quot;},&quot;directives-install-app-ii&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;directives-install-app-ii&quot;,&quot;title&quot;:&quot;installApp II&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-directives&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;js/directives/installApp.html&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;We used `app.directive` to create a new directive named `&#x27;installApp&#x27;`.\n* The directive contains the three options `restrict`, `scope`, and `templateUrl` that we saw before in the `&#x27;appInfo&#x27;` directive.\n* It also contains a fourth option `link`. The `link` is used to create interactive directives that respond to user actions.\n\nThe link function takes three inputs:\n1. `scope` refers to the directive&#x27;s scope. Any new properties attached to `$scope` will become available to use in the directive&#x27;s template.\n2. `element` refers to the directive&#x27;s HTML element.\n3. `attrs` contains the element&#x27;s attributes.\n\nInside the `link` function, there are two properties `buttonText` and `installed`, and the function `download()`. We&#x27;ll use these in the directive&#x27;s template next.\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;Next, write the directive\\&#x27;s template: \\n\\n\\\nIn the new file **js/directives/installApp.html**. Type in the following HTML: \\n\\\n```html \\n\\\n\u003Cbutton class=\&quot;btn btn-active\&quot; ng-click=\&quot;download()\&quot;\u003E \\n\\\n  {{ buttonText }} \\n\\\n\u003C/button\u003E \\n\\\n```&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n    if (Components.CodeEditor.codeContains(&#x27;js/directives/installApp.html&#x27;, &#x27;\u003Cbutton\\\\s*class=[\\&#x27;\&quot;]btn btn-active[\\&#x27;\&quot;]\\\\s*ng-click=[\\&#x27;\&quot;]download\\\\(\\\\)[\\&#x27;\&quot;]\u003E&#x27;)) {\n      return {pass: true};\n    }\n\n      return {pass: false, errors: { friendly: \&quot;Did you write the template for the installApp directive?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n\n  }, callback);\n});\n&quot;,&quot;files&quot;:{}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/directives/lessons/directives/exercises/directives-install-app-ii.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/directives/exercises/directives-install-app-ii&quot;},&quot;directives-install-app-iii&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;directives-install-app-iii&quot;,&quot;title&quot;:&quot;installApp III&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-directives&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;index.html&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;The template uses Angular&#x27;s built-in `ng-click` directive. When the button is clicked, `ng-click` will tell AngularJS to run the `download()` function in the directive.\n\nThe `download()` function uses the `scope.installed` property to check if an app is installed. When an app is installed, `download()` does three things:\n* toggles the `.btn-active` class\n* changes the button text to \&quot;Uninstall\&quot;\n* changes `scope.installed` to `true`\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;Finally, use the new directive in the view: \\n\\n\\\nIn **index.html**, add the new `\u003Cinstall-app\u003E` element inside the `.card` div under the `\u003Capp-info\u003E` element. &#x27;, function(Tests, callback) {\nTests.componentTest(function(Components) {\n      if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;\u003Cinstall-app\u003E&#x27;)) {\n        return {pass: true};\n      }\n\n        return {pass: false, errors: { friendly: \&quot;Did you use \u003Cinstall-app\u003E in the view?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n\n  }, callback);\n});\ncheckpoint(&#x27;View the AngularJS app in the browser by typing http://localhost:8000.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n        if (Components.WebBrowser.loadedOneOf([\&quot;http://localhost:8000\&quot;, \&quot;localhost:3000\&quot;])) {\n          return {pass: true};\n        }\n\nreturn {pass: false, errors: { friendly: \&quot;Did you visit &#x27;localhost:8000/&#x27; in the browser?\&quot;, component: \&quot;WebBrowser\&quot; }};\n    }, callback);\n});&quot;,&quot;files&quot;:{}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/directives/lessons/directives/exercises/directives-install-app-iii.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/directives/exercises/directives-install-app-iii&quot;},&quot;directives-generalizations&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;directives-generalizations&quot;,&quot;title&quot;:&quot;Generalizations&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-directives&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;index.html&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;Well done! An \&quot;Install\&quot; button now shows up under each app. When you click the button, it changes to an \&quot;Uninstall\&quot; button. When you click it again, it changes back to an \&quot;Install\&quot; button.\n\nWhat can we generalize so far?\n* Directives are a powerful way to create self-contained, interactive components. Unlike jQuery which adds interactivity as a layer on top of HTML, AngularJS treats interactivity as a native component of HTML.\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/directives/lessons/directives/exercises/directives-generalizations.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/directives/exercises/directives-generalizations&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/directives/lessons/directives/directives.en.yml&quot;,&quot;exercises_order&quot;:[&quot;directives-directives-i&quot;,&quot;directives-directives-ii&quot;,&quot;directives-directives-iii&quot;,&quot;directives-built-in-and-custom-directives&quot;,&quot;directives-install-app-i&quot;,&quot;directives-install-app-ii&quot;,&quot;directives-install-app-iii&quot;,&quot;directives-generalizations&quot;],&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/directives/resume&quot;,&quot;unit_slug&quot;:&quot;directives&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false},&quot;services&quot;:{&quot;node_type&quot;:&quot;lesson&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;services&quot;,&quot;title&quot;:&quot;Services&quot;,&quot;description&quot;:&quot;Use services to communicate with a server.&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/services&quot;,&quot;exercises&quot;:{&quot;services-i&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;services-i&quot;,&quot;title&quot;:&quot;Services I&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-services&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;js/services/forecast.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;So far we&#x27;ve made AngularJS apps by adding data to a controller, and then displaying it in a view.\n\nBut what happens when the data contains hundreds of items, or if it&#x27;s constantly changing like weather or financial data? Hardcoding data into a controller won&#x27;t work anymore.\n\nA better solution is to read the live data from a server. We can do this by creating a _service_.\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;In the browser frame on the right, visit https://s3.amazonaws.com/codecademy-content/courses/ltp4/forecast-api/forecast.json. It\\&#x27;s a JSON object containing a `city_name` and an array `days` containing weather data for the next five days.&#x27;, function (Tests, callback)\n    {\n    Tests.componentTest(function (Components) {\n      if (Components.WebBrowser.loadedURL(&#x27;https://s3.amazonaws.com/codecademy-content/courses/ltp4/forecast-api/forecast.json&#x27;)) {\n        return { pass: true };\n      }\n      return {\n        pass: false,\n        errors: {\n          friendly: &#x27;Did you visit \\&#x27;https://s3.amazonaws.com/codecademy-content/courses/ltp4/forecast-api/forecast.json\\&#x27; in the browser?&#x27;,\n          component: &#x27;WebBrowser&#x27;\n        }\n      };\n    }, callback);\n  });\ncheckpoint(&#x27;Create a service named `forecast` that fetches the weather data from the server. In the new file **js/services/forecast.js**. Type in this code exactly as you see here: \\n```javascript \\napp.factory(\\&#x27;forecast\\&#x27;, [\\&#x27;$http\\&#x27;, function($http) { \\n  return $http.get(\\&#x27;https://s3.amazonaws.com/codecademy-content/courses/ltp4/forecast-api/forecast.json\\&#x27;) \\n            .success(function(data) { \\n              return data; \\n            }) \\n            .error(function(err) { \\n              return err; \\n            }); \\n}]); \\n```&#x27;, function (Tests, callback)\n    {\n    Tests.karmaTest(&#x27;karma2.js&#x27;, callback);\n  });\ncheckpoint(&#x27;Include **js/services/forecast.js** in **index.html** in line 62 as a new `\u003Cscript\u003E` element.&#x27;, function (Tests, callback)\n    {\n    Tests.componentTest(function (Components) {\n      if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;\u003Cscript src=[\\&#x27;\&quot;]js/services/forecast.js[\\&#x27;\&quot;]\u003E&#x27;)) {\n        return { pass: true };\n      }\n      return {\n        pass: false,\n        errors: {\n          friendly: &#x27;Did you include js/services/forecast.js as a new script element in index.html?&#x27;,\n          component: &#x27;PersistentCodeEditor&#x27;\n        }\n      };\n    }, callback);\n  });\ncheckpoint(&#x27;In the controller, modify `MainController` by passing in the `forecast` service, like this: \\n```javascript \\napp.controller(\\&#x27;MainController\\&#x27;, [\\&#x27;$scope\\&#x27;, \\&#x27;forecast\\&#x27;, function($scope, forecast) { \\n  // ... \\n}]); \\n```&#x27;, function (Tests, callback)\n    {\n    Tests.componentTest(function (Components) {\n      if (Components.CodeEditor.codeContains(&#x27;js/controllers/MainController.js&#x27;, &#x27;app.controller\\\\([\\&#x27;\&quot;]MainController[\\&#x27;\&quot;],\\\\s*\\\\[[\\&#x27;\&quot;]\\\\$scope[\\&#x27;\&quot;], [\\&#x27;\&quot;]forecast[\\&#x27;\&quot;], function\\\\(\\\\$scope, forecast\\\\)&#x27;)) {\n        return { pass: true };\n      }\n      return {\n        pass: false,\n        errors: {\n          friendly: &#x27;Did you pass in the forecast service into MainController?&#x27;,\n          component: &#x27;PersistentCodeEditor&#x27;\n        }\n      };\n    }, callback);\n  });\ncheckpoint(&#x27;Inside `MainController`, use the `forecast` service to save the weather data into `$scope.fiveDay`, like this: \\n```javascript \\n  forecast.success(function(data) { \\n    $scope.fiveDay = data; \\n  }); \\n```&#x27;, function (Tests, callback)\n    {\n    Tests.componentTest(function (Components) {\n      if (Components.CodeEditor.codeContains(&#x27;js/controllers/MainController.js&#x27;, &#x27;forecast.success\\\\(function\\\\(data\\\\)\\\\s*{&#x27;)) {\n        return { pass: true };\n      }\n      return {\n        pass: false,\n        errors: {\n          friendly: &#x27;Remember to save the weather data into $scope.fiveDay.&#x27;,\n          component: &#x27;PersistentCodeEditor&#x27;\n        }\n      };\n    }, callback);\n  });&quot;,&quot;files&quot;:{&quot;karma2.js&quot;:&quot;describe(&#x27;Did you create a new service named forecast?&#x27;, function() {\n  var ctrl, scope, service;\n\n  beforeEach(module(&#x27;ForecastApp&#x27;));\n\n  it(&#x27;Did you create a new service named forecast?&#x27;, function() {\n    inject(function($controller, $rootScope, forecast) {\n      expect(forecast).toBeDefined();\n    });\n  });\n});\n&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/services/lessons/services/exercises/services-i.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/services/exercises/services-i&quot;},&quot;services-ii&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;services-ii&quot;,&quot;title&quot;:&quot;Services II&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-services&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;js/services/forecast.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;Well done! The `city_name` now shows up in the view. How does it work?\n1. First in **js/services/forecast.js**, we made a new _service_. We used `app.factory` to create a new service named `forecast`\n2. The `forecast` service needs to use AngularJS&#x27;s built-in `$http` to fetch JSON from the server. Therefore, we add `$http` to the `forecast` service as a dependency, like this:\n    ```javascript\n    [&#x27;$http&#x27;, function($http) {\n      // ...\n    }]\n    ```\n    Now `$http` is available to use inside `forecast`.\n3. Then, inside `forecast`, we use `$http` to construct an HTTP `GET` request for the weather data. If the request succeeds, the weather data is returned; otherwise the error info is returned.\n4. Next in the controller, we used the `forecast` service to fetch data from the server. First we added `forecast` into `MainController` as a dependency so that it&#x27;s available to use. Then within the controller we used `forecast` to asynchronously fetch the weather data from the server and store it into `$scope.fiveDay`\n5. As before, any properties attached to `$scope` become available to use in the view. This means in **index.html**, we can display the `city_name` using an expression as done before.\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;In the browser, visit https://s3.amazonaws.com/codecademy-content/courses/ltp4/forecast-api/forecast.json. Looking at the format of the data in the `days` array, each day has four pieces of data - `datetime`, `icon`, `high`, and `low`.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n        if (Components.WebBrowser.loadedURL(\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/forecast-api/forecast.json\&quot;)) {\n          return {pass: true};\n        }\n        return {pass: false, errors: { friendly: \&quot;Did you visit &#x27;https://s3.amazonaws.com/codecademy-content/courses/ltp4/forecast-api/forecast.json&#x27; in the browser?\&quot;, component: \&quot;WebBrowser\&quot; }};\n    }, callback);\n});\ncheckpoint(&#x27;Visit http://localhost:8000 to view the AngularJS app. Let\\&#x27;s finish the view so that it displays the weather for each day.\\n\\nNotice in the view, we\\&#x27;re using `ng-repeat` to loop through each item in the `days` array. Inside this loop, display a day\\&#x27;s four pieces of data.\\n\\\n\\n\\\nRemember to use `ng-src` to display an image.&#x27;, function(Tests, callback) {\n  Tests.webSCT(&#x27;sct1.js&#x27;, callback);\n});\ncheckpoint(&#x27;Use the `date` filter to format the `datetime`.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n      if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, \&quot;\\\\|\\\\s*date\\\\s*}}\&quot;)) {\n        return {pass: true};\n      }\n      return {pass: false, errors: { friendly: \&quot;Did you add format the datetime using the date filter?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n  }, callback);\n});\n&quot;,&quot;files&quot;:{&quot;sct1.js&quot;:&quot;$expect(&#x27;.weekday&#x27;).to.have.text(/\\S/, \&quot;Make sure to display the weekday inside the .weekday div. Use the `date` filter to format the datetime into a weekday.\&quot;);\n$expect(&#x27;img&#x27;).to.exist(\&quot;Add an img tag for the icon field\&quot;)\nif (!($(&#x27;img&#x27;)[0].hasAttribute(&#x27;ng-src&#x27;))) {\n  throw new Error(&#x27;Use ng-src to set the img url&#x27;);\n}\n$expect(&#x27;.high&#x27;).to.have.text(/\\d/);\n$expect(&#x27;.low&#x27;).to.have.text(/\\d/);\n&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/services/lessons/services/exercises/services-ii.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/services/exercises/services-ii&quot;},&quot;services-generalizations&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;services-generalizations&quot;,&quot;title&quot;:&quot;Generalizations&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-services&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;js/services/forecast.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;Why are services useful?  Instead of filling the controller with code to fetch weather data from a server, it&#x27;s better to move this independent logic into a service so that it can be reused by other parts of the app.\n\nWhat can we generalize so far?\n* Directives are a way to make standalone UI components, like `\u003Capp-info\u003E`\n* Services are a way to make standalone communication logic, like `forecast` which fetches weather data from a server\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;&quot;,&quot;files&quot;:{}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/services/lessons/services/exercises/services-generalizations.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/services/exercises/services-generalizations&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/services/lessons/services/services.en.yml&quot;,&quot;exercises_order&quot;:[&quot;services-i&quot;,&quot;services-ii&quot;,&quot;services-generalizations&quot;],&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/services/resume&quot;,&quot;unit_slug&quot;:&quot;services&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false},&quot;routing&quot;:{&quot;node_type&quot;:&quot;lesson&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;routing&quot;,&quot;title&quot;:&quot;Routing&quot;,&quot;description&quot;:&quot;Add routes to build powerful single-page applications.&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/routing&quot;,&quot;exercises&quot;:{&quot;routing-routing-i&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;routing-routing-i&quot;,&quot;title&quot;:&quot;Routing I&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-routing&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;index.html&quot;},{&quot;filename&quot;:&quot;js/app.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;So far we&#x27;ve made AngularJS apps that display data in a single view **index.html**.\n\nBut what happens when the app grows and needs to display more information? Stuffing more code to a single view will quickly make things messy.\n\nA better solution is to use multiple templates that display different pieces of data based on the URL that the user is visiting. We can do this with Angular&#x27;s _application routes_.&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;In **index.html** under the `.header` section, type in the code exactly as you see here: \\n\\\n```html \\n\\\n\u003Cdiv ng-view\u003E\u003C/div\u003E \\n\\\n```&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n      if (Components.CodeEditor.codeContains(&#x27;index.html&#x27;, &#x27;\u003Cdiv ng-view\u003E\\\\s*\u003C/div\u003E&#x27;)) {\n        return {pass: true};\n      }\n      return {pass: false, errors: { friendly: \&quot;Did you type \u003Cdiv ng-view\u003E\u003C/div\u003E in the view?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n  }, callback);\n});\ncheckpoint(&#x27;View the AngularJS app in the browser by typing http://localhost:8000/.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n        if (Components.WebBrowser.loadedOneOf([\&quot;http://localhost:8000/\&quot;, \&quot;localhost:8000\&quot;])) {\n          return {pass: true};\n        }\n  return {pass: false, errors: { friendly: \&quot;Did you navigate to &#x27;http://localhost:8000/&#x27; in the browser?\&quot;, component: \&quot;WebBrowser\&quot; }};\n    }, callback);\n});\ncheckpoint(\&quot;In **app.js** under the `angular.module`, type in this code: \\n\\\n```javascript \\n\\\napp.config(function ($routeProvider) { \\n\\\n  $routeProvider \\n\\\n    .when(&#x27;/&#x27;, { \\n\\\n      controller: &#x27;HomeController&#x27;, \\n\\\n      templateUrl: &#x27;views/home.html&#x27; \\n\\\n    }) \\n\\\n    .otherwise({ \\n\\\n      redirectTo: &#x27;/&#x27; \\n\\\n    }); \\n\\\n}); \\n\\\n```\&quot;, function(Tests, callback) {\n  Tests.karmaTest(&#x27;karma.js&#x27;, callback);\n});&quot;,&quot;files&quot;:{&quot;karma.js&quot;:&quot;describe(&#x27;Routes test&#x27;, function() {\n    // Mock our module in our tests\n    beforeEach(module(&#x27;GalleryApp&#x27;));\n\n    // We want to store a copy of the three services we&#x27;ll use in our tests\n    // so we can later reference these services in our tests.\n    var $location, $route, $rootScope;\n\n    // We added _ in our dependencies to avoid conflicting with our variables.\n    // Angularjs will strip out the _ and inject the dependencies.\n    beforeEach(inject(function(_$location_, _$route_, _$rootScope_){\n        $location = _$location_;\n        $route = _$route_;\n        $rootScope = _$rootScope_;\n    }));\n\n    // We need to setup a mock backend to handle the fetching of templates from the &#x27;templateUrl&#x27;.\n    beforeEach(inject(function($httpBackend){\n        $httpBackend.expectGET(&#x27;views/home.html&#x27;).respond(200, &#x27;main HTML&#x27;);\n        // or we can use $templateCache service to store the template.\n        // $routeProvider will search for the template in the $templateCache first\n        // before fetching it using http\n        // $templateCache.put(&#x27;templates/main.html&#x27;, &#x27;main HTML&#x27;);\n    }));\n\n    // Our test code is set up. We can now start writing the tests.\n\n    // When a user navigates to the index page, they are shown the index page with the proper\n    // controller\n    it(&#x27;Make sure to type the code in app.js exactly as shown in Step 2&#x27;, function(){\n        expect($location.path()).toBe(&#x27;&#x27;);\n\n        $location.path(&#x27;/&#x27;);\n\n        // The router works with the digest lifecycle, wherein after the location is set,\n        // it takes a single digest loop cycle to process the route,\n        // transform the page content, and finish the routing.\n        // In order to trigger the location request, we\u2019ll run a digest cycle (on the $rootScope)\n        // and check that the controller is as expected.\n        $rootScope.$digest();\n\n        expect($location.path()).toBe( &#x27;/&#x27; );\n        expect($route.current.controller).toBe(&#x27;HomeController&#x27;);\n    });\n\n    it(&#x27;Make sure to type the code in app.js exactly as shown in Step 2&#x27;, function(){\n        expect($location.path()).toBe(&#x27;&#x27;);\n\n        $location.path(&#x27;/a/non-existent/route&#x27;);\n\n        $rootScope.$digest();\n\n        expect($location.path()).toBe( &#x27;/&#x27; );\n        expect($route.current.controller).toBe(&#x27;HomeController&#x27;);\n    });\n});\n&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/routing/lessons/routing/exercises/routing-routing-i.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/routing/exercises/routing-routing-i&quot;},&quot;routing-routing-ii&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;routing-routing-ii&quot;,&quot;title&quot;:&quot;Routing II&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-routing&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;index.html&quot;},{&quot;filename&quot;:&quot;js/app.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;Great! A gallery of images shows up. How does it work?\n1. In **app.js** inside the `app.config()` method, we use Angular&#x27;s `$routeProvider` to define the application routes.\n2. We used `.when()` to map the URL `/` to to the controller `HomeController` and the template `home.html`. The `HomeController` uses the service **js/services/photos.js** to fetch the array of all photos from https://s3.amazonaws.com/codecademy-content/courses/ltp4/photos-api/photos.json and stores it into `$scope.photos`. The `home.html` uses `ng-repeat` to loop through each item in the `photos` array and display each photo.\n3. Otherwise if a user accidentally visits a URL other than `/`, we just redirect to `/` using `.otherwise()`.\n4. Now when a user visits `/`, a view will be constructed by injecting `home.html` into the `\u003Cdiv ng-view\u003E\u003C/div\u003E` in **index.html**.\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;In **app.js** between the `.when()` and `.otherwise()`, add another `.when()` that maps the URL `/photos/:id` to the controller `PhotoController` and the template **views/photo.html**.&#x27;, function(Tests, callback) {\n  Tests.karmaTest(&#x27;karma1.js&#x27;, callback);\n});\ncheckpoint(&#x27;Visit http://localhost:8000/ and click on a photo. A detail page about that photo should appear.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n        if (Components.WebBrowser.loadedOneOf([\&quot;http://localhost:8000/\&quot;, \&quot;localhost:8000\&quot;])) {\n          return {pass: true};\n        }\n\nreturn {pass: false, errors: { friendly: \&quot;Did you visit &#x27;http://localhost:8000/&#x27; in the browser?\&quot;, component: \&quot;WebBrowser\&quot; }};\n    }, callback);\n});&quot;,&quot;files&quot;:{&quot;karma1.js&quot;:&quot;describe(&#x27;Routes test&#x27;, function() {\n    // Mock our module in our tests\n    beforeEach(module(&#x27;GalleryApp&#x27;));\n\n    // We want to store a copy of the three services we&#x27;ll use in our tests\n    // so we can later reference these services in our tests.\n    var $location, $route, $rootScope;\n\n    // We added _ in our dependencies to avoid conflicting with our variables.\n    // Angularjs will strip out the _ and inject the dependencies.\n    beforeEach(inject(function(_$controller_, _$location_, _$route_, _$rootScope_){\n        $controller = _$controller_;\n        $location = _$location_;\n        $route = _$route_;\n        $rootScope = _$rootScope_;\n        PhotoController = $controller(&#x27;PhotoController&#x27;, { $scope: $rootScope, $routeParams: {id: &#x27;1&#x27;}});\n    }));\n\n    // We need to setup a mock backend to handle the fetching of templates from the &#x27;templateUrl&#x27;.\n    beforeEach(inject(function($httpBackend){\n        $httpBackend.whenGET(&#x27;views/home.html&#x27;).respond(200, &#x27;main HTML&#x27;);\n        $httpBackend.whenGET(&#x27;views/photo.html&#x27;).respond(200, &#x27;photo HTML&#x27;);\n        $httpBackend.whenGET(&#x27;https://s3.amazonaws.com/codecademy-content/courses/ltp4/photos-api/photos.json&#x27;).respond([\n          {\n            \&quot;title\&quot;: \&quot;Canada\&quot;,\n            \&quot;author\&quot;: \&quot;Tim Gage\&quot;,\n            \&quot;url\&quot;: \&quot;https://dl.dropboxusercontent.com/u/110238630/ltp4-photos-api/canada.jpg\&quot;,\n            \&quot;pubdate\&quot;: 1412208000000,\n            \&quot;upvotes\&quot;: 60,\n            \&quot;views\&quot;: 1195\n          }])\n    }));\n\n    it(&#x27;Did you use .when() to map the URL /photos/:id?&#x27;, function(){\n        expect($location.path()).toBe(&#x27;&#x27;);\n\n        $location.path(&#x27;/photos/1&#x27;);\n\n        $rootScope.$digest();\n\n        expect($location.path()).toBe(&#x27;/photos/1&#x27;);\n        expect($route.current.controller).toBe(&#x27;PhotoController&#x27;);\n    });\n});\n&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/routing/lessons/routing/exercises/routing-routing-ii.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/routing/exercises/routing-routing-ii&quot;},&quot;routing-routing-iii&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;routing-routing-iii&quot;,&quot;title&quot;:&quot;Routing III&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-routing&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;js/app.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;What did we just do?\n\n1. In **app.js**, we mapped a URL to `PhotoController` and `photo.html`. We added a variable part named `id` to the URL, like this: `/photos/:id`.\n2. In **PhotoController**, we used Angular&#x27;s `$routeParams` to retrieve `id` from the URL by using `$routeParams.id`. Notice that we injected both `$routeParams` and the `photos` service into the `PhotoController` dependency array to make them available to use inside the controller.\n3. Then to fetch an individual photo, we first used the `photos` service to fetch the array of photos from the server, and then used `$routeParams.id` to access the specific photo by its index.\n4. As before, any properties attached to `$scope` become available to use in the view. This means in **photo.html**, we can display the photo&#x27;s `detail` using expressions as done before.\n\nNotice that when you click on links, the app doesn&#x27;t do a full reload. Only the part of the view specified by `\u003Cdiv ng-view\u003E\u003C/div\u003E` changes.&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;checkpoint(&#x27;Finish the template so that it displays a photo\\&#x27;s details. \\n\\\n\\n\\\nFirst, in the browser, visit https://s3.amazonaws.com/codecademy-content/courses/ltp4/photos-api/photos.json. Looking at the format of the data in the array, each photo has six pieces of data - `title`, `author`, `url`, `pubdate`, `upvotes`, and `views`.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n        if (Components.WebBrowser.loadedURL(\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/photos-api/photos.json\&quot;)) {\n          return {pass: true};\n        }\n\nreturn {pass: false, errors: { friendly: \&quot;Did you visit &#x27;https://s3.amazonaws.com/codecademy-content/courses/ltp4/photos-api/photos.json&#x27; in the browser?\&quot;, component: \&quot;WebBrowser\&quot; }};\n    }, callback);\n});\ncheckpoint(&#x27;In the template **photo.html**, display a photo\\&#x27;s remaining five pieces of data. Then visit http://localhost:8000/ in the browser and click on a photo. A detail page about that photo should appear.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n        if (Components.WebBrowser.loadedOneOf([\&quot;http://localhost:8000/\&quot;, \&quot;localhost:8000\&quot;])) {\n          return {pass: true};\n        }\n\nreturn {pass: false, errors: { friendly: \&quot;Did you visit &#x27;http://localhost:8000/&#x27; in the browser?\&quot;, component: \&quot;WebBrowser\&quot; }};\n    }, callback);\n});\ncheckpoint(&#x27;Use the `number` filter to format the `views` and `upvotes`.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n      if (Components.CodeEditor.codeContains(&#x27;views/photo.html&#x27;, \&quot;\\\\|\\\\s*number\\\\s*}}\&quot;)) {\n        return {pass: true};\n      }\n\n        return {pass: false, errors: { friendly: \&quot;Did you add code to format views and upvotes?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n\n  }, callback);\n});\ncheckpoint(&#x27;Use the `date` filter to format the `pubdate`.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n      if (Components.CodeEditor.codeContains(&#x27;views/photo.html&#x27;, \&quot;\\\\s*\\\\|\\\\s*date\\\\s*}}\&quot;)) {\n        return {pass: true};\n      }\n\n        return {pass: false, errors: { friendly: \&quot;Did you add the code in to format pubdate?\&quot;, component: \&quot;PersistentCodeEditor\&quot; }};\n\n  }, callback);\n});\ncheckpoint(&#x27;View the result in the browser. The photo\\&#x27;s views, upvotes, and date should now be formatted.&#x27;, function(Tests, callback) {\n  Tests.componentTest(function(Components) {\n        if (Components.WebBrowser.loadedOneOf([\&quot;http://localhost:8000/\&quot;, \&quot;localhost:8000\&quot;])) {\n          return {pass: true};\n        }\n\nreturn {pass: false, errors: { friendly: \&quot;Did you visit &#x27;http://localhost:8000/&#x27; in the browser?\&quot;, component: \&quot;WebBrowser\&quot; }};\n    }, callback);\n});\n&quot;,&quot;files&quot;:{&quot;sct1.js&quot;:&quot;$expect(&#x27;.title&#x27;).not.to.be.empty();\n$expect(&#x27;.author&#x27;).not.to.be.empty();\n$expect(&#x27;.views&#x27;).not.to.be.empty();\n$expect(&#x27;.upvotes&#x27;).not.to.be.empty();\n$expect(&#x27;.pubdate&#x27;).not.to.be.empty();&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/routing/lessons/routing/exercises/routing-routing-iii.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/routing/exercises/routing-routing-iii&quot;},&quot;routing-generalizations&quot;:{&quot;node_type&quot;:&quot;exercise&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;routing-generalizations&quot;,&quot;title&quot;:&quot;Generalizations&quot;,&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs-routing&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[{&quot;filename&quot;:&quot;js/app.js&quot;}],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;Narrative&quot;:{&quot;content&quot;:&quot;Why are routes useful? Instead of filling a single view with more code than needed, routes let us map URLs to self-contained controllers and templates. Furthermore, now that the app has URLs, users can easily bookmark and share the app&#x27;s pages.\n\nWhat can we generalize so far?\n* Directives are a way to make standalone UI components, like `\u003Capp-info\u003E`\n* Services are a way to make standalone communication logic, like `forecast` which fetches weather data from a server\n* Routes are a way to manage apps containing more views.\n&quot;,&quot;_schema&quot;:&quot;Narrative&quot;}},&quot;tests&quot;:{&quot;checkpoints&quot;:&quot;&quot;,&quot;files&quot;:{}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/routing/lessons/routing/exercises/routing-generalizations.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/routing/exercises/routing-generalizations&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/routing/lessons/routing/routing.en.yml&quot;,&quot;exercises_order&quot;:[&quot;routing-routing-i&quot;,&quot;routing-routing-ii&quot;,&quot;routing-routing-iii&quot;,&quot;routing-generalizations&quot;],&quot;path&quot;:&quot;/en/courses/learn-angularjs/lessons/routing/resume&quot;,&quot;unit_slug&quot;:&quot;routing&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false}},&quot;projects&quot;:{&quot;angularjs_bolt-network-1&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs_bolt-network-1&quot;,&quot;title&quot;:&quot;Bolt Network 1&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll create a movie review board using a controller and a view.&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/angularjsbolt-network-1&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/bolt-network-1.jpg&quot;,&quot;preview_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/4/bolt-network-1/index.html&quot;,&quot;objective&quot;:&quot;Bolt Network wants to create an AngularJS app for their program pages. \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/bolt-network-1/index.html\&quot;\u003EHere&#x27;s what it looks like\u003C/a\u003E. The program page displays information about a show&#x27;s airing time on the network.&quot;,&quot;meta&quot;:{&quot;author&quot;:{&quot;fullname&quot;:&quot;Lalith Polepeddi&quot;,&quot;username&quot;:&quot;lpolepeddi&quot;}},&quot;self_assessments&quot;:[{&quot;tasks&quot;:[{&quot;key&quot;:&quot;bolt-network-1_0_0&quot;,&quot;text&quot;:&quot;Create a new module:\n\u003Col type=\&quot;a\&quot;\u003E\n  \u003Cli\u003EIn \u003Cstrong\u003Ejs/app.js\u003C/strong\u003E, create a new module named \u003Ccode\u003EBoltNetworkApp\u003C/code\u003E.\u003C/li\u003E\n  \u003Cli\u003EIn the view, use \u003Ccode\u003Eng-app\u003C/code\u003E to attach the \u003Ccode\u003EBoltNetworkApp\u003C/code\u003E module to the \u003Ccode\u003E\u0026lt;body\u0026gt;\u003C/code\u003E element.\u003C/li\u003E\n\u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;bolt-network-1_0_1&quot;,&quot;text&quot;:&quot;Create a new controller:\n\u003Col type=\&quot;a\&quot;\u003E\n  \u003Cli\u003EIn the controller, make a new property called \u003Ccode\u003E$scope.program\u003C/code\u003E, and set it equal to the following object\n    \u003Cpre\u003E\u003Ccode class=\&quot;lang-javascript\&quot;\u003E{\n  series: \&quot;Sherlock\&quot;,\n  series_img: \&quot;img/sherlock.jpg\&quot;,\n  genre: \&quot;Crime drama\&quot;,\n  season: 3,\n  episode: \&quot;The Empty Hearse\&quot;,\n  description: \&quot;Two years after his reported Reichenbach Fall demise, Sherlock, who has been cleared of all fraud charges against him, returns with Mycroft&#x27;s help to a London under threat of terrorist attack. John has moved on and has a girlfriend, Mary Morstan. Sherlock enlists Molly to assist him, but when John is kidnapped by unknown assailants and is rescued by Sherlock and Mary, John returns to help find the terrorists and an underground plot to blow up the Houses of Parliament during an all night sitting on Guy Fawkes Night.\&quot;,\n  datetime: new Date(2014, 11, 31, 21, 00, 00, 00)\n}\u003C/code\u003E\u003C/pre\u003E\n  \u003C/li\u003E\n  \u003Cli\u003EIn the view, use \u003Ccode\u003Eng-controller\u003C/code\u003E to attach \u003Ccode\u003EMainController\u003C/code\u003E to the \u003Ccode\u003E\u0026lt;div class=\&quot;main\&quot;\u0026gt;\u003C/code\u003E element.\u003C/li\u003E\n\u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;bolt-network-1_0_2&quot;,&quot;text&quot;:&quot;Display the data in the view:\n\u003Col type=\&quot;a\&quot;\u003E\n  \u003Cli\u003EInside \u003Ccode\u003E\u0026lt;div class=\&quot;main\&quot;\u0026gt;\u003C/code\u003E, display the details of \u003Ccode\u003Eprogram\u003C/code\u003E using expressions.\u003C/li\u003E\n  \u003Cli\u003EUse the \u003Ccode\u003Edate\u003C/code\u003E filter to format the \u003Cstrong\u003EDate\u003C/strong\u003E, \u003Cstrong\u003EOn air\u003C/strong\u003E, and \u003Cstrong\u003ETime\u003C/strong\u003E fields as shown \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/bolt-network-1/index.html\&quot;\u003Ein the preview\u003C/a\u003E. Check out \u003Ca href=\&quot;http://www.ng-newsletter.com/posts/beginner2expert-config.html\&quot; target=\&quot;_blank\&quot;\u003Ethis page\u003C/a\u003E for examples. Scroll down to the \&quot;date\&quot; section.\u003C/li\u003E\n\u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_bolt-network-1_0_3&quot;,&quot;text&quot;:&quot;View the result by visiting http://localhost:8000 in the browser.&quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs_bolt-network&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/your-first-app/projects/angularjs_bolt-network-1.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_bolt-network-1&quot;,&quot;unit_slug&quot;:&quot;your-first-app&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false},&quot;angularjs_pizza-planet&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs_pizza-planet&quot;,&quot;title&quot;:&quot;Pizza Planet&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll create a restaurant menu using filters and directives.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/pizza-planet.jpg&quot;,&quot;preview_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/4/pizza-planet/index.html&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/angularjspizza-planet&quot;,&quot;objective&quot;:&quot;Pizza Planet wants to create an AngularJS app for their restaurant&#x27;s menu. \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/pizza-planet/index.html\&quot;\u003EHere&#x27;s what it looks like\u003C/a\u003E. The menu displays the restaurant&#x27;s appetizers, mains, and extras.&quot;,&quot;meta&quot;:{&quot;author&quot;:{&quot;fullname&quot;:&quot;Lalith Polepeddi&quot;,&quot;username&quot;:&quot;lpolepeddi&quot;}},&quot;self_assessments&quot;:[{&quot;tasks&quot;:[{&quot;key&quot;:&quot;pizza-planet_0_0&quot;,&quot;text&quot;:&quot;Create a new module named \u003Ccode\u003EPizzaPlanetApp\u003C/code\u003E in \u003Cstrong\u003Ejs/app.js\u003C/strong\u003E, and then attach it to the \u003Ccode\u003E\u0026lt;body\u0026gt;\u003C/code\u003E element in the view.&quot;},{&quot;key&quot;:&quot;pizza-planet_0_1&quot;,&quot;text&quot;:&quot;Modify the controller:\n\u003Col type=\&quot;a\&quot;\u003E\n  \u003Cli\u003EThere is currently a property called \u003Ccode\u003E$scope.appetizers\u003C/code\u003E containing an array of two objects. Add a third object with the following values:\u003Cbr\u003E\n  \u003Cstrong\u003EName:\u003C/strong\u003E Bruschetta\u003Cbr\u003E\n  \u003Cstrong\u003EDescription:\u003C/strong\u003E Grilled bread garlic, tomatoes, olive oil.\u003Cbr\u003E\n  \u003Cstrong\u003EPrice:\u003C/strong\u003E 4.95\n  \u003C/li\u003E\n  \u003Cli\u003EAttach the controller to the \u003Ccode\u003E\u0026lt;div class=\&quot;main\&quot;\u0026gt;\u003C/code\u003E element.\u003C/li\u003E\n\u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;pizza-planet_0_2&quot;,&quot;text&quot;:&quot;Display the data in the view:\n\u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EInside \u003Ccode\u003E\u0026lt;div class=\&quot;appetizer row\&quot;\u0026gt;\u003C/code\u003E, use \u003Ccode\u003Eng-repeat\u003C/code\u003E to loop through the \u003Ccode\u003Eappetizers\u003C/code\u003E array. Display each appetizer&#x27;s \u003Ccode\u003Ename\u003C/code\u003E, \u003Ccode\u003Edescription\u003C/code\u003E, and \u003Ccode\u003Eprice\u003C/code\u003E using expressions.\u003C/li\u003E\n            \u003Cli\u003EUse the \u003Ccode\u003Ecurrency\u003C/code\u003E filter to format an appetizer&#x27;s price.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;pizza-planet_0_3&quot;,&quot;text&quot;:&quot;View the result by visiting http://localhost:8000 in the browser.&quot;},{&quot;key&quot;:&quot;pizza-planet_0_4&quot;,&quot;text&quot;:&quot;In the controller, add another property called \u003Ccode\u003E$scope.mains\u003C/code\u003E containing an array of three objects. Feel free to use your favorite foods.&quot;},{&quot;key&quot;:&quot;pizza-planet_0_5&quot;,&quot;text&quot;:&quot;In the view, adapt the \u003Ccode\u003E\u0026lt;div class=\&quot;appetizer row\&quot;\u0026gt;\u003C/code\u003E element to create a \u003Ccode\u003E\u0026lt;div class=\&quot;mains row\&quot;\u0026gt;\u003C/code\u003E element. Loop through the \u003Ccode\u003Emains\u003C/code\u003E and display each item using expressions and filters. View the result in the browser.&quot;},{&quot;key&quot;:&quot;pizza-planet_0_6&quot;,&quot;text&quot;:&quot;In the controller, add another property called \u003Ccode\u003E$scope.extras\u003C/code\u003E containing an array of three objects. Feel free to use your favorite sides.&quot;},{&quot;key&quot;:&quot;pizza-planet_0_7&quot;,&quot;text&quot;:&quot;In the view, loop through the \u003Ccode\u003Eextras\u003C/code\u003E and display each item. View the result in the browser.&quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs_pizza-planet&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/your-first-app/projects/angularjs_pizza-planet.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_pizza-planet&quot;,&quot;unit_slug&quot;:&quot;your-first-app&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false},&quot;angularjs_move-log&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs_move-log&quot;,&quot;title&quot;:&quot;MOVE Log&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll create an exercise tracking app using directives.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/move-log.jpg&quot;,&quot;preview_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/4/move-log/index.html&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/angularjsmove-log&quot;,&quot;objective&quot;:&quot;MOVE wants to create an AngularJS app for their workout tracker Log. \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/move-log/index.html\&quot;\u003EHere&#x27;s what it looks like\u003C/a\u003E. The tracker displays a list of exercises. Tapping the + or - changes the number of reps for that exercise.&quot;,&quot;meta&quot;:{&quot;author&quot;:{&quot;fullname&quot;:&quot;Lalith Polepeddi&quot;,&quot;username&quot;:&quot;lpolepeddi&quot;}},&quot;self_assessments&quot;:[{&quot;tasks&quot;:[{&quot;key&quot;:&quot;angularjs_move-log_1_0&quot;,&quot;text&quot;:&quot;Create a new module named \u003Ccode\u003EMoveLogApp\u003C/code\u003E, and then attach it to the \u003Ccode\u003E\u0026lt;body\u0026gt;\u003C/code\u003E element in the view.&quot;},{&quot;key&quot;:&quot;angularjs_move-log_1_1&quot;,&quot;text&quot;:&quot;In the controller, there is a property called \u003Ccode\u003E$scope.exercises\u003C/code\u003E containing an array of objects. Attach the controller to the \u003Ccode\u003E\u0026lt;div class=\&quot;main\&quot;\u0026gt;\u003C/code\u003E element in the view, and then finish the view to display each item in the \u003Ccode\u003Eexercises\u003C/code\u003E array.&quot;},{&quot;key&quot;:&quot;angularjs_move-log_1_2&quot;,&quot;text&quot;:&quot;View the result by visiting http://localhost:8000 in the browser.&quot;},{&quot;key&quot;:&quot;angularjs_move-log_1_3&quot;,&quot;text&quot;:&quot;In the controller, add another property called \u003Ccode\u003E$scope.increase\u003C/code\u003E. Set it equal to a function that takes in the index of the exercise that was clicked, and then adds one to that exercise&#x27;s \u003Ccode\u003Ecount\u003C/code\u003E property.&quot;},{&quot;key&quot;:&quot;angularjs_move-log_1_4&quot;,&quot;text&quot;:&quot;In the view in the \u003Ccode\u003E\u0026lt;span class=\&quot;increase\&quot;\u0026gt;\u003C/code\u003E element, use \u003Ccode\u003Eng-click\u003C/code\u003E to tell AngularJS to run the \u003Ccode\u003Eincrease()\u003C/code\u003E function when clicked. Use \u003Ccode\u003E$index\u003C/code\u003E to pass in the index of the item that was clicked.&quot;},{&quot;key&quot;:&quot;angularjs_move-log_1_5&quot;,&quot;text&quot;:&quot;In the controller, add another property called \u003Ccode\u003E$scope.decrease\u003C/code\u003E. Set it equal to a function that takes in the index of an exercise that was clicked, and then subtracts one from that exercise&#x27;s \u003Ccode\u003Ecount\u003C/code\u003E property. Then in the view use \u003Ccode\u003Eng-click\u003C/code\u003E on the \u003Ccode\u003E\u0026lt;span class=\&quot;decrease\&quot;\u0026gt;\u003C/code\u003E element to trigger the \u003Ccode\u003Edecrease()\u003C/code\u003E function when clicked.&quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs_move-log&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/your-first-app/projects/angularjs_move-log.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_move-log&quot;,&quot;unit_slug&quot;:&quot;your-first-app&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false},&quot;angularjs_bolt-network-2&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs_bolt-network-2&quot;,&quot;title&quot;:&quot;Bolt Network 2&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll add custom directives to your movie review board.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/bolt-network-2.jpg&quot;,&quot;preview_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/4/bolt-network-2/index.html&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/angularjsbolt-network-2&quot;,&quot;objective&quot;:&quot;Continue building out the Bolt Network project, which you \u003Ca href=\&quot;http://www.codecademy.com/en/practice/learn-angularjs/topics/your-first-app/projects/angularjs_bolt-network-1\&quot; target=\&quot;_blank\&quot;\u003Estarted here\u003C/a\u003E. Bolt Network wants to add more shows to their program page. \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/bolt-network-2/index.html\&quot;\u003EHere&#x27;s what it looks like\u003C/a\u003E.&quot;,&quot;meta&quot;:{&quot;author&quot;:{&quot;fullname&quot;:&quot;Lalith Polepeddi&quot;,&quot;username&quot;:&quot;lpolepeddi&quot;}},&quot;self_assessments&quot;:[{&quot;tasks&quot;:[{&quot;key&quot;:&quot;angularjs_bolt-network-2_0_0&quot;,&quot;text&quot;:&quot;Make a new folder \u003Cstrong\u003Ejs/directives/\u003C/strong\u003E. Inside this folder, create a file \u003Cstrong\u003Ejs/directives/programListing.js\u003C/strong\u003E. In this file,create a new directive named \u003Ccode\u003EprogramListing\u003C/code\u003E:\n          \u003Cul\u003E\n            \u003Cli\u003EUse \u003Ccode\u003Eapp.directive\u003C/code\u003E to create the new directive\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003Erestrict\u003C/code\u003E to create a new Element\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003Escope\u003C/code\u003E to specify that we&#x27;ll pass information into this directive through an attribute named \u003Ccode\u003Elisting\u003C/code\u003E\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003EtemplateUrl\u003C/code\u003E to tell this directive to use the \u003Cstrong\u003Ejs/directives/programListing.html\u003C/strong\u003E file\u003C/li\u003E\n          \u003C/ul\u003E\n&quot;},{&quot;key&quot;:&quot;angularjs_bolt-network-2_0_1&quot;,&quot;text&quot;:&quot;Include this new JavaScript file in the view as a \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_bolt-network-2_0_2&quot;,&quot;text&quot;:&quot;Next, write the directive&#x27;s template. Make a new file \u003Cstrong\u003Ejs/directives/programListing.html\u003C/strong\u003E. Move the HTML from \u003Cstrong\u003Eindex.html\u003C/strong\u003E inside the \u003Ccode\u003E.content\u003C/code\u003E div into the directive&#x27;s template file.&quot;},{&quot;key&quot;:&quot;angularjs_bolt-network-2_0_3&quot;,&quot;text&quot;:&quot;The \u003Ccode\u003EprogramListing\u003C/code\u003E directive takes in information through the \u003Ccode\u003Elisting\u003C/code\u003E attribute. The data in \u003Ccode\u003Elisting\u003C/code\u003E becomes available to use in the directive&#x27;s template. Update the expressions in the directive&#x27;s template so that it uses \u003Ccode\u003Elisting\u003C/code\u003E to display each item.&quot;},{&quot;key&quot;:&quot;angularjs_bolt-network-2_0_4&quot;,&quot;text&quot;:&quot;In the view, use the \u003Ccode\u003E\u0026lt;program-listing\u0026gt;\u003C/code\u003E directive to display the details of \u003Ccode\u003Eprogram\u003C/code\u003E.&quot;},{&quot;key&quot;:&quot;angularjs_bolt-network-2_0_5&quot;,&quot;text&quot;:&quot;Add another object to the controller. Feel free to use your favorite TV show.&quot;},{&quot;key&quot;:&quot;angularjs_bolt-network-2_0_6&quot;,&quot;text&quot;:&quot;Use another \u003Ccode\u003E\u0026lt;program-listing\u0026gt;\u003C/code\u003E directive to display the details of the new object.&quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs_bolt-network&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/directives/projects/angularjs_bolt-network-2.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_bolt-network-2&quot;,&quot;unit_slug&quot;:&quot;directives&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false},&quot;angularjs_gameboard&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs_gameboard&quot;,&quot;title&quot;:&quot;Gameboard&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll create a custom directive that displays the score of a game.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/gameboard.jpg&quot;,&quot;preview_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/4/gameboard/index.html&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/angularjsgameboard&quot;,&quot;objective&quot;:&quot;Gameboard is creating an AngularJS app for their scoreboard that displays NBA scores from around the league. \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/gameboard/index.html\&quot;\u003EHere&#x27;s what it looks like\u003C/a\u003E.&quot;,&quot;meta&quot;:{&quot;author&quot;:{&quot;fullname&quot;:&quot;Lalith Polepeddi&quot;,&quot;username&quot;:&quot;lpolepeddi&quot;}},&quot;self_assessments&quot;:[{&quot;tasks&quot;:[{&quot;key&quot;:&quot;angularjs_gameboard_0_0&quot;,&quot;text&quot;:&quot;Create a new module named \u003Ccode\u003EGameboardApp\u003C/code\u003E, and then attach it to the \u003Ccode\u003E\u0026lt;body\u0026gt;\u003C/code\u003E element in the view.&quot;},{&quot;key&quot;:&quot;angularjs_gameboard_0_1&quot;,&quot;text&quot;:&quot;In the controller, there is a property called \u003Ccode\u003E$scope.scores\u003C/code\u003E containing an array of objects with information about each game. Attach the controller to the \u003Ccode\u003E\u0026lt;div class=\&quot;main\&quot;\u0026gt;\u003C/code\u003E element in the view.&quot;},{&quot;key&quot;:&quot;angularjs_gameboard_0_2&quot;,&quot;text&quot;:&quot;Make a new file \u003Cstrong\u003Ejs/directives/game.js\u003C/strong\u003E. In it, create a new directive named \u003Ccode\u003Egame\u003C/code\u003E:\n          \u003Cul\u003E\n            \u003Cli\u003EUse \u003Ccode\u003Eapp.directive\u003C/code\u003E to create the new directive\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003Erestrict\u003C/code\u003E to create a new Element\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003Escope\u003C/code\u003E to specify that we&#x27;ll pass information into this directive through an attribute named \u003Ccode\u003Einfo\u003C/code\u003E\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003EtemplateUrl\u003C/code\u003E to tell this directive to use the \u003Cstrong\u003Ejs/directives/game.html\u003C/strong\u003E file\u003C/li\u003E\n          \u003C/ul\u003E\n&quot;},{&quot;key&quot;:&quot;angularjs_gameboard_0_3&quot;,&quot;text&quot;:&quot;Include this new JavaScript file in \u003Cstrong\u003Eindex.html\u003C/strong\u003E as a \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_gameboard_0_4&quot;,&quot;text&quot;:&quot;Next, write the directive&#x27;s template. In the file \u003Cstrong\u003Ejs/directives/game.html\u003C/strong\u003E, finish the template so it displays a game&#x27;s details. Looking at the format of the data in \u003Ccode\u003E$scope.scores\u003C/code\u003E, each game has five pieces of data - \u003Ccode\u003Evisitor_team\u003C/code\u003E, \u003Ccode\u003Ehome_team\u003C/code\u003E, \u003Ccode\u003Eperiod\u003C/code\u003E, \u003Ccode\u003Evisitor_score\u003C/code\u003E, and \u003Ccode\u003Ehome_score\u003C/code\u003E.&quot;},{&quot;key&quot;:&quot;angularjs_gameboard_0_5&quot;,&quot;text&quot;:&quot;In the view inside the \u003Ccode\u003E.row\u003C/code\u003E div, use the \u003Ccode\u003E\u0026lt;game\u0026gt;\u003C/code\u003E directive to display the details of each game:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EOn the \u003Ccode\u003E\u0026lt;game\u0026gt;\u003C/code\u003E directive, use \u003Ccode\u003Eng-repeat\u003C/code\u003E to loop through the \u003Ccode\u003Escores\u003C/code\u003E.\u003C/li\u003E\n            \u003Cli\u003EPass each item into the \u003Ccode\u003E\u0026lt;game\u0026gt;\u003C/code\u003E directive&#x27;s \u003Ccode\u003Einfo\u003C/code\u003E attribute.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_gameboard_0_6&quot;,&quot;text&quot;:&quot;View the result by visiting http://localhost:8000 in the browser.&quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs_gameboard&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/directives/projects/angularjs_gameboard.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_gameboard&quot;,&quot;unit_slug&quot;:&quot;directives&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false},&quot;angularjs_feedster&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs_feedster&quot;,&quot;title&quot;:&quot;Feedster&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll build a news feed using custom directives.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/feedster.jpg&quot;,&quot;preview_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/4/feedster/index.html&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/angularjsfeedster&quot;,&quot;objective&quot;:&quot;Feedster is creating an AngularJS app for their news feed. \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/feedster/index.html\&quot;\u003EHere&#x27;s what it looks like\u003C/a\u003E. Click on each post&#x27;s +1 button.&quot;,&quot;meta&quot;:{&quot;author&quot;:{&quot;fullname&quot;:&quot;Lalith Polepeddi&quot;,&quot;username&quot;:&quot;lpolepeddi&quot;}},&quot;self_assessments&quot;:[{&quot;tasks&quot;:[{&quot;key&quot;:&quot;angularjs_feedster_0_0&quot;,&quot;text&quot;:&quot;Create a new module named \u003Ccode\u003EFeedsterApp\u003C/code\u003E, and then attach it to the \u003Ccode\u003E\u0026lt;body\u0026gt;\u003C/code\u003E element in the view.&quot;},{&quot;key&quot;:&quot;angularjs_feedster_0_1&quot;,&quot;text&quot;:&quot;In the controller, there is a property called \u003Ccode\u003E$scope.posts\u003C/code\u003E containing an array of objects with information about each post. Attach the controller to the \u003Ccode\u003E\u0026lt;div class=\&quot;posts\&quot;\u0026gt;\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_feedster_0_2&quot;,&quot;text&quot;:&quot;Create a directive named \u003Ccode\u003EfeedsterPost\u003C/code\u003E:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EMake a new file \u003Cstrong\u003Ejs/directives/feedsterPost.js\u003C/strong\u003E. In it, create a new directive named \u003Ccode\u003EfeedsterPost\u003C/code\u003E.\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003Escope\u003C/code\u003E to specify that we&#x27;ll pass information into this directive through an attribute named \u003Ccode\u003Epost\u003C/code\u003E\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003EtemplateUrl\u003C/code\u003E to tell this directive to use the \u003Cstrong\u003Ejs/directives/feedsterPost.html\u003C/strong\u003E file\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_feedster_0_3&quot;,&quot;text&quot;:&quot;Include this new JavaScript file in index.html as a \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_feedster_0_4&quot;,&quot;text&quot;:&quot;Next, write the directive&#x27;s template. In the file \u003Cstrong\u003Ejs/directives/feedsterPost.html\u003C/strong\u003E, finish the template so it displays a post&#x27;s details. Looking at the format of the data in \u003Ccode\u003E$scope.posts\u003C/code\u003E, display each post&#x27;s author name, author avatar, comment image, and comment text. Remember to use \u003Ccode\u003Eng-src\u003C/code\u003E to display images.&quot;},{&quot;key&quot;:&quot;angularjs_feedster_0_5&quot;,&quot;text&quot;:&quot;In the view inside the \u003Ccode\u003E.post\u003C/code\u003E div, use the \u003Ccode\u003E\u0026lt;feedster-post\u0026gt;\u003C/code\u003E directive to display the details of each post:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EOn the \u003Ccode\u003E.post\u003C/code\u003E div, use \u003Ccode\u003Eng-repeat\u003C/code\u003E to loop through \u003Ccode\u003Eposts\u003C/code\u003E.\u003C/li\u003E\n            \u003Cli\u003EPass each item into the \u003Ccode\u003E\u0026lt;feedster-post\u0026gt;\u003C/code\u003E directive&#x27;s \u003Ccode\u003Epost\u003C/code\u003E attribute.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_feedster_0_6&quot;,&quot;text&quot;:&quot;View the result by visiting http://localhost:8000 in the browser.&quot;},{&quot;key&quot;:&quot;angularjs_feedster_0_7&quot;,&quot;text&quot;:&quot;Create another directive named \u003Ccode\u003EplusOne\u003C/code\u003E:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EMake a new file \u003Cstrong\u003Ejs/directives/plusOne.js\u003C/strong\u003E. In it, create a new directive named \u003Ccode\u003EplusOne\u003C/code\u003E.\u003C/li\u003E\n            \u003Cli\u003ESet \u003Ccode\u003Escope\u003C/code\u003E to an empty object \u003Ccode\u003E{}}\u003C/code\u003E\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003EtemplateUrl\u003C/code\u003E to tell this directive to use the \u003Cstrong\u003Ejs/directives/plusOne.html\u003C/strong\u003E file\u003C/li\u003E\n            \u003Cli\u003EAdd a \u003Ccode\u003Elink\u003C/code\u003E option, and set it to this function named \u003Ccode\u003Elike()\u003C/code\u003E:\n              \u003Cpre\u003E\u003Ccode class=\&quot;lang-javascript\&quot;\u003Efunction(scope, element, attrs) {\n  scope.like = function() {\n    element.toggleClass(&#x27;btn-like&#x27;);\n  }\n}\u003C/code\u003E\u003C/pre\u003E\n              The \u003Ccode\u003Elike()\u003C/code\u003E function toggles the class \u003Ccode\u003Ebtn-like\u003C/code\u003E on the element.\n            \u003C/li\u003E\n          \n        \n\u003Cli\u003EInclude this new JavaScript file in index.html as a \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E element.\u003C/li\u003E\n        \n\u003Cli\u003EIn the directive&#x27;s template \u003Cstrong\u003Ejs/directives/plusOne.html\u003C/strong\u003E, use \u003Ccode\u003Eng-click\u003C/code\u003E to run the \u003Ccode\u003Elike()\u003C/code\u003E function when the \u003Ccode\u003E\u0026lt;button\u0026gt;\u003C/code\u003E is clicked.\u003C/li\u003E\n\u003Cli\u003EIn the view inside the \u003Ccode\u003E.post\u003C/code\u003E div, use the \u003Ccode\u003E\u0026lt;plus-one\u0026gt;\u003C/code\u003E directive to display a +1 button for each post. View the result in the browser.\u003C/li\u003E\n\u003C/ol\u003E     &quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs_feedster&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/directives/projects/angularjs_feedster.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_feedster&quot;,&quot;unit_slug&quot;:&quot;directives&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false},&quot;angularjs_outbox-1&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs_outbox-1&quot;,&quot;title&quot;:&quot;Outbox 1&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll build an email app.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/outbox-1.jpg&quot;,&quot;preview_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/4/outbox-1/index.html&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/angularjsoutbox-1&quot;,&quot;objective&quot;:&quot;Outbox is creating an AngularJS app for their email app. \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/outbox-1/index.html\&quot;\u003EHere&#x27;s what it looks like\u003C/a\u003E. The app displays a list of messages.&quot;,&quot;meta&quot;:{&quot;author&quot;:{&quot;fullname&quot;:&quot;Lalith Polepeddi&quot;,&quot;username&quot;:&quot;lpolepeddi&quot;}},&quot;self_assessments&quot;:[{&quot;tasks&quot;:[{&quot;key&quot;:&quot;angularjs_outbox-1_0_0&quot;,&quot;text&quot;:&quot;Create a new module named \u003Ccode\u003EOutboxApp\u003C/code\u003E, and then attach it to the \u003Ccode\u003E\u0026lt;body\u0026gt;\u003C/code\u003E element in the view.&quot;},{&quot;key&quot;:&quot;angularjs_outbox-1_0_1&quot;,&quot;text&quot;:&quot;Visit \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/emails-api/emails.json\&quot; target=\&quot;_blank\&quot;\u003Eemails.json\u003C/a\u003E. It&#x27;s a JSON object containing an array of emails. Let&#x27;s fetch this data and display it in the app.&quot;},{&quot;key&quot;:&quot;angularjs_outbox-1_0_2&quot;,&quot;text&quot;:&quot;Create a service named \u003Ccode\u003Eemails\u003C/code\u003E for getting this email data:\n\u003Col type=\&quot;a\&quot;\u003E\n\u003Cli\u003EMake a new folder named \u003Cstrong\u003Ejs/services\u003C/strong\u003E. In this folder, create a new file named \u003Cstrong\u003Ejs/services/emails.js\u003C/strong\u003E.\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003Eapp.factory\u003C/code\u003E to create a new service named \u003Ccode\u003Eemails\u003C/code\u003E.\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003E$http\u003C/code\u003E to get the email data from \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/emails-api/emails.json\&quot; target=\&quot;_blank\&quot;\u003Eemails.json\u003C/a\u003E.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_outbox-1_0_3&quot;,&quot;text&quot;:&quot;Include this new JavaScript file in the view as a new \u003Ccode\u003Escript\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_outbox-1_0_4&quot;,&quot;text&quot;:&quot;In the controller, use the \u003Ccode\u003Eemails\u003C/code\u003E service to fetch data from the server:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EFirst add \u003Ccode\u003Eemails\u003C/code\u003E into \u003Ccode\u003EHomeController\u003C/code\u003E as a dependency so that it&#x27;s available to use.\u003C/li\u003E\n            \u003Cli\u003EThen use \u003Ccode\u003Eemails\u003C/code\u003E within the controller to asynchronously fetch the email data from the server and store it into \u003Ccode\u003E$scope.emails\u003C/code\u003E.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_outbox-1_0_5&quot;,&quot;text&quot;:&quot;Attach the controller to the \u003Ccode\u003E\u0026lt;div class=\&quot;main\&quot;\u0026gt;\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_outbox-1_0_6&quot;,&quot;text&quot;:&quot;In the view, finish the code to display an email. Looking at the format of the data in \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/emails-api/emails.json\&quot; target=\&quot;_blank\&quot;\u003Eemails.json\u003C/a\u003E, display each email&#x27;s \u003Ccode\u003Efrom\u003C/code\u003E, \u003Ccode\u003Esubject\u003C/code\u003E, and \u003Ccode\u003Edatetime\u003C/code\u003E in their corresponding \u003Ccode\u003E\u0026lt;span\u0026gt;\u003C/code\u003E elements.&quot;},{&quot;key&quot;:&quot;angularjs_outbox-1_0_7&quot;,&quot;text&quot;:&quot;View the result by visiting http://localhost:8000 in the browser.&quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs_outbox-1&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/services/projects/angularjs_outbox-1.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_outbox-1&quot;,&quot;unit_slug&quot;:&quot;services&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false},&quot;angularjs_top-10&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs_top-10&quot;,&quot;title&quot;:&quot;Top 10&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll fetch movie data from the server and display it in a custom directive.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/top-10.jpg&quot;,&quot;preview_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/4/top-10/index.html&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/angularjstop-10&quot;,&quot;objective&quot;:&quot;Top 10 is creating an AngularJS app to chart popular TV shows. \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/top-10/index.html\&quot;\u003EHere&#x27;s what it looks like\u003C/a\u003E.\n\n&quot;,&quot;meta&quot;:{&quot;author&quot;:{&quot;fullname&quot;:&quot;Lalith Polepeddi&quot;,&quot;username&quot;:&quot;lpolepeddi&quot;}},&quot;self_assessments&quot;:[{&quot;tasks&quot;:[{&quot;key&quot;:&quot;angularjs_top-10_0_0&quot;,&quot;text&quot;:&quot;Create a new module named \u003Ccode\u003ETop10App\u003C/code\u003E, and then attach it to the \u003Ccode\u003E\u0026lt;body\u0026gt;\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_top-10_0_1&quot;,&quot;text&quot;:&quot;Visit \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/shows-api/shows.json\&quot; target=\&quot;_blank\&quot;\u003Eshows.json\u003C/a\u003E. It&#x27;s a JSON object containing an array of TV shows. Let&#x27;s fetch this data and display it in the app.&quot;},{&quot;key&quot;:&quot;angularjs_top-10_0_2&quot;,&quot;text&quot;:&quot;Create a service named \u003Ccode\u003Eshows\u003C/code\u003E for getting this data. In a file named \u003Cstrong\u003Ejs/services/shows.js\u003C/strong\u003E, create a new service named \u003Ccode\u003Eshows\u003C/code\u003E that gets data from the \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/shows-api/shows.json\&quot; target=\&quot;_blank\&quot;\u003Eshows API\u003C/a\u003E. Include this new JavaScript file in the view as a new \u003Ccode\u003Escript\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_top-10_0_3&quot;,&quot;text&quot;:&quot;In the controller, use the \u003Ccode\u003Eshows\u003C/code\u003E service to load data from the server into the \u003Ccode\u003E$scope.shows\u003C/code\u003E property. Then attach the controller to the \u003Ccode\u003E\u0026lt;div class=\&quot;main\&quot;\u0026gt;\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_top-10_0_4&quot;,&quot;text&quot;:&quot;Create a directive named \u003Ccode\u003EtvShow\u003C/code\u003E:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EMake a new file \u003Cstrong\u003Ejs/directives/tvShow.js\u003C/strong\u003E. In it, create the new directive named \u003Ccode\u003EtvShow\u003C/code\u003E.\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003Escope\u003C/code\u003E to specify that we&#x27;ll pass information into this directive through an attribute named \u003Ccode\u003Einfo\u003C/code\u003E.\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003EtemplateUrl\u003C/code\u003E to tell this directive to use the \u003Cstrong\u003Ejs/directives/tvShow.html\u003C/strong\u003E file.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_top-10_0_5&quot;,&quot;text&quot;:&quot;Include this new JavaScript file in the view as a \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_top-10_0_6&quot;,&quot;text&quot;:&quot;In the directive&#x27;s template \u003Cstrong\u003Ejs/directives/tvShow.html\u003C/strong\u003E, display each TV show&#x27;s details. Looking at the format of the data in the \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/shows-api/shows.json\&quot; target=\&quot;_blank\&quot;\u003Eshows API\u003C/a\u003E, display each show&#x27;s \u003Ccode\u003Eseries_img\u003C/code\u003E, \u003Ccode\u003Eseries\u003C/code\u003E, \u003Ccode\u003Egenre\u003C/code\u003E, \u003Ccode\u003Erun_start\u003C/code\u003E, and \u003Ccode\u003Edescription\u003C/code\u003E.&quot;},{&quot;key&quot;:&quot;angularjs_top-10_0_7&quot;,&quot;text&quot;:&quot;Finish the view display each item in the \u003Ccode\u003Eshows\u003C/code\u003E array. Under the \u003Ccode\u003E.rank\u003C/code\u003E div, use the \u003Ccode\u003E\u0026lt;tv-show\u0026gt;\u003C/code\u003E directive to display the details of each show. Pass in each show into the \u003Ccode\u003E\u0026lt;tv-show\u0026gt;\u003C/code\u003E directive&#x27;s \u003Ccode\u003Einfo\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_top-10_0_8&quot;,&quot;text&quot;:&quot;View the result by visiting http://localhost:8000 in the browser.&quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs_top-10&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/services/projects/angularjs_top-10.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_top-10&quot;,&quot;unit_slug&quot;:&quot;services&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false},&quot;angularjs_outbox-2&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs_outbox-2&quot;,&quot;title&quot;:&quot;Outbox 2&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll add to your email app by mapping URLs to views.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/outbox-2.jpg&quot;,&quot;preview_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/4/outbox-2/index.html#/outbox&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/angularjsoutbox-2&quot;,&quot;objective&quot;:&quot;Outbox is creating an AngularJS app for their email app. \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/outbox-2/index.html#/outbox\&quot;\u003EHere&#x27;s what it looks like\u003C/a\u003E. The app displays a list of messages. When you click on an email, it shows the entire message.&quot;,&quot;meta&quot;:{&quot;author&quot;:{&quot;fullname&quot;:&quot;Lalith Polepeddi&quot;,&quot;username&quot;:&quot;lpolepeddi&quot;}},&quot;self_assessments&quot;:[{&quot;tasks&quot;:[{&quot;key&quot;:&quot;angularjs_outbox-2_0_0&quot;,&quot;text&quot;:&quot;In the view in the \u003Ccode\u003E\u0026lt;head\u0026gt;\u003C/code\u003E element, include \u003Cstrong\u003Eangular-route.js\u003C/strong\u003E as a \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E element.\n\n```html\n\u003Cscript src=\&quot;https://code.angularjs.org/1.2.28/angular-route.min.js\&quot;\u003E\u003C/script\u003E\n```\n  \nYou need to include this additional JavaScript file in order to add routing to your app because it does not come with the AngularJS library by default.&quot;},{&quot;key&quot;:&quot;angularjs_outbox-2_0_1&quot;,&quot;text&quot;:&quot;In \u003Cstrong\u003Eapp.js\u003C/strong\u003E, define the app&#x27;s routes:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EUse \u003Ccode\u003Eapp.config()\u003C/code\u003E and \u003Ccode\u003E$routeProvider\u003C/code\u003E to set up the routes.\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003E.when()\u003C/code\u003E to map the URL \u003Ccode\u003E/outbox\u003C/code\u003E to the controller \u003Ccode\u003EHomeController\u003C/code\u003E and the template \u003Cstrong\u003Eviews/home.html\u003C/strong\u003E.\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003E.when()\u003C/code\u003E to map the URL \u003Ccode\u003E/outbox/:id\u003C/code\u003E to the controller \u003Ccode\u003EEmailController\u003C/code\u003E and the template \u003Cstrong\u003Eviews/email.html\u003C/strong\u003E.\u003C/li\u003E\n            \u003Cli\u003EOtherwise if a user accidentally visits a URL other than the two above, use \u003Ccode\u003E.otherwise()\u003C/code\u003E to redirect to \u003Ccode\u003E/outbox\u003C/code\u003E.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_outbox-2_0_2&quot;,&quot;text&quot;:&quot;In the view in the main section, add \u003Ccode\u003E\u0026lt;div ng-view\u0026gt;\u0026lt;/div\u0026gt;\u003C/code\u003E.&quot;},{&quot;key&quot;:&quot;angularjs_outbox-2_0_3&quot;,&quot;text&quot;:&quot;View the result by visiting http://localhost:8000 in the browser:\n          \u003Cul\u003E\n            \u003Cli\u003EWhen you visit \u003Ccode\u003E/outbox\u003C/code\u003E, a view is constructed by injecting \u003Cstrong\u003Eviews/home.html\u003C/strong\u003E into the \u003Ccode\u003E\u0026lt;div ng-view\u0026gt;\u0026lt;/div\u0026gt;\u003C/code\u003E in \u003Cstrong\u003Eindex.html\u003C/strong\u003E.\u003C/li\u003E\n            \u003Cli\u003ELikewise, when you click on an email, a view is constructed by injecting \u003Cstrong\u003Eviews/email.html\u003C/strong\u003E into \u003Ccode\u003E\u0026lt;div ng-view\u0026gt;\u0026lt;/div\u0026gt;\u003C/code\u003E.\u003C/li\u003E\n          \u003C/ul\u003E\n        \u003C/li\u003E&quot;},{&quot;key&quot;:&quot;angularjs_outbox-2_0_4&quot;,&quot;text&quot;:&quot;In the view, finish the code to display an email. Looking at the format of the data in the \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/emails-api/emails.json\&quot; target=\&quot;_blank\&quot;\u003Eemail API\u003C/a\u003E, display an email&#x27;s \u003Ccode\u003Esubject\u003C/code\u003E, \u003Ccode\u003Efrom\u003C/code\u003E, \u003Ccode\u003Edatetime\u003C/code\u003E, and \u003Ccode\u003Emessage\u003C/code\u003E. View the result in the browser.&quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs_outbox-2&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/routing/projects/angularjs_outbox-2.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_outbox-2&quot;,&quot;unit_slug&quot;:&quot;routing&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false},&quot;angularjs_calendar&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs_calendar&quot;,&quot;title&quot;:&quot;Calendar&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll create a calendar app with routes for each view.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/calendar.jpg&quot;,&quot;preview_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/4/calendar/index.html#/&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/angularjscalendar&quot;,&quot;objective&quot;:&quot;Calendar is creating an AngularJS app for their calendar service. \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/calendar/index.html#/\&quot;\u003EHere&#x27;s what it looks like\u003C/a\u003E. The app displays a list of events in a single day. When you click on an event, it shows its details.&quot;,&quot;meta&quot;:{&quot;author&quot;:{&quot;fullname&quot;:&quot;Lalith Polepeddi&quot;,&quot;username&quot;:&quot;lpolepeddi&quot;}},&quot;self_assessments&quot;:[{&quot;tasks&quot;:[{&quot;key&quot;:&quot;angularjs_calendar_0_0&quot;,&quot;text&quot;:&quot;In the view inside the \u003Ccode\u003E\u0026lt;head\u0026gt;\u003C/code\u003E element, include \u003Ca href=\&quot;https://code.angularjs.org/1.2.28/angular-route.min.js\&quot; target=\&quot;_blank\&quot;\u003Eangular-route.js\u003C/a\u003E as a new \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_calendar_0_1&quot;,&quot;text&quot;:&quot;In \u003Cstrong\u003Eapp.js\u003C/strong\u003E, inject \u003Ccode\u003EngRoute\u003C/code\u003E into the module&#x27;s dependency array so that routing is available for the app to use.&quot;},{&quot;key&quot;:&quot;angularjs_calendar_0_2&quot;,&quot;text&quot;:&quot;In \u003Cstrong\u003Eapp.js\u003C/strong\u003E, define the app&#x27;s routes:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EUse \u003Ccode\u003Eapp.config()\u003C/code\u003E and \u003Ccode\u003E$routeProvider\u003C/code\u003E to set up the routes.\u003C/li\u003E\n            \u003Cli\u003EMap the URL \u003Ccode\u003E/\u003C/code\u003E to the controller \u003Ccode\u003EDayController\u003C/code\u003E and the template \u003Cstrong\u003Eviews/day.html\u003C/strong\u003E. We&#x27;ll write these next.\u003C/li\u003E\n            \u003Cli\u003EOtherwise, redirect to \u003Ccode\u003E/\u003C/code\u003E\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_calendar_0_3&quot;,&quot;text&quot;:&quot;Create a service to get event data and display it in the app:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EVisit \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/events-api/events.json\&quot; target=\&quot;_blank\&quot;\u003Eevents.json\u003C/a\u003E. It&#x27;s a JSON object containing a \u003Ccode\u003Edate\u003C/code\u003E and an an array of \u003Ccode\u003Eevents\u003C/code\u003E. Let&#x27;s fetch this data and display it in the app.\u003C/li\u003E\n            \u003Cli\u003ECreate a service named \u003Ccode\u003Eevents\u003C/code\u003E for getting this data. In a file named \u003Cstrong\u003Ejs/services/events.js\u003C/strong\u003E, create a new service named \u003Ccode\u003Eevents\u003C/code\u003E that gets data from the \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/events-api/events.json\&quot; target=\&quot;_blank\&quot;\u003Eevents API\u003C/a\u003E. Include this new JavaScript file in the view as a new \u003Ccode\u003Escript\u003C/code\u003E element.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_calendar_0_4&quot;,&quot;text&quot;:&quot;Set up the controller \u003Ccode\u003EDayController\u003C/code\u003E and the template \u003Cstrong\u003Eviews/day.html\u003C/strong\u003E:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EIn the controller \u003Ccode\u003EDayController\u003C/code\u003E, use the \u003Ccode\u003Eevents\u003C/code\u003E service to load data from the server into the \u003Ccode\u003E$scope.day\u003C/code\u003E property.\u003C/li\u003E\n            \u003Cli\u003EFinish the template \u003Cstrong\u003Eviews/day.html\u003C/strong\u003E. Follow the comment on line 1 and use the \u003Ccode\u003Edate\u003C/code\u003E filter to format a day&#x27;s \u003Ccode\u003Edate\u003C/code\u003E. Then, follow the comment in line 5 to loop through and display each event.\n            \u003Cbr\u003E\n            Check out \u003Ca href=\&quot;http://www.ng-newsletter.com/posts/beginner2expert-config.html\&quot;\u003Ethis page\u003C/a\u003E and scroll down to the \&quot;date\&quot; section for examples of how to use the \u003Ccode\u003Edate\u003C/code\u003E filter.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_calendar_0_5&quot;,&quot;text&quot;:&quot;In the view in the main section, add \u003Ccode\u003E\u0026lt;div ng-view\u0026gt;\u0026lt;/div\u0026gt;\u003C/code\u003E.&quot;},{&quot;key&quot;:&quot;angularjs_calendar_0_6&quot;,&quot;text&quot;:&quot;View the result by visiting http://localhost:8000 in the browser. When you visit \u003Ccode\u003E/\u003C/code\u003E, a view is constructed by injecting \u003Cstrong\u003Eviews/day.html\u003C/strong\u003E into the \u003Ccode\u003E\u0026lt;div ng-view\u0026gt;\u0026lt;/div\u0026gt;\u003C/code\u003E in \u003Cstrong\u003Eindex.html\u003C/strong\u003E.&quot;},{&quot;key&quot;:&quot;angularjs_calendar_0_7&quot;,&quot;text&quot;:&quot;When a user clicks on an event, she should be able to view more information about that event. Let&#x27;s set this up next, following the same sequence of steps from above:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EIn \u003Cstrong\u003Eapp.js\u003C/strong\u003E, add another route. Map the URL \u003Ccode\u003E/:id\u003C/code\u003E to the controller \u003Ccode\u003EEventController\u003C/code\u003E and the template \u003Cstrong\u003Eviews/event.html\u003C/strong\u003E.\u003C/li\u003E\n            \u003Cli\u003EIn the controller \u003Ccode\u003EEventController\u003C/code\u003E, use the \u003Ccode\u003Eevents\u003C/code\u003E service to load a single event into the \u003Ccode\u003E$scope.event\u003C/code\u003E property. Use \u003Ccode\u003E$routeParams.id\u003C/code\u003E to access a specific event by its index.\u003C/li\u003E\n            \u003Cli\u003EFinish the template in \u003Cstrong\u003Eviews/event.html\u003C/strong\u003E to display an event. Looking at the format of the data in the \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/events-api/events.json\&quot; target=\&quot;_blank\&quot;\u003Eevents API\u003C/a\u003E, display an event&#x27;s \u003Ccode\u003Ename\u003C/code\u003E, \u003Ccode\u003Efrom\u003C/code\u003E, \u003Ccode\u003Eto\u003C/code\u003E, and \u003Ccode\u003Ewhere\u003C/code\u003E.\u003C/li\u003E\n            \u003Cli\u003EView the result in the browser. When you click on an event, a view is constructed by injecting \u003Cstrong\u003Eviews/event.html\u003C/strong\u003E into the \u003Ccode\u003E\u0026lt;div ng-view\u0026gt;\u0026lt;/div\u0026gt;\u003C/code\u003E in \u003Cstrong\u003Eindex.html\u003C/strong\u003E.\u003C/li\u003E\n          \u003C/ol\u003E&quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs_calendar&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/routing/projects/angularjs_calendar.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_calendar&quot;,&quot;unit_slug&quot;:&quot;routing&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false},&quot;angularjs_reader&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs_reader&quot;,&quot;title&quot;:&quot;Reader&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll create an e-reader app.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/reader.jpg&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/angularjsreader&quot;,&quot;preview_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/4/reader/index.html#/books&quot;,&quot;objective&quot;:&quot;Reader is creating an AngularJS app for their e-reader service. \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/reader/index.html#/books\&quot;\u003EHere&#x27;s what it looks like\u003C/a\u003E.\n* The app displays a list of books on the home page.\n* When you click on a book, it takes you to the book&#x27;s description.\n* When you click the Read button, it takes you to the book&#x27;s first chapter. From there, you can use the Forward and Back buttons to read the book.&quot;,&quot;meta&quot;:{&quot;author&quot;:{&quot;fullname&quot;:&quot;Lalith Polepeddi&quot;,&quot;username&quot;:&quot;lpolepeddi&quot;}},&quot;self_assessments&quot;:[{&quot;tasks&quot;:[{&quot;key&quot;:&quot;angularjs_reader_0_0&quot;,&quot;text&quot;:&quot;In the view inside the \u003Ccode\u003E\u0026lt;head\u0026gt;\u003C/code\u003E element, include \u003Ca href=\&quot;https://code.angularjs.org/1.2.28/angular-route.min.js\&quot; target=\&quot;_blank\&quot;\u003Eangular-route.js\u003C/a\u003E as a new \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_reader_0_1&quot;,&quot;text&quot;:&quot;In \u003Cstrong\u003Eapp.js\u003C/strong\u003E, inject \u003Ccode\u003EngRoute\u003C/code\u003E into the module&#x27;s dependency array so that routing is available for the app to use.&quot;},{&quot;key&quot;:&quot;angularjs_reader_0_3&quot;,&quot;text&quot;:&quot;In \u003Cstrong\u003Eapp.js\u003C/strong\u003E, define the app&#x27;s routes:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EUse \u003Ccode\u003Eapp.config()\u003C/code\u003E and \u003Ccode\u003E$routeProvider\u003C/code\u003E to set up the routes.\u003C/li\u003E\n            \u003Cli\u003EMap the URL \u003Ccode\u003E/books\u003C/code\u003E to the controller \u003Ccode\u003EBookshelfController\u003C/code\u003E and the template \u003Cstrong\u003Eviews/bookshelf.html\u003C/strong\u003E.\u003C/li\u003E\n            \u003Cli\u003EOtherwise, redirect to \u003Ccode\u003E/books\u003C/code\u003E.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_reader_0_4&quot;,&quot;text&quot;:&quot;Create a service named \u003Ccode\u003Ebooks\u003C/code\u003E for getting data from the \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/courses/ltp4/books-api/books.json\&quot; target=\&quot;_blank\&quot;\u003Ebooks API\u003C/a\u003E. Create the service in a new file named \u003Cstrong\u003Ejs/services/books.js\u003C/strong\u003E. Include this new JavaScript file in the view as a \u003Ccode\u003Escript\u003C/code\u003E element.\n          \u003Cul\u003E\n            \u003Cli\u003EThe books API is a JSON object containing an array of books. Here&#x27;s how a single book is represented in this array:\n            \u003Cpre\u003E\u003Ccode class=\&quot;lang-javascript\&quot;\u003E{\n  \&quot;title\&quot;: \&quot;Metamorphosis\&quot;,\n  \&quot;cover\&quot;: \&quot;img/metamorphosis.jpg\&quot;,\n  \&quot;author\&quot;: \&quot;Franz Kafka\&quot;,\n  \&quot;description\&quot;: \&quot;Gregor Samsa turns into a large insect-like creature.\&quot;,\n  \&quot;chapters\&quot;: [\n    {\n      \&quot;title\&quot;: \&quot;I\&quot;,\n      \&quot;paragraphs\&quot;: [\&quot;paragraph 1\&quot;, \&quot;paragraph 2\&quot;]\n    },\n    {\n      \&quot;title\&quot;: \&quot;II\&quot;,\n      \&quot;paragraphs\&quot;: [\&quot;paragraph 1\&quot;, \&quot;paragraph 2\&quot;, \&quot;paragraph 3\&quot;, \&quot;paragraph 4\&quot;]\n    },\n    {\n      \&quot;title\&quot;: \&quot;III\&quot;,\n      \&quot;paragraphs\&quot;: [\&quot;paragraph 1\&quot;, \&quot;paragraph 2\&quot;, \&quot;paragraph 3\&quot;]\n    }\n  ]\n}\u003C/code\u003E\u003C/pre\u003E\n              \u003Cp\u003EEach book has a \u003Ccode\u003Etitle\u003C/code\u003E, \u003Ccode\u003Ecover\u003C/code\u003E, \u003Ccode\u003Eauthor\u003C/code\u003E, \u003Ccode\u003Edescription\u003C/code\u003E, and array of \u003Ccode\u003Echapters\u003C/code\u003E. Each chapter has a \u003Ccode\u003Etitle\u003C/code\u003E and array of \u003Ccode\u003Eparagraphs\u003C/code\u003E.\u003C/p\u003E\n            \u003C/li\u003E\n          \u003C/ul\u003E&quot;},{&quot;key&quot;:&quot;angularjs_reader_0_5&quot;,&quot;text&quot;:&quot;Set up the controller \u003Ccode\u003EBookshelfController\u003C/code\u003E and the template \u003Cstrong\u003Eviews/bookshelf.html\u003C/strong\u003E:\n          \u003Col type=\&quot;a\&quot;\u003E\n             \u003Cli\u003EIn the controller \u003Ccode\u003EBookshelfController\u003C/code\u003E, use the \u003Ccode\u003Ebooks\u003C/code\u003E service to load data from the server into the \u003Ccode\u003E$scope.myBooks\u003C/code\u003E.\u003C/li\u003E\n             \u003Cli\u003EFinish the template \u003Cstrong\u003Eviews/bookshelf.html\u003C/strong\u003E so that it displays each book.\u003Cbr\u003E\n              Notice in \u003Cstrong\u003Eviews/bookshelf.html\u003C/strong\u003E, we&#x27;re using \u003Ccode\u003E\u0026lt;a href=\&quot;#/books/{{ $index }}\&quot;\u0026gt;\u003C/code\u003E to create a URL for each book. The \u003Ccode\u003E$index\u003C/code\u003E gives the index of a book in the \u003Ccode\u003EmyBooks\u003C/code\u003E array. This means the URL of the first book is \u003Ccode\u003E#/books/0\u003C/code\u003E, the URL of the second book is \u003Ccode\u003E#/books/1\u003C/code\u003E, and so forth.\n             \u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_reader_0_6&quot;,&quot;text&quot;:&quot;In the view in the main section, add \u003Ccode\u003E\u0026lt;div ng-view\u0026gt;\u0026lt;/div\u0026gt;\u003C/code\u003E.&quot;},{&quot;key&quot;:&quot;angularjs_reader_0_7&quot;,&quot;text&quot;:&quot;View the result by visiting http://localhost:8000 in the browser. When you visit \u003Ccode\u003E/books\u003C/code\u003E, a view is constructed by injecting \u003Cstrong\u003Eviews/bookshelf.html\u003C/strong\u003E into the \u003Ccode\u003E\u0026lt;div ng-view\u0026gt;\u0026lt;/div\u0026gt;\u003C/code\u003E in \u003Cstrong\u003Eindex.html\u003C/strong\u003E.\u003C/li\u003E&quot;},{&quot;key&quot;:&quot;angularjs_reader_0_8&quot;,&quot;text&quot;:&quot;When a user clicks on a book, she should go to the book&#x27;s description. Let&#x27;s set this up next, following the same sequence of steps from above:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EIn \u003Cstrong\u003Eapp.js\u003C/strong\u003E, add another route. Map the URL \u003Ccode\u003E/books/:bookId\u003C/code\u003E to the controller \u003Ccode\u003EBookController\u003C/code\u003E and the template \u003Cstrong\u003Eviews/book.html\u003C/strong\u003E.\u003C/li\u003E\n            \u003Cli\u003EIn \u003Ccode\u003EBookController\u003C/code\u003E, use the \u003Ccode\u003Ebooks\u003C/code\u003E service to load a single book into the \u003Ccode\u003E$scope.book\u003C/code\u003E property. To do this, use the \u003Ccode\u003Ebooks\u003C/code\u003E service to fetch an array of books from the server, and then use \u003Ccode\u003E$routeParams.bookId\u003C/code\u003E to access the specific book by its index. Store the specific book into \u003Ccode\u003E$scope.book\u003C/code\u003E.\n              \u003Cul\u003E\n                \u003Cli\u003ERemember we can use Angular&#x27;s \u003Ccode\u003E$routeParams\u003C/code\u003E to retrieve \u003Ccode\u003EbookId\u003C/code\u003E from the URL by using \u003Ccode\u003E$routeParams.bookId\u003C/code\u003E.\u003C/li\u003E\n              \u003C/ul\u003E\n            \u003C/li\u003E\n            \u003Cli\u003EFinish the template in \u003Cstrong\u003Eviews/book.html\u003C/strong\u003E to display a book&#x27;s description. Looking at the format of the data in books API given above, display a book&#x27;s cover, title, author, and description.\u003C/li\u003E\n            \u003Cli\u003EView the result in the browser. When you click on a book, a view is constructed by injecting \u003Cstrong\u003Eviews/book.html\u003C/strong\u003E into the \u003Ccode\u003E\u0026lt;div ng-view\u0026gt;\u0026lt;/div\u0026gt;\u003C/code\u003E in \u003Cstrong\u003Eindex.html\u003C/strong\u003E.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_reader_0_9&quot;,&quot;text&quot;:&quot;When a user clicks on the Read button, she should go to the book&#x27;s first chapter. From there, she can use the Next and Back buttons to read the book. Let&#x27;s set this up next, following the same sequence of steps from above:\n\u003Col type=\&quot;a\&quot;\u003E\n  \u003Cli\u003EIn \u003Cstrong\u003Eapp.js\u003C/strong\u003E, add another route. Map the URL \u003Ccode\u003E/books/:bookId/chapters/:chapterId\u003C/code\u003E to the controller \u003Ccode\u003EChapterController\u003C/code\u003E and the template \u003Cstrong\u003Eviews/chapter.html\u003C/strong\u003E.\u003C/li\u003E\n  \u003Cli\u003EIn \u003Ccode\u003EChapterController\u003C/code\u003E, use the \u003Ccode\u003Ebooks\u003C/code\u003E service to load a single chapter into the \u003Ccode\u003E$scope.chapter\u003C/code\u003E property. To do this, in line 4 first get a specific book from the books API by using its index, just as you did in \u003Ccode\u003EBookController\u003C/code\u003E. Store the specific book into \u003Ccode\u003E$scope.book\u003C/code\u003E.\u003C/li\u003E\n  \u003Cli\u003EUnder it, access the array of chapters inside \u003Ccode\u003E$scope.book\u003C/code\u003E, and get a specific chapter in the array by using its index \u003Ccode\u003E$routeParams.chapterId\u003C/code\u003E. Store the specific chapter into \u003Ccode\u003E$scope.chapter\u003C/code\u003E.\u003C/li\u003E\n  \u003Cli\u003EFinish the template in \u003Cstrong\u003Eviews/chapter.html\u003C/strong\u003E to display a chapter. Looking at the format of the data in books API given above, display the book title, book author, chapter title, and chapter paragraphs.\u003C/li\u003E\n  \u003Cli\u003EView the result in the browser. When you click on the Read button, a view is constructed by injecting \u003Cstrong\u003Eviews/chapter.html\u003C/strong\u003E into the \u003Ccode\u003E\u0026lt;div ng-view\u0026gt;\u0026lt;/div\u0026gt;\u003C/code\u003E in \u003Cstrong\u003Eindex.html\u003C/strong\u003E. When you click on the Next and Back buttons, you navigate from chapter to chapter.\u003C/li\u003E\n\u003C/ol\u003E&quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs_reader&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;},&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/routing/projects/angularjs_reader.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_reader&quot;,&quot;unit_slug&quot;:&quot;routing&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false},&quot;angularjs_nearme-1&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs_nearme-1&quot;,&quot;title&quot;:&quot;NearMe 1&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll build a location-based service using a third-party custom directive.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/near-me-1.jpg&quot;,&quot;preview_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/4/nearme-1/index.html&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/angularjsnearme-1&quot;,&quot;objective&quot;:&quot;NearMe is creating an AngularJS app for their location-based service service. \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/nearme-1/index.html\&quot;\u003EHere&#x27;s what it looks like\u003C/a\u003E. The app displays places of interest on a map. When you click on a map marker, a popup with a message displays.&quot;,&quot;meta&quot;:{&quot;author&quot;:{&quot;fullname&quot;:&quot;Lalith Polepeddi&quot;,&quot;username&quot;:&quot;lpolepeddi&quot;}},&quot;self_assessments&quot;:[{&quot;tasks&quot;:[{&quot;key&quot;:&quot;angularjs_nearme-1_0_0&quot;,&quot;text&quot;:&quot;Include the AngularJS library in your project. We&#x27;ve downloaded the AngularJS library to \u003Cstrong\u003Ejs/vendor/angular.min.js\u003C/strong\u003E. Include this file as a new \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E element inside the \u003Ccode\u003E\u0026lt;head\u0026gt;\u003C/code\u003E of \u003Cstrong\u003Eindex.html\u003C/strong\u003E.&quot;},{&quot;key&quot;:&quot;angularjs_nearme-1_0_1&quot;,&quot;text&quot;:&quot;In \u003Cstrong\u003Ejs/app.js\u003C/strong\u003E, create a new module named \u003Ccode\u003ENearMeApp\u003C/code\u003E. Include it as a new  \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E element, and then attach it to the \u003Ccode\u003E\u0026lt;body\u0026gt;\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_nearme-1_0_2&quot;,&quot;text&quot;:&quot;In \u003Cstrong\u003Ejs/controllers/MainController.js\u003C/strong\u003E, create a new controller named \u003Ccode\u003EMainController\u003C/code\u003E. Include it as a new  \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E element, and then attach it to the \u003Ccode\u003E\u0026lt;div class=\&quot;main\&quot;\u0026gt;\u003C/code\u003E element.&quot;},{&quot;key&quot;:&quot;angularjs_nearme-1_0_3&quot;,&quot;text&quot;:&quot;So far, you&#x27;ve been writing your own custom directives. Developers in the AngularJS community have been creating and sharing their own directives for others to use. A popular directive is the \u003Ca href=\&quot;http://tombatossals.github.io/angular-leaflet-directive/#!/\&quot; target=\&quot;_blank\&quot;\u003Eleaflet directive\u003C/a\u003E, which allows you to embed a map in your AngularJS app. Let&#x27;s use it here in the NearMe app:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003ECreate a new file \u003Cstrong\u003Ejs/vendor/leaflet.js\u003C/strong\u003E. Copy all the code from the \u003Ca target=\&quot;_blank\&quot; href=\&quot;http://cdn.leafletjs.com/leaflet-0.7.1/leaflet.js\&quot;\u003ELeaflet JavaScript file\u003C/a\u003E and paste it into your \u003Cstrong\u003Ejs/vendor/leaflet.js\u003C/strong\u003E. Then include \u003Cstrong\u003Ejs/vendor/leaflet.js\u003C/strong\u003E as a new \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E.\u003C/li\u003E\n            \u003Cli\u003ECreate a new file \u003Cstrong\u003Ejs/vendor/angular-leaflet-directive.min.js\u003C/strong\u003E. Copy all the code from the \u003Ca target=\&quot;_blank\&quot; href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/nearme-1/js/vendor/angular-leaflet-directive.min.js\&quot;\u003ELeaflet directive\u003C/a\u003E and paste it into your \u003Cstrong\u003Ejs/vendor/angular-leaflet-directive.min.js\u003C/strong\u003E. Then include \u003Cstrong\u003Ejs/vendor/angular-leaflet-directive.min.js\u003C/strong\u003E as a new \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E.\u003C/li\u003E\n            \u003Cli\u003ECreate a new file \u003Cstrong\u003Ecss/leaflet.css\u003C/strong\u003E. Copy all the code from the \u003Ca target=\&quot;_blank\&quot; href=\&quot;http://cdn.leafletjs.com/leaflet-0.7.1/leaflet.css\&quot;\u003ELeaflet CSS file\u003C/a\u003E and paste it into your \u003Cstrong\u003Ecss/leaflet.css\u003C/strong\u003E. Then include \u003Cstrong\u003Ecss/leaflet.css\u003C/strong\u003E as a new \u003Ccode\u003E\u0026lt;link\u0026gt;\u003C/code\u003E element inside the \u003Ccode\u003E\u0026lt;head\u0026gt;\u003C/code\u003E of \u003Cstrong\u003Eindex.html\u003C/strong\u003E.\u003C/li\u003E\n            \u003Cli\u003EIn the module, inject \u003Ccode\u003Eleaflet-directive\u003C/code\u003E into the dependency array so that the leaflet directive is available for the app to use.\u003C/li\u003E\n            \u003Cli\u003EIn the view, use the \u003Ccode\u003E\u0026lt;leaflet\u0026gt;\u003C/code\u003E directive to display a map.\u003C/li\u003E\n          \u003C/ol\u003E\n        &quot;},{&quot;key&quot;:&quot;angularjs_nearme-1_0_4&quot;,&quot;text&quot;:&quot;View the result by visiting http://localhost:8000 in the browser.&quot;},{&quot;key&quot;:&quot;angularjs_nearme-1_0_5&quot;,&quot;text&quot;:&quot;The \u003Ccode\u003E\u0026lt;leaflet\u0026gt;\u003C/code\u003E directive can take information about the map&#x27;s position through the \u003Ccode\u003Ecenter\u003C/code\u003E attribute:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EIn the controller, make a new property called \u003Ccode\u003E$scope.mapCenter\u003C/code\u003E, and set it equal to the following object:\n              \u003Cpre\u003E\u003Ccode class=\&quot;lang-javascript\&quot;\u003E{\n  lat: 40.741934,\n  lng: -74.004897,\n  zoom: 17\n}\u003C/code\u003E\u003C/pre\u003E\n            \u003C/li\u003E\n            \u003Cli\u003EIn the view, pass \u003Ccode\u003EmapCenter\u003C/code\u003E into the directive&#x27;s \u003Ccode\u003Ecenter\u003C/code\u003E attribute.\u003C/li\u003E\n            \u003Cli\u003EView the result in the browser. The map is now centered around the latitude and longitude 40.741934, -74.004897.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_nearme-1_0_6&quot;,&quot;text&quot;:&quot;\u003Ccode\u003E\u0026lt;leaflet\u0026gt;\u003C/code\u003E directive can take information about the map&#x27;s markers through the \u003Ccode\u003Emarkers\u003C/code\u003E attribute:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EIn the controller, make a new property called \u003Ccode\u003E$scope.mapMarkers\u003C/code\u003E, and set it equal to the following array:\n              \u003Cpre\u003E\u003Ccode class=\&quot;lang-javascript\&quot;\u003E[\n  {\n    lat: 40.741389,\n    lng: -74.003056,\n    message: \&quot;111 Eighth Avenue\&quot;\n  },\n  {\n    lat: 40.7425,\n    lng: -74.006111,\n    message: \&quot;Chelsea Market\&quot;\n  }\n]\u003C/code\u003E\u003C/pre\u003E\n            \u003C/li\u003E\n            \u003Cli\u003EIn the view, pass \u003Ccode\u003EmapMarkers\u003C/code\u003E into the directive&#x27;s \u003Ccode\u003Emarkers\u003C/code\u003E attribute.\u003C/li\u003E\n            \u003Cli\u003EView the result in the browser. The map has two markers that you can click on.\u003C/li\u003E\n          \u003C/ol\u003E&quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs_nearme&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/angularjs_piat/projects/angularjs_nearme-1.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_nearme-1&quot;,&quot;unit_slug&quot;:&quot;angularjs_piat&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false},&quot;angularjs_nearme-2&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs_nearme-2&quot;,&quot;title&quot;:&quot;NearMe 2&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll fetch data from the Wikipedia API and display it in your map.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/near-me-2.jpg&quot;,&quot;preview_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/4/nearme-2/index.html&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/angularjsnearme-2&quot;,&quot;objective&quot;:&quot;NearMe is creating an AngularJS app for their location-based service service. \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/nearme-2/index.html\&quot;\u003EHere&#x27;s what it looks like\u003C/a\u003E. The app displays places of interest on a map. When you click on a map marker, a popup with a message displays.&quot;,&quot;meta&quot;:{&quot;author&quot;:{&quot;fullname&quot;:&quot;Lalith Polepeddi&quot;,&quot;username&quot;:&quot;lpolepeddi&quot;}},&quot;self_assessments&quot;:[{&quot;tasks&quot;:[{&quot;key&quot;:&quot;angularjs_nearme-2_0_0&quot;,&quot;text&quot;:&quot;Rather than hardcode the map markers in the controller, let&#x27;s write a service to fetch them from a real API:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EWikipedia has added latitude/longtiude coordinates to several of their articles about places and landmarks. The \u003Ca target=\&quot;_blank\&quot; href=\&quot;https://en.wikipedia.org/w/api.php?action=query\u0026amp;list=geosearch\u0026amp;gsradius=5000\u0026amp;gscoord=40.741934%7C-74.004897\u0026amp;gslimit=30\&quot;\u003EWikipedia Geodata API\u003C/a\u003E returns a JSON object containing an array of Wikipedia articles near a given point, in this case the latitude and longitude 40.741934, -74.004897.\u003C/li\u003E\n            \u003Cli\u003EIn \u003Cstrong\u003Ejs/services/places.js\u003C/strong\u003E, create a new service named \u003Ccode\u003Eplaces\u003C/code\u003E.\u003C/li\u003E\n            \u003Cli\u003EUse \u003Ccode\u003E$http\u003C/code\u003E to get places data from \u003Ca href=\&quot;https://en.wikipedia.org/w/api.php?action=query\u0026amp;list=geosearch\u0026amp;gsradius=5000\u0026amp;gscoord=40.741934%7C-74.004897\u0026amp;gslimit=30\u0026amp;format=json\u0026amp;callback=JSON_CALLBACK\&quot;\u003Ehttps://en.wikipedia.org/w/api.php?action=query\u0026amp;list=geosearch\u0026amp;gsradius=5000\u0026amp;gscoord=40.741934%7C-74.004897\u0026amp;gslimit=30\u0026amp;format=json\u0026amp;callback=JSON_CALLBACK\u003C/a\u003E. Use \u003Ccode\u003E$http.jsonp\u003C/code\u003E instead of \u003Ccode\u003E$http.get\u003C/code\u003E.\u003C/li\u003E\n            \u003Cli\u003EInclude the service as a \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E element.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_nearme-2_0_1&quot;,&quot;text&quot;:&quot;In the controller, delete \u003Ccode\u003E$scope.mapMarkers\u003C/code\u003E.&quot;},{&quot;key&quot;:&quot;angularjs_nearme-2_0_2&quot;,&quot;text&quot;:&quot;In its place, use the \u003Ccode\u003Eplaces\u003C/code\u003E service to fetch marker data from the Wikipedia API:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003ECreate a new file \u003Cstrong\u003Ejs/vendor/helpers.js\u003C/strong\u003E. Copy all the code from \u003Ca target=\&quot;_blank\&quot; href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/nearme-2/js/vendor/helpers.js\&quot;\u003Ethis JavaScript file\u003C/a\u003E and paste it into your \u003Cstrong\u003Ejs/vendor/helpers.js\u003C/strong\u003E. Then include it as as a new \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E. We&#x27;ll use the \u003Ccode\u003EgeodataToMarkers()\u003C/code\u003E function to format the Wikipedia API&#x27;s output so that we can use it in the map.\u003C/li\u003E\n            \u003Cli\u003EAdd \u003Ccode\u003Eplaces\u003C/code\u003E into \u003Ccode\u003EMainController\u003C/code\u003E as a dependency so that it&#x27;s available to use.\u003C/li\u003E\n            \u003Cli\u003EThen use \u003Ccode\u003Eplaces\u003C/code\u003E within the controller to asynchronously fetch the places data from the server, and store it into \u003Ccode\u003E$scope.geodata\u003C/code\u003E.\u003C/li\u003E\n            \u003Cli\u003EUse the\u003Ccode\u003EgeodataToMarkers()\u003C/code\u003E function to format \u003Ccode\u003E$scope.geodata\u003C/code\u003E, and store that output into \u003Ccode\u003E$scope.mapMarkers\u003C/code\u003E, like this:\n              \u003Cpre\u003E\u003Ccode class=\&quot;lang-javascript\&quot;\u003E$scope.mapMarkers = geodataToMarkers($scope.geodata);\u003C/code\u003E\u003C/pre\u003E\n            \u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_nearme-2_0_3&quot;,&quot;text&quot;:&quot;In the view, pass `mapMarkers` into the `\u0026lt;leaflet\u0026gt;` directive&#x27;s `markers` attribute.&quot;},{&quot;key&quot;:&quot;angularjs_nearme-2_0_4&quot;,&quot;text&quot;:&quot;View the result by visiting http://localhost:8000 in the browser. Wikipedia articles around the point 40.741934, -74.004897 now show up on the map. The \u003Ccode\u003EgeodataToMarkers()\u003C/code\u003E function added links inside each map marker&#x27;s popup that go to the corresponding Wikipedia article.&quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs_nearme&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/angularjs_piat/projects/angularjs_nearme-2.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_nearme-2&quot;,&quot;unit_slug&quot;:&quot;angularjs_piat&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false},&quot;angularjs_nearme-3&quot;:{&quot;node_type&quot;:&quot;project&quot;,&quot;locale&quot;:&quot;en&quot;,&quot;slug&quot;:&quot;angularjs_nearme-3&quot;,&quot;title&quot;:&quot;NearMe 3&quot;,&quot;description&quot;:&quot;In this project, you&#x27;ll map URLs to different views in your app using routing.&quot;,&quot;thumbnail_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/project_thumbnails/angularjs/near-me-3.jpg&quot;,&quot;qa_forum_url&quot;:&quot;https://www.codecademy.com/discourse_redirect/learn-angularjs/angularjsnearme-3&quot;,&quot;preview_url&quot;:&quot;https://s3.amazonaws.com/codecademy-content/projects/4/nearme-3/index.html&quot;,&quot;objective&quot;:&quot;NearMe is creating an AngularJS app for their location-based service service. \u003Ca href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/nearme-3/index.html\&quot;\u003EHere&#x27;s what it looks like\u003C/a\u003E. Now when you click on the About link at the top right, an page with more information about the app displays.&quot;,&quot;meta&quot;:{&quot;author&quot;:{&quot;fullname&quot;:&quot;Lalith Polepeddi&quot;,&quot;username&quot;:&quot;lpolepeddi&quot;}},&quot;self_assessments&quot;:[{&quot;tasks&quot;:[{&quot;key&quot;:&quot;angularjs_nearme-3_0_0&quot;,&quot;text&quot;:&quot;Include \u003Ca href=\&quot;https://code.angularjs.org/1.2.28/angular-route.min.js\&quot; target=\&quot;_blank\&quot;\u003Eangular-route.js\u003C/a\u003E as a new \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E element inside the \u003Ccode\u003E\u0026lt;head\u0026gt;\u003C/code\u003E of \u003Cstrong\u003Eindex.html\u003C/strong\u003E.&quot;},{&quot;key&quot;:&quot;angularjs_nearme-3_0_1&quot;,&quot;text&quot;:&quot;In \u003Cstrong\u003Eapp.js\u003C/strong\u003E, inject \u003Ccode\u003EngRoute\u003C/code\u003E into the module&#x27;s dependency array so that routing is available for the app to use.&quot;},{&quot;key&quot;:&quot;angularjs_nearme-3_0_2&quot;,&quot;text&quot;:&quot;In \u003Cstrong\u003Eapp.js\u003C/strong\u003E, define the app&#x27;s routes:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EUse \u003Ccode\u003Eapp.config()\u003C/code\u003E and \u003Ccode\u003E$routeProvider\u003C/code\u003E to set up the routes.\u003C/li\u003E\n            \u003Cli\u003EMap the URL \u003Ccode\u003E/\u003C/code\u003E to the controller \u003Ccode\u003EMainController\u003C/code\u003E and the template \u003Cstrong\u003Eviews/main.html\u003C/strong\u003E.\u003C/li\u003E\n            \u003Cli\u003EOtherwise, redirect to \u003Ccode\u003E/\u003C/code\u003E\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_nearme-3_0_3&quot;,&quot;text&quot;:&quot;Refactor the app to set up the controller \u003Ccode\u003EMainController\u003C/code\u003E and the template \u003Cstrong\u003Eviews/main.html\u003C/strong\u003E:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EMake a new file \u003Cstrong\u003Eviews/main.html\u003C/strong\u003E.\u003C/li\u003E\n            \u003Cli\u003ECut the \u003Ccode\u003E\u0026lt;div class=\&quot;main\&quot;\u0026lt;\u003C/code\u003E section from \u003Cstrong\u003Eindex.html\u003C/strong\u003E, and paste it into \u003Cstrong\u003Eviews/main.html\u003C/strong\u003E.\u003C/li\u003E\n            \u003Cli\u003EIn \u003Cstrong\u003Eindex.html\u003C/strong\u003E, replace the \u003Ccode\u003E\u0026lt;div class=\&quot;main\&quot;\u0026gt;\u003C/code\u003E with \u003Ccode\u003E\u0026lt;div ng-view\u0026gt;\u0026lt;/div\u0026gt;\u003C/code\u003E.\u003C/li\u003E\n            \u003Cli\u003EIn \u003Cstrong\u003Eviews/main.html\u003C/strong\u003E, remove the \u003Ccode\u003Eng-controller=\&quot;MainController\&quot;\u003C/code\u003E from \u003Ccode\u003E\u0026lt;div class=\&quot;main\&quot;\u0026gt;\u003C/code\u003E.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_nearme-3_0_4&quot;,&quot;text&quot;:&quot;View the result by visiting http://localhost:8000 in the browser. The app should be working just it did before refactoring.&quot;},{&quot;key&quot;:&quot;angularjs_nearme-3_0_5&quot;,&quot;text&quot;:&quot;In \u003Cstrong\u003Eindex.html\u003C/strong\u003E in the header section under the \u003Ccode\u003E\u0026lt;h1\u0026gt;\u003C/code\u003E, add a link to the About page, like this:\n          \u003Cpre\u003E\u003Ccode class=\&quot;lang-javascript\&quot;\u003E\u0026lt;a class=\&quot;pull-right\&quot; href=\&quot;#/about\&quot;\u0026gt;About\u0026lt;/a\u0026gt;\u003C/code\u003E\u003C/pre\u003E&quot;},{&quot;key&quot;:&quot;angularjs_nearme-3_0_6&quot;,&quot;text&quot;:&quot;When a user clicks on the About link, she should be able to view a new page with more information about the app. Let&#x27;s set this up next, following the same sequence of steps from above:\n          \u003Col type=\&quot;a\&quot;\u003E\n            \u003Cli\u003EIn \u003Cstrong\u003Eapp.js\u003C/strong\u003E, add another route. Map the URL \u003Ccode\u003E/about\u003C/code\u003E to the controller \u003Ccode\u003EAboutController\u003C/code\u003E and the template \u003Cstrong\u003Eviews/about.html\u003C/strong\u003E.\u003C/li\u003E\n            \u003Cli\u003EIn \u003Cstrong\u003Ejs/controllers/AboutController.js\u003C/strong\u003E, create a new controller named \u003Ccode\u003EAboutController\u003C/code\u003E. Include it as a new \u003Ccode\u003E\u0026lt;script\u0026gt;\u003C/code\u003E element.\u003C/li\u003E\n            \u003Cli\u003ECreate a template in \u003Cstrong\u003Eviews/about.html\u003C/strong\u003E to display an About page. \u003Ca target=\&quot;_blank\&quot; href=\&quot;https://s3.amazonaws.com/codecademy-content/projects/4/nearme-3/index.html#/about\&quot;\u003EHere&#x27;s what ours looks like\u003C/a\u003E. Write HTML in the template and CSS in \u003Cstrong\u003Ecss/main.css\u003C/strong\u003E to create an About page for the app.\u003C/li\u003E\n            \u003Cli\u003EAdd a link to the About page that says \&quot;Start exploring\&quot;. Set the \u003Ccode\u003Ehref=\&quot;#/\&quot;\u003C/code\u003E so it links back to the map.\u003C/li\u003E\n          \u003C/ol\u003E&quot;},{&quot;key&quot;:&quot;angularjs_nearme-3_0_7&quot;,&quot;text&quot;:&quot;View the result in the browser. When you click on the About page, a view is constructed by injecting \u003Cstrong\u003Eviews/about.html\u003C/strong\u003E into the \u003Ccode\u003E\u0026lt;div ng-view\u0026gt;\u0026lt;/div\u0026gt;\u003C/code\u003E in \u003Cstrong\u003Eindex.html\u003C/strong\u003E.&quot;}]}],&quot;workspace&quot;:{&quot;slug&quot;:&quot;angularjs_nearme&quot;,&quot;type&quot;:&quot;angularjs&quot;,&quot;backend&quot;:true},&quot;components&quot;:{&quot;PersistentCodeEditor&quot;:{&quot;files&quot;:[],&quot;_schema&quot;:&quot;PersistentCodeEditor&quot;},&quot;WebBrowser&quot;:{&quot;url&quot;:&quot;http://localhost:8000&quot;,&quot;_schema&quot;:&quot;WebBrowser&quot;}},&quot;filepath&quot;:&quot;new/content/courses/en/learn-angularjs/units/angularjs_piat/projects/angularjs_nearme-3.en.yml&quot;,&quot;path&quot;:&quot;/en/courses/learn-angularjs/projects/angularjs_nearme-3&quot;,&quot;unit_slug&quot;:&quot;angularjs_piat&quot;,&quot;course_slug&quot;:&quot;learn-angularjs&quot;,&quot;private&quot;:false}},&quot;lessons_order&quot;:[&quot;your-first-app&quot;,&quot;directives&quot;,&quot;services&quot;,&quot;routing&quot;],&quot;projects_order&quot;:[&quot;angularjs_bolt-network-1&quot;,&quot;angularjs_pizza-planet&quot;,&quot;angularjs_move-log&quot;,&quot;angularjs_bolt-network-2&quot;,&quot;angularjs_gameboard&quot;,&quot;angularjs_feedster&quot;,&quot;angularjs_outbox-1&quot;,&quot;angularjs_top-10&quot;,&quot;angularjs_outbox-2&quot;,&quot;angularjs_calendar&quot;,&quot;angularjs_reader&quot;,&quot;angularjs_nearme-1&quot;,&quot;angularjs_nearme-2&quot;,&quot;angularjs_nearme-3&quot;]},&quot;features&quot;:{&quot;collaboration&quot;:true},&quot;progress&quot;:{&quot;status&quot;:1},&quot;exitPaths&quot;:{&quot;logo&quot;:&quot;/en/courses/learn-angularjs&quot;,&quot;back&quot;:&quot;/en/courses/learn-angularjs&quot;,&quot;title&quot;:&quot;Learn AngularJS&quot;},&quot;modals&quot;:{&quot;signUp&quot;:&quot;\u003Cdiv data-react-class=\&quot;LoginRegistrationForms\&quot; data-react-props=\&quot;{\u0026quot;isLogin\u0026quot;:false,\u0026quot;errors\u0026quot;:null,\u0026quot;redirectUrl\u0026quot;:\u0026quot;/en/courses/learn-angularjs/projects/angularjs_outbox-1\u0026quot;,\u0026quot;isTeacherSignup\u0026quot;:null,\u0026quot;resource\u0026quot;:{\u0026quot;_id\u0026quot;:\u0026quot;56a8db351301e28d6a000097\u0026quot;,\u0026quot;about_me\u0026quot;:\u0026quot;\u0026quot;,\u0026quot;anonymous_user_id\u0026quot;:null,\u0026quot;api_keys\u0026quot;:{},\u0026quot;authentication_token\u0026quot;:null,\u0026quot;birthday\u0026quot;:{},\u0026quot;codecademy_env\u0026quot;:\u0026quot;production\u0026quot;,\u0026quot;created_at\u0026quot;:null,\u0026quot;current_curriculum_id\u0026quot;:null,\u0026quot;current_groups\u0026quot;:{},\u0026quot;curricula_completed\u0026quot;:null,\u0026quot;curricula_ids\u0026quot;:[],\u0026quot;deleted\u0026quot;:false,\u0026quot;email\u0026quot;:null,\u0026quot;emails_sent\u0026quot;:{},\u0026quot;employment\u0026quot;:null,\u0026quot;experience\u0026quot;:[],\u0026quot;fb_pa\u0026quot;:null,\u0026quot;ga_utma\u0026quot;:null,\u0026quot;gender\u0026quot;:null,\u0026quot;goals\u0026quot;:[],\u0026quot;handles\u0026quot;:{\u0026quot;twitter\u0026quot;:\u0026quot;\u0026quot;,\u0026quot;linked_in\u0026quot;:\u0026quot;\u0026quot;,\u0026quot;github\u0026quot;:\u0026quot;\u0026quot;},\u0026quot;has_been_oriented\u0026quot;:false,\u0026quot;invitation_token\u0026quot;:null,\u0026quot;is_forum_banned\u0026quot;:false,\u0026quot;is_spammer\u0026quot;:false,\u0026quot;last_activity_at\u0026quot;:null,\u0026quot;location\u0026quot;:null,\u0026quot;lost_activity\u0026quot;:false,\u0026quot;m_cc\u0026quot;:true,\u0026quot;m_cf\u0026quot;:true,\u0026quot;m_duan\u0026quot;:3,\u0026quot;m_fqa\u0026quot;:true,\u0026quot;m_gn\u0026quot;:true,\u0026quot;m_hn\u0026quot;:true,\u0026quot;m_nl\u0026quot;:true,\u0026quot;mail_inactivity\u0026quot;:true,\u0026quot;mail_silence\u0026quot;:false,\u0026quot;mail_streak_many_days\u0026quot;:true,\u0026quot;mail_welcome\u0026quot;:true,\u0026quot;motivation\u0026quot;:{},\u0026quot;name\u0026quot;:null,\u0026quot;notifiable_settings\u0026quot;:{},\u0026quot;points_hash\u0026quot;:{\u0026quot;points_today\u0026quot;:0,\u0026quot;best_points_day\u0026quot;:0},\u0026quot;preferred_locale\u0026quot;:null,\u0026quot;read\u0026quot;:{},\u0026quot;referer\u0026quot;:null,\u0026quot;roles\u0026quot;:{},\u0026quot;sched_send_info\u0026quot;:{},\u0026quot;staff_description\u0026quot;:null,\u0026quot;staff_start_date\u0026quot;:null,\u0026quot;staff_title\u0026quot;:null,\u0026quot;streak_hash\u0026quot;:{\u0026quot;count\u0026quot;:0,\u0026quot;max_count\u0026quot;:0},\u0026quot;t_c\u0026quot;:0,\u0026quot;t_e\u0026quot;:0,\u0026quot;t_p\u0026quot;:0,\u0026quot;t_s\u0026quot;:0,\u0026quot;timezone_offset\u0026quot;:null,\u0026quot;ui_tour_elements\u0026quot;:{},\u0026quot;updated_at\u0026quot;:null,\u0026quot;username\u0026quot;:null,\u0026quot;username_lowercase\u0026quot;:null,\u0026quot;visibility\u0026quot;:\u0026quot;public\u0026quot;,\u0026quot;website\u0026quot;:null,\u0026quot;profile_image_url\u0026quot;:\u0026quot;icons/default_user.png\u0026quot;,\u0026quot;handle\u0026quot;:\u0026quot;anonymous\u0026quot;,\u0026quot;total_points\u0026quot;:0},\u0026quot;paths\u0026quot;:{\u0026quot;tos\u0026quot;:\u0026quot;/terms\u0026quot;,\u0026quot;forgot_password\u0026quot;:\u0026quot;/secret/new\u0026quot;,\u0026quot;oauth_google\u0026quot;:\u0026quot;/users/auth/google_oauth2?signin=true\u0026quot;,\u0026quot;oauth_facebook\u0026quot;:\u0026quot;/users/auth/facebook?signin=true\u0026quot;,\u0026quot;oauth_twitter\u0026quot;:\u0026quot;/users/auth/twitter?signin=true\u0026quot;,\u0026quot;action_register\u0026quot;:\u0026quot;/register\u0026quot;,\u0026quot;action_session\u0026quot;:\u0026quot;/login\u0026quot;,\u0026quot;new_session\u0026quot;:\u0026quot;/login?redirect=%2Fen%2Fcourses%2Flearn-angularjs%2Fprojects%2Fangularjs_outbox-1\u0026quot;,\u0026quot;new_registration\u0026quot;:\u0026quot;/register?redirect=%2Fen%2Fcourses%2Flearn-angularjs%2Fprojects%2Fangularjs_outbox-1\u0026quot;},\u0026quot;translations\u0026quot;:{\u0026quot;heading_sign_up\u0026quot;:\u0026quot;Sign up and start coding in seconds.\u0026quot;,\u0026quot;heading_log_in\u0026quot;:\u0026quot;Log in and continue coding.\u0026quot;,\u0026quot;last_step_signup\u0026quot;:\u0026quot;One thing before you start\u0026quot;,\u0026quot;password_placeholder\u0026quot;:\u0026quot;Password\u0026quot;,\u0026quot;forgot_password\u0026quot;:\u0026quot;Forgot your password?\u0026quot;,\u0026quot;email_placeholder\u0026quot;:\u0026quot;Email\u0026quot;,\u0026quot;username_placeholder\u0026quot;:\u0026quot;Username\u0026quot;,\u0026quot;email_or_username_placeholder\u0026quot;:\u0026quot;Email or username\u0026quot;,\u0026quot;sign_up_with\u0026quot;:\u0026quot;Sign up with\u0026quot;,\u0026quot;sign_in_with\u0026quot;:\u0026quot;Log in with\u0026quot;,\u0026quot;remember_me\u0026quot;:\u0026quot;Remember me\u0026quot;,\u0026quot;log_in\u0026quot;:\u0026quot;Log in\u0026quot;,\u0026quot;sign_up\u0026quot;:\u0026quot;Sign up\u0026quot;,\u0026quot;get_started\u0026quot;:\u0026quot;Get started!\u0026quot;,\u0026quot;by_signing_up_you_agree\u0026quot;:\u0026quot;By signing up, you agree to our\u0026quot;,\u0026quot;tos\u0026quot;:\u0026quot;Terms of service\u0026quot;,\u0026quot;country_placeholder\u0026quot;:\u0026quot;Country\u0026quot;,\u0026quot;org_placeholder\u0026quot;:\u0026quot;School / Organization\u0026quot;},\u0026quot;locales\u0026quot;:[\u0026quot;en\u0026quot;,\u0026quot;en\u0026quot;],\u0026quot;formats\u0026quot;:{\u0026quot;number\u0026quot;:{\u0026quot;percentage\u0026quot;:{\u0026quot;style\u0026quot;:\u0026quot;percent\u0026quot;,\u0026quot;maximumFractionDigits\u0026quot;:0}},\u0026quot;date\u0026quot;:{},\u0026quot;time\u0026quot;:{}},\u0026quot;messages\u0026quot;:{\u0026quot;navigation\u0026quot;:{\u0026quot;next\u0026quot;:\u0026quot;Next\u0026quot;,\u0026quot;view_all_exercises\u0026quot;:\u0026quot;View All Exercises\u0026quot;},\u0026quot;components\u0026quot;:{\u0026quot;narrative\u0026quot;:{\u0026quot;learn\u0026quot;:\u0026quot;Learn\u0026quot;,\u0026quot;instructions\u0026quot;:\u0026quot;Instructions\u0026quot;,\u0026quot;support\u0026quot;:\u0026quot;Support\u0026quot;},\u0026quot;code_editor\u0026quot;:{\u0026quot;read_only\u0026quot;:\u0026quot;Read-only\u0026quot;},\u0026quot;file_nav\u0026quot;:{\u0026quot;read_only\u0026quot;:\u0026quot;Read-only\u0026quot;,\u0026quot;open\u0026quot;:\u0026quot;Open\u0026quot;,\u0026quot;read_only_msg\u0026quot;:\u0026quot;You cannot open this file because it cannot be edited at this time.\u0026quot;},\u0026quot;file_tool\u0026quot;:{\u0026quot;delete_file_message\u0026quot;:{\u0026quot;title\u0026quot;:\u0026quot;Delete file?\u0026quot;,\u0026quot;message\u0026quot;:\u0026quot;Are you sure you want to delete this file?  You cannot undo this.\u0026quot;},\u0026quot;delete_directory_message\u0026quot;:{\u0026quot;title\u0026quot;:\u0026quot;Delete Directory?\u0026quot;,\u0026quot;message\u0026quot;:\u0026quot;Are you sure you want to delete this directory?  This will delete all files inside it. You cannot undo this\u0026quot;}}}},\u0026quot;prerender\u0026quot;:{\u0026quot;duration\u0026quot;:9.707904999999998,\u0026quot;hostname\u0026quot;:\u0026quot;app-010\\n\u0026quot;}}\&quot;\u003E\u003Cdiv class=\&quot;login-registration-forms\&quot; data-reactid=\&quot;.3d8y\&quot; data-react-checksum=\&quot;517822171\&quot;\u003E\u003Cdiv class=\&quot;login-registration-form\&quot; data-reactid=\&quot;.3d8y.0\&quot;\u003E\u003Ch4 class=\&quot;registration-form__title\&quot; data-reactid=\&quot;.3d8y.0.0\&quot;\u003ESign up and start coding in seconds.\u003C/h4\u003E\u003Cform accept-charset=\&quot;UTF-8\&quot; action=\&quot;/register\&quot; autocomplete=\&quot;off\&quot; class=\&quot;new_user\&quot; id=\&quot;new-user\&quot; method=\&quot;post\&quot; data-reactid=\&quot;.3d8y.0.1\&quot;\u003E\u003Cinput name=\&quot;authenticity_token\&quot; type=\&quot;hidden\&quot; value=\&quot;bIboQ2hQ5SFwOOzcRTbzsVzReyqkOsBMvtNte7c+ySI=\&quot; data-reactid=\&quot;.3d8y.0.1.0\&quot;/\u003E\u003Cinput name=\&quot;redirect\&quot; type=\&quot;hidden\&quot; value=\&quot;/en/courses/learn-angularjs/projects/angularjs_outbox-1\&quot; data-reactid=\&quot;.3d8y.0.1.1\&quot;/\u003E\u003Cdiv class=\&quot;form-field\&quot; data-reactid=\&quot;.3d8y.0.1.$email\&quot;\u003E\u003Cdiv tabindex=\&quot;0\&quot; class=\&quot;field field--text\&quot; data-reactid=\&quot;.3d8y.0.1.$email.0\&quot;\u003E\u003Cinput type=\&quot;text\&quot; class=\&quot;\&quot; name=\&quot;user[email]\&quot; id=\&quot;user_email\&quot; placeholder=\&quot;Email\&quot; value=\&quot;\&quot; data-reactid=\&quot;.3d8y.0.1.$email.0.0\&quot;/\u003E\u003C/div\u003E\u003Cdiv class=\&quot;form-field__status-icon new-cc-icon icon-ex\&quot; data-reactid=\&quot;.3d8y.0.1.$email.1\&quot;\u003E\u003C/div\u003E\u003C/div\u003E\u003Cdiv class=\&quot;form-field\&quot; data-reactid=\&quot;.3d8y.0.1.$password\&quot;\u003E\u003Cdiv tabindex=\&quot;0\&quot; class=\&quot;field field--text\&quot; data-reactid=\&quot;.3d8y.0.1.$password.0\&quot;\u003E\u003Cinput type=\&quot;password\&quot; class=\&quot;\&quot; name=\&quot;user[password]\&quot; id=\&quot;user_password\&quot; placeholder=\&quot;Password\&quot; value=\&quot;\&quot; data-reactid=\&quot;.3d8y.0.1.$password.0.0\&quot;/\u003E\u003C/div\u003E\u003Cdiv class=\&quot;form-field__status-icon new-cc-icon icon-ex\&quot; data-reactid=\&quot;.3d8y.0.1.$password.1\&quot;\u003E\u003C/div\u003E\u003C/div\u003E\u003Cdiv class=\&quot;form-field form-field--hidden\&quot; data-reactid=\&quot;.3d8y.0.1.$username\&quot;\u003E\u003Cdiv tabindex=\&quot;0\&quot; class=\&quot;field field--text field--text--hidden\&quot; data-reactid=\&quot;.3d8y.0.1.$username.0\&quot;\u003E\u003Cinput type=\&quot;hidden\&quot; class=\&quot;\&quot; name=\&quot;user[username]\&quot; id=\&quot;user_username\&quot; placeholder=\&quot;Username\&quot; value=\&quot;\&quot; data-reactid=\&quot;.3d8y.0.1.$username.0.0\&quot;/\u003E\u003C/div\u003E\u003Cdiv class=\&quot;form-field__status-icon new-cc-icon icon-ex\&quot; data-reactid=\&quot;.3d8y.0.1.$username.1\&quot;\u003E\u003C/div\u003E\u003C/div\u003E\u003Cnoscript data-reactid=\&quot;.3d8y.0.1.5\&quot;\u003E\u003C/noscript\u003E\u003Cdiv class=\&quot;field-errors\&quot; data-reactid=\&quot;.3d8y.0.1.6\&quot;\u003E\u003C/div\u003E\u003Cbutton id=\&quot;user_signup_submit_1\&quot; class=\&quot;button button--large button--secondary button--fill-space\&quot; data-reactid=\&quot;.3d8y.0.1.7\&quot;\u003ESign up\u003C/button\u003E\u003Cinput class=\&quot;button button--large button--secondary button--fill-space form-content--hidden\&quot; id=\&quot;user_signup_submit_2\&quot; name=\&quot;commit\&quot; type=\&quot;hidden\&quot; value=\&quot;Get started!\&quot; data-reactid=\&quot;.3d8y.0.1.8\&quot;/\u003E\u003C/form\u003E\u003Cdiv class=\&quot;social-registration-buttons\&quot; data-reactid=\&quot;.3d8y.0.2\&quot;\u003E\u003Ca class=\&quot;button button--alternate button--google-oauth2 button--with-icon\&quot; href=\&quot;/users/auth/google_oauth2?signin=true\&quot; data-reactid=\&quot;.3d8y.0.2.0\&quot;\u003E\u003Cimg src=\&quot;https://s3.amazonaws.com/codecademy-images/logos/google.svg\&quot; class=\&quot;new-cc-icon\&quot; data-reactid=\&quot;.3d8y.0.2.0.0\&quot;/\u003E\u003Cspan data-reactid=\&quot;.3d8y.0.2.0.1\&quot;\u003E Google\u003C/span\u003E\u003C/a\u003E\u003Ca class=\&quot;button button--alternate button--facebook button--with-icon\&quot; href=\&quot;/users/auth/facebook?signin=true\&quot; data-reactid=\&quot;.3d8y.0.2.1\&quot;\u003E\u003Cimg src=\&quot;https://s3.amazonaws.com/codecademy-images/logos/facebook.svg\&quot; class=\&quot;new-cc-icon\&quot; data-reactid=\&quot;.3d8y.0.2.1.0\&quot;/\u003E\u003Cspan data-reactid=\&quot;.3d8y.0.2.1.1\&quot;\u003E Facebook\u003C/span\u003E\u003C/a\u003E\u003C/div\u003E\u003Cdiv class=\&quot;tos form-content--hidden\&quot; data-reactid=\&quot;.3d8y.0.3\&quot;\u003E\u003Csmall data-reactid=\&quot;.3d8y.0.3.0\&quot;\u003E\u003Cspan data-reactid=\&quot;.3d8y.0.3.0.0\&quot;\u003EBy signing up, you agree to our\u003C/span\u003E\u003Cspan data-reactid=\&quot;.3d8y.0.3.0.1\&quot;\u003E \u003C/span\u003E\u003Ca href=\&quot;/terms\&quot; data-reactid=\&quot;.3d8y.0.3.0.2\&quot;\u003ETerms of service\u003C/a\u003E\u003C/small\u003E\u003C/div\u003E\u003C/div\u003E\u003C/div\u003E\u003C/div\u003E\n\n&quot;,&quot;signIn&quot;:&quot;\u003Cdiv data-react-class=\&quot;LoginRegistrationForms\&quot; data-react-props=\&quot;{\u0026quot;isLogin\u0026quot;:true,\u0026quot;errors\u0026quot;:null,\u0026quot;redirectUrl\u0026quot;:\u0026quot;/en/courses/learn-angularjs/projects/angularjs_outbox-1\u0026quot;,\u0026quot;isTeacherSignup\u0026quot;:null,\u0026quot;resource\u0026quot;:{\u0026quot;_id\u0026quot;:\u0026quot;56a8db351301e28d6a000097\u0026quot;,\u0026quot;about_me\u0026quot;:\u0026quot;\u0026quot;,\u0026quot;anonymous_user_id\u0026quot;:null,\u0026quot;api_keys\u0026quot;:{},\u0026quot;authentication_token\u0026quot;:null,\u0026quot;birthday\u0026quot;:{},\u0026quot;codecademy_env\u0026quot;:\u0026quot;production\u0026quot;,\u0026quot;created_at\u0026quot;:null,\u0026quot;current_curriculum_id\u0026quot;:null,\u0026quot;current_groups\u0026quot;:{},\u0026quot;curricula_completed\u0026quot;:null,\u0026quot;curricula_ids\u0026quot;:[],\u0026quot;deleted\u0026quot;:false,\u0026quot;email\u0026quot;:null,\u0026quot;emails_sent\u0026quot;:{},\u0026quot;employment\u0026quot;:null,\u0026quot;experience\u0026quot;:[],\u0026quot;fb_pa\u0026quot;:null,\u0026quot;ga_utma\u0026quot;:null,\u0026quot;gender\u0026quot;:null,\u0026quot;goals\u0026quot;:[],\u0026quot;handles\u0026quot;:{\u0026quot;twitter\u0026quot;:\u0026quot;\u0026quot;,\u0026quot;linked_in\u0026quot;:\u0026quot;\u0026quot;,\u0026quot;github\u0026quot;:\u0026quot;\u0026quot;},\u0026quot;has_been_oriented\u0026quot;:false,\u0026quot;invitation_token\u0026quot;:null,\u0026quot;is_forum_banned\u0026quot;:false,\u0026quot;is_spammer\u0026quot;:false,\u0026quot;last_activity_at\u0026quot;:null,\u0026quot;location\u0026quot;:null,\u0026quot;lost_activity\u0026quot;:false,\u0026quot;m_cc\u0026quot;:true,\u0026quot;m_cf\u0026quot;:true,\u0026quot;m_duan\u0026quot;:3,\u0026quot;m_fqa\u0026quot;:true,\u0026quot;m_gn\u0026quot;:true,\u0026quot;m_hn\u0026quot;:true,\u0026quot;m_nl\u0026quot;:true,\u0026quot;mail_inactivity\u0026quot;:true,\u0026quot;mail_silence\u0026quot;:false,\u0026quot;mail_streak_many_days\u0026quot;:true,\u0026quot;mail_welcome\u0026quot;:true,\u0026quot;motivation\u0026quot;:{},\u0026quot;name\u0026quot;:null,\u0026quot;notifiable_settings\u0026quot;:{},\u0026quot;points_hash\u0026quot;:{\u0026quot;points_today\u0026quot;:0,\u0026quot;best_points_day\u0026quot;:0},\u0026quot;preferred_locale\u0026quot;:null,\u0026quot;read\u0026quot;:{},\u0026quot;referer\u0026quot;:null,\u0026quot;roles\u0026quot;:{},\u0026quot;sched_send_info\u0026quot;:{},\u0026quot;staff_description\u0026quot;:null,\u0026quot;staff_start_date\u0026quot;:null,\u0026quot;staff_title\u0026quot;:null,\u0026quot;streak_hash\u0026quot;:{\u0026quot;count\u0026quot;:0,\u0026quot;max_count\u0026quot;:0},\u0026quot;t_c\u0026quot;:0,\u0026quot;t_e\u0026quot;:0,\u0026quot;t_p\u0026quot;:0,\u0026quot;t_s\u0026quot;:0,\u0026quot;timezone_offset\u0026quot;:null,\u0026quot;ui_tour_elements\u0026quot;:{},\u0026quot;updated_at\u0026quot;:null,\u0026quot;username\u0026quot;:null,\u0026quot;username_lowercase\u0026quot;:null,\u0026quot;visibility\u0026quot;:\u0026quot;public\u0026quot;,\u0026quot;website\u0026quot;:null,\u0026quot;profile_image_url\u0026quot;:\u0026quot;icons/default_user.png\u0026quot;,\u0026quot;handle\u0026quot;:\u0026quot;anonymous\u0026quot;,\u0026quot;total_points\u0026quot;:0},\u0026quot;paths\u0026quot;:{\u0026quot;tos\u0026quot;:\u0026quot;/terms\u0026quot;,\u0026quot;forgot_password\u0026quot;:\u0026quot;/secret/new\u0026quot;,\u0026quot;oauth_google\u0026quot;:\u0026quot;/users/auth/google_oauth2?signin=true\u0026quot;,\u0026quot;oauth_facebook\u0026quot;:\u0026quot;/users/auth/facebook?signin=true\u0026quot;,\u0026quot;oauth_twitter\u0026quot;:\u0026quot;/users/auth/twitter?signin=true\u0026quot;,\u0026quot;action_register\u0026quot;:\u0026quot;/register\u0026quot;,\u0026quot;action_session\u0026quot;:\u0026quot;/login\u0026quot;,\u0026quot;new_session\u0026quot;:\u0026quot;/login?redirect=%2Fen%2Fcourses%2Flearn-angularjs%2Fprojects%2Fangularjs_outbox-1\u0026quot;,\u0026quot;new_registration\u0026quot;:\u0026quot;/register?redirect=%2Fen%2Fcourses%2Flearn-angularjs%2Fprojects%2Fangularjs_outbox-1\u0026quot;},\u0026quot;translations\u0026quot;:{\u0026quot;heading_sign_up\u0026quot;:\u0026quot;Sign up and start coding in seconds.\u0026quot;,\u0026quot;heading_log_in\u0026quot;:\u0026quot;Log in and continue coding.\u0026quot;,\u0026quot;last_step_signup\u0026quot;:\u0026quot;One thing before you start\u0026quot;,\u0026quot;password_placeholder\u0026quot;:\u0026quot;Password\u0026quot;,\u0026quot;forgot_password\u0026quot;:\u0026quot;Forgot your password?\u0026quot;,\u0026quot;email_placeholder\u0026quot;:\u0026quot;Email\u0026quot;,\u0026quot;username_placeholder\u0026quot;:\u0026quot;Username\u0026quot;,\u0026quot;email_or_username_placeholder\u0026quot;:\u0026quot;Email or username\u0026quot;,\u0026quot;sign_up_with\u0026quot;:\u0026quot;Sign up with\u0026quot;,\u0026quot;sign_in_with\u0026quot;:\u0026quot;Log in with\u0026quot;,\u0026quot;remember_me\u0026quot;:\u0026quot;Remember me\u0026quot;,\u0026quot;log_in\u0026quot;:\u0026quot;Log in\u0026quot;,\u0026quot;sign_up\u0026quot;:\u0026quot;Sign up\u0026quot;,\u0026quot;get_started\u0026quot;:\u0026quot;Get started!\u0026quot;,\u0026quot;by_signing_up_you_agree\u0026quot;:\u0026quot;By signing up, you agree to our\u0026quot;,\u0026quot;tos\u0026quot;:\u0026quot;Terms of service\u0026quot;,\u0026quot;country_placeholder\u0026quot;:\u0026quot;Country\u0026quot;,\u0026quot;org_placeholder\u0026quot;:\u0026quot;School / Organization\u0026quot;},\u0026quot;locales\u0026quot;:[\u0026quot;en\u0026quot;,\u0026quot;en\u0026quot;],\u0026quot;formats\u0026quot;:{\u0026quot;number\u0026quot;:{\u0026quot;percentage\u0026quot;:{\u0026quot;style\u0026quot;:\u0026quot;percent\u0026quot;,\u0026quot;maximumFractionDigits\u0026quot;:0}},\u0026quot;date\u0026quot;:{},\u0026quot;time\u0026quot;:{}},\u0026quot;messages\u0026quot;:{\u0026quot;navigation\u0026quot;:{\u0026quot;next\u0026quot;:\u0026quot;Next\u0026quot;,\u0026quot;view_all_exercises\u0026quot;:\u0026quot;View All Exercises\u0026quot;},\u0026quot;components\u0026quot;:{\u0026quot;narrative\u0026quot;:{\u0026quot;learn\u0026quot;:\u0026quot;Learn\u0026quot;,\u0026quot;instructions\u0026quot;:\u0026quot;Instructions\u0026quot;,\u0026quot;support\u0026quot;:\u0026quot;Support\u0026quot;},\u0026quot;code_editor\u0026quot;:{\u0026quot;read_only\u0026quot;:\u0026quot;Read-only\u0026quot;},\u0026quot;file_nav\u0026quot;:{\u0026quot;read_only\u0026quot;:\u0026quot;Read-only\u0026quot;,\u0026quot;open\u0026quot;:\u0026quot;Open\u0026quot;,\u0026quot;read_only_msg\u0026quot;:\u0026quot;You cannot open this file because it cannot be edited at this time.\u0026quot;},\u0026quot;file_tool\u0026quot;:{\u0026quot;delete_file_message\u0026quot;:{\u0026quot;title\u0026quot;:\u0026quot;Delete file?\u0026quot;,\u0026quot;message\u0026quot;:\u0026quot;Are you sure you want to delete this file?  You cannot undo this.\u0026quot;},\u0026quot;delete_directory_message\u0026quot;:{\u0026quot;title\u0026quot;:\u0026quot;Delete Directory?\u0026quot;,\u0026quot;message\u0026quot;:\u0026quot;Are you sure you want to delete this directory?  This will delete all files inside it. You cannot undo this\u0026quot;}}}},\u0026quot;prerender\u0026quot;:{\u0026quot;duration\u0026quot;:8.582889999999999,\u0026quot;hostname\u0026quot;:\u0026quot;app-010\\n\u0026quot;}}\&quot;\u003E\u003Cdiv class=\&quot;login-registration-forms\&quot; data-reactid=\&quot;.3d8z\&quot; data-react-checksum=\&quot;-902897680\&quot;\u003E\u003Cdiv class=\&quot;login-registration-form\&quot; data-reactid=\&quot;.3d8z.0\&quot;\u003E\u003Ch4 class=\&quot;login-form__title\&quot; data-reactid=\&quot;.3d8z.0.0\&quot;\u003ELog in and continue coding.\u003C/h4\u003E\u003Cform accept-charset=\&quot;UTF-8\&quot; action=\&quot;/login\&quot; autocomplete=\&quot;off\&quot; class=\&quot;new_user\&quot; id=\&quot;new-user\&quot; method=\&quot;post\&quot; data-reactid=\&quot;.3d8z.0.1\&quot;\u003E\u003Cinput name=\&quot;authenticity_token\&quot; type=\&quot;hidden\&quot; value=\&quot;bIboQ2hQ5SFwOOzcRTbzsVzReyqkOsBMvtNte7c+ySI=\&quot; data-reactid=\&quot;.3d8z.0.1.0\&quot;/\u003E\u003Cinput name=\&quot;redirect\&quot; type=\&quot;hidden\&quot; value=\&quot;/en/courses/learn-angularjs/projects/angularjs_outbox-1\&quot; data-reactid=\&quot;.3d8z.0.1.1\&quot;/\u003E\u003Cdiv class=\&quot;form-field\&quot; data-reactid=\&quot;.3d8z.0.1.2\&quot;\u003E\u003Cdiv tabindex=\&quot;0\&quot; class=\&quot;field field--text\&quot; data-reactid=\&quot;.3d8z.0.1.2.$user_login\&quot;\u003E\u003Cinput type=\&quot;text\&quot; class=\&quot;\&quot; name=\&quot;user[login]\&quot; id=\&quot;user_login\&quot; placeholder=\&quot;Email or username\&quot; value=\&quot;\&quot; data-reactid=\&quot;.3d8z.0.1.2.$user_login.0\&quot;/\u003E\u003C/div\u003E\u003C/div\u003E\u003Cinput name=\&quot;disable-autocomplete\&quot; type=\&quot;text\&quot; style=\&quot;display:none;\&quot; data-reactid=\&quot;.3d8z.0.1.3\&quot;/\u003E\u003Cdiv class=\&quot;form-field\&quot; data-reactid=\&quot;.3d8z.0.1.4\&quot;\u003E\u003Cdiv tabindex=\&quot;0\&quot; class=\&quot;field field--text\&quot; data-reactid=\&quot;.3d8z.0.1.4.$user_password\&quot;\u003E\u003Cinput type=\&quot;password\&quot; class=\&quot;\&quot; name=\&quot;user[password]\&quot; id=\&quot;user_password\&quot; placeholder=\&quot;Password\&quot; value=\&quot;\&quot; data-reactid=\&quot;.3d8z.0.1.4.$user_password.0\&quot;/\u003E\u003C/div\u003E\u003C/div\u003E\u003Cdiv class=\&quot;field-errors\&quot; data-reactid=\&quot;.3d8z.0.1.5\&quot;\u003E\u003C/div\u003E\u003Cinput class=\&quot;button button--large button--secondary button--fill-space\&quot; id=\&quot;user_submit\&quot; name=\&quot;commit\&quot; type=\&quot;submit\&quot; value=\&quot;Log in\&quot; data-reactid=\&quot;.3d8z.0.1.6\&quot;/\u003E\u003C/form\u003E\u003Cdiv class=\&quot;social-registration-buttons social-registration-links\&quot; data-reactid=\&quot;.3d8z.0.2\&quot;\u003E\u003Cspan data-reactid=\&quot;.3d8z.0.2.0\&quot;\u003E\u003Cspan data-reactid=\&quot;.3d8z.0.2.0.0\&quot;\u003ELog in with\u003C/span\u003E\u003Cspan data-reactid=\&quot;.3d8z.0.2.0.1\&quot;\u003E \u003C/span\u003E\u003C/span\u003E\u003Ca href=\&quot;/users/auth/google_oauth2?signin=true\&quot; data-reactid=\&quot;.3d8z.0.2.1\&quot;\u003EGoogle\u003C/a\u003E\u003Cspan data-reactid=\&quot;.3d8z.0.2.2\&quot;\u003E, \u003C/span\u003E\u003Ca href=\&quot;/users/auth/facebook?signin=true\&quot; data-reactid=\&quot;.3d8z.0.2.3\&quot;\u003EFacebook\u003C/a\u003E\u003Cspan data-reactid=\&quot;.3d8z.0.2.4\&quot;\u003E, or \u003C/span\u003E\u003Ca href=\&quot;/users/auth/twitter?signin=true\&quot; data-reactid=\&quot;.3d8z.0.2.5\&quot;\u003ETwitter\u003C/a\u003E\u003C/div\u003E\u003Ca href=\&quot;/secret/new\&quot; class=\&quot;forgot-password\&quot; data-reactid=\&quot;.3d8z.0.3\&quot;\u003EForgot your password?\u003C/a\u003E\u003C/div\u003E\u003C/div\u003E\u003C/div\u003E\n\n&quot;},&quot;selfAssessments&quot;:{&quot;angularjs_outbox-1_0_0&quot;:&quot;true&quot;,&quot;angularjs_outbox-1_0_1&quot;:&quot;true&quot;,&quot;angularjs_outbox-1_0_2&quot;:&quot;true&quot;,&quot;angularjs_outbox-1_0_3&quot;:&quot;true&quot;,&quot;angularjs_outbox-1_0_4&quot;:&quot;true&quot;,&quot;angularjs_outbox-1_0_5&quot;:&quot;true&quot;,&quot;angularjs_outbox-1_0_6&quot;:&quot;true&quot;,&quot;angularjs_outbox-1_0_7&quot;:&quot;true&quot;},&quot;profileImage&quot;:&quot;https://www.gravatar.com/avatar/1f54a760bf0748f6b0de3806087b8a23?s=140\u0026d=retro&quot;,&quot;isRegisteredUser&quot;:true,&quot;hasButterbar&quot;:null,&quot;revision&quot;:null,&quot;workspace&quot;:{&quot;userId&quot;:&quot;538a9f95282ae37171001cd4&quot;},&quot;locales&quot;:[&quot;en&quot;,&quot;en&quot;],&quot;formats&quot;:{&quot;number&quot;:{&quot;percentage&quot;:{&quot;style&quot;:&quot;percent&quot;,&quot;maximumFractionDigits&quot;:0}},&quot;date&quot;:{},&quot;time&quot;:{}},&quot;messages&quot;:{&quot;navigation&quot;:{&quot;next&quot;:&quot;Next&quot;,&quot;view_all_exercises&quot;:&quot;View All Exercises&quot;},&quot;components&quot;:{&quot;narrative&quot;:{&quot;learn&quot;:&quot;Learn&quot;,&quot;instructions&quot;:&quot;Instructions&quot;,&quot;support&quot;:&quot;Support&quot;},&quot;code_editor&quot;:{&quot;read_only&quot;:&quot;Read-only&quot;},&quot;file_nav&quot;:{&quot;read_only&quot;:&quot;Read-only&quot;,&quot;open&quot;:&quot;Open&quot;,&quot;read_only_msg&quot;:&quot;You cannot open this file because it cannot be edited at this time.&quot;},&quot;file_tool&quot;:{&quot;delete_file_message&quot;:{&quot;title&quot;:&quot;Delete file?&quot;,&quot;message&quot;:&quot;Are you sure you want to delete this file?  You cannot undo this.&quot;},&quot;delete_directory_message&quot;:{&quot;title&quot;:&quot;Delete Directory?&quot;,&quot;message&quot;:&quot;Are you sure you want to delete this directory?  This will delete all files inside it. You cannot undo this&quot;}}}},&quot;prerender&quot;:{&quot;duration&quot;:304.471179,&quot;hostname&quot;:&quot;app-010\n&quot;}}"><div class="fcn-projects francine" id="workspace" data-reactid=".3d93" data-react-checksum="1468033783"><nav class="index__wrapper___1waHX" data-reactid=".3d93.0"><section class="index__section___1V-7u index__sectionLeft___3nm70" data-reactid=".3d93.0.0"><div class="index__tab___1YP8O" data-reactid=".3d93.0.0.0"><a href="/" title="Codecademy" class="index__logo___36QSm" data-reactid=".3d93.0.0.0.0"><img class="index__image___2C3Hs" src="/assets/logo/pro-logo--white.svg" data-reactid=".3d93.0.0.0.0.0"/></a></div></section><section class="index__section___1V-7u index__sectionCenter___21yCY" data-reactid=".3d93.0.1"><a class="index__headerTitle___1Lwq6 index__headerTitleLink___2dEZ6" href="/en/courses/learn-angularjs" data-reactid=".3d93.0.1.0"><i class="index__navIcon___3uwLL fcn-icon fcn-icon-arrowPrev" data-reactid=".3d93.0.1.0.0"></i><span data-reactid=".3d93.0.1.0.1">Learn AngularJS</span></a></section><section class="index__section___1V-7u index__sectionRight___3vkCZ" data-reactid=".3d93.0.2"><div class="index__tab___1YP8O" data-reactid=".3d93.0.2.0:0"><div class="index__peers___37Ctk" data-reactid=".3d93.0.2.0:0.0"><span data-reactid=".3d93.0.2.0:0.0.0"></span></div></div><div class="index__tab___1YP8O" data-reactid=".3d93.0.2.0:1"><div class="fcn-godex-status-container" data-reactid=".3d93.0.2.0:1.0"><div class="fcn-godex-status--hidden fcn-godex-status" data-reactid=".3d93.0.2.0:1.0.0"><span data-reactid=".3d93.0.2.0:1.0.0.0"></span><div class="fcn-godex-status__glow" data-reactid=".3d93.0.2.0:1.0.0.1"></div></div></div></div><div class="index__tab___1YP8O index__tabButton___AIune" data-reactid=".3d93.0.2.0:2"><a href="/notifications" class="index__bell___ZUlu2" data-reactid=".3d93.0.2.0:2.0"><span class="new-cc-icon icon-bell" data-reactid=".3d93.0.2.0:2.0.0"></span></a></div><div class="index__tab___1YP8O index__tabButton___AIune" data-reactid=".3d93.0.2.0:3"><div class="index__wrapper___12JOY" data-reactid=".3d93.0.2.0:3.0"><div class="index__toggle___1Fy5n" id="dropdown-toggle" data-reactid=".3d93.0.2.0:3.0.0"><div class="index__avatar___1OLSi index__round___gJx5q index__small___2SDpr" data-reactid=".3d93.0.2.0:3.0.0.0"><img class="index__image___2OZMM" src="https://www.gravatar.com/avatar/1f54a760bf0748f6b0de3806087b8a23?s=140&amp;d=retro" data-reactid=".3d93.0.2.0:3.0.0.0.0"/></div></div><noscript data-reactid=".3d93.0.2.0:3.0.1"></noscript></div></div></section></nav><div class="discovery-cue discovery-cue--hidden" style="left:NaN%;top:NaN%;" data-reactid=".3d93.1:$cue-course-navigator"><div class="discovery-cue--content-container" data-reactid=".3d93.1:$cue-course-navigator.0"><div class="discovery-cue__arrow" data-reactid=".3d93.1:$cue-course-navigator.0.0"></div><p class="discovery-cue--content" data-reactid=".3d93.1:$cue-course-navigator.0.1">Click here to navigate the course.</p></div><div class="pulse" data-reactid=".3d93.1:$cue-course-navigator.1"></div></div><div class="discovery-cue discovery-cue--hidden" style="left:NaN%;top:NaN%;" data-reactid=".3d93.1:$cue-discovery-resize-14"><div class="discovery-cue--content-container" data-reactid=".3d93.1:$cue-discovery-resize-14.0"><div class="discovery-cue__arrow" data-reactid=".3d93.1:$cue-discovery-resize-14.0.0"></div><p class="discovery-cue--content" data-reactid=".3d93.1:$cue-discovery-resize-14.0.1">Drag the edges to resize the window.</p></div><div class="pulse" data-reactid=".3d93.1:$cue-discovery-resize-14.1"></div></div><div class="discovery-cue discovery-cue--hidden" style="left:NaN%;top:NaN%;" data-reactid=".3d93.1:$cue-discovery-fullscreen"><div class="discovery-cue--content-container" data-reactid=".3d93.1:$cue-discovery-fullscreen.0"><div class="discovery-cue__arrow" data-reactid=".3d93.1:$cue-discovery-fullscreen.0.0"></div><p class="discovery-cue--content" data-reactid=".3d93.1:$cue-discovery-fullscreen.0.1">Click here to make this window fullscreen.</p></div><div class="pulse" data-reactid=".3d93.1:$cue-discovery-fullscreen.1"></div></div><div class="discovery-cue discovery-cue--hidden" style="left:NaN%;top:NaN%;" data-reactid=".3d93.1:$cue-discovery-checklist"><div class="discovery-cue--content-container" data-reactid=".3d93.1:$cue-discovery-checklist.0"><div class="discovery-cue__arrow" data-reactid=".3d93.1:$cue-discovery-checklist.0.0"></div><p class="discovery-cue--content" data-reactid=".3d93.1:$cue-discovery-checklist.0.1">In Projects, you can keep track of your progress as you go throught the tasks. Check each item as you complete it!</p></div><div class="pulse" data-reactid=".3d93.1:$cue-discovery-checklist.1"></div></div><noscript data-reactid=".3d93.2"></noscript><div class="fcn-grid" style="cursor:auto;" data-reactid=".3d93.3"><div id="discovery-resize-14" class="fcn-slot fcn-slot--no-top-neighbor fcn-slot--no-bottom-neighbor" style="position:absolute;top:0%;right:33.33333333333334%;bottom:0%;left:33.33333333333333%;" data-fcn-arrangement="14" data-reactid=".3d93.3.0:$slot=2PersistentCodeEditor"><div class="fcn-component disabled" data-reactid=".3d93.3.0:$slot=2PersistentCodeEditor.0"><div class="overlay" data-reactid=".3d93.3.0:$slot=2PersistentCodeEditor.0.0"></div><div class="editor" data-reactid=".3d93.3.0:$slot=2PersistentCodeEditor.0.1"><div class="fcn-component-header" data-reactid=".3d93.3.0:$slot=2PersistentCodeEditor.0.1.0"><div class="fcn-tabs" data-reactid=".3d93.3.0:$slot=2PersistentCodeEditor.0.1.0.0"><span class="fcn-tabs__tab fcn-button fcn-button--tab fcn-button--tab--inactive fcn-control fcn-icon fcn-icon-folder" style="max-width:200px;" data-reactid=".3d93.3.0:$slot=2PersistentCodeEditor.0.1.0.0.0:0"></span><span class="fcn-tabs__tab fcn-tabs__tab--align-right fcn-button fcn-button--tab fcn-button--tab--inactive fcn-control fcn-icon fcn-icon-fullscreen" data-cue="discovery-fullscreen" style="max-width:200px;" data-reactid=".3d93.3.0:$slot=2PersistentCodeEditor.0.1.0.0.2"></span></div></div><div class="index__peers___37Ctk" data-reactid=".3d93.3.0:$slot=2PersistentCodeEditor.0.1.1"><span data-reactid=".3d93.3.0:$slot=2PersistentCodeEditor.0.1.1.0"></span></div><div class="fcn-code-editor__placeholder" data-reactid=".3d93.3.0:$slot=2PersistentCodeEditor.0.1.2"><div class="fcn-code-editor__placeholder__icon" data-reactid=".3d93.3.0:$slot=2PersistentCodeEditor.0.1.2.0"><span class="fcn-icon fcn-icon-fileAlt" data-reactid=".3d93.3.0:$slot=2PersistentCodeEditor.0.1.2.0.0"></span></div><div data-reactid=".3d93.3.0:$slot=2PersistentCodeEditor.0.1.2.1">Code Editor</div><div data-reactid=".3d93.3.0:$slot=2PersistentCodeEditor.0.1.2.2">Open files here to edit them</div></div><div class="editor-footer-container" data-reactid=".3d93.3.0:$slot=2PersistentCodeEditor.0.1.3"><div class="editor-footer" data-reactid=".3d93.3.0:$slot=2PersistentCodeEditor.0.1.3.0"><div class="fcn-tabs-container" data-reactid=".3d93.3.0:$slot=2PersistentCodeEditor.0.1.3.0.0"><div class="editor-footer__buttons" data-reactid=".3d93.3.0:$slot=2PersistentCodeEditor.0.1.3.0.0.0"><div class="editor__submit fcn-button fcn-button--lantern" data-reactid=".3d93.3.0:$slot=2PersistentCodeEditor.0.1.3.0.0.0.1">Save</div><div class="peer-controls" data-reactid=".3d93.3.0:$slot=2PersistentCodeEditor.0.1.3.0.0.0.3"><div class="index__shareCodeControl___EEmSE" data-reactid=".3d93.3.0:$slot=2PersistentCodeEditor.0.1.3.0.0.0.3.0"><span class="index__cta___1Md8Y" data-reactid=".3d93.3.0:$slot=2PersistentCodeEditor.0.1.3.0.0.0.3.0.0">Share your code editor</span><div class="index__ctaArrow___2_jSO" data-reactid=".3d93.3.0:$slot=2PersistentCodeEditor.0.1.3.0.0.0.3.0.1"></div><span class="fcn-tabs__tab fcn-button fcn-button--tab fcn-button--tab--inactive fcn-control fcn-icon fcn-icon-share" style="max-width:200px;" data-reactid=".3d93.3.0:$slot=2PersistentCodeEditor.0.1.3.0.0.0.3.0.2"></span></div></div></div></div></div></div><div class="fcn-component__error-display fcn-component__error-display--hidden" data-reactid=".3d93.3.0:$slot=2PersistentCodeEditor.0.1.4"></div></div></div></div><div id="discovery-resize-25" class="fcn-slot fcn-slot--no-top-neighbor fcn-slot--no-right-neighbor fcn-slot--no-bottom-neighbor" style="position:absolute;top:0%;right:0%;bottom:0%;left:66.66666666666666%;" data-fcn-arrangement="25" data-reactid=".3d93.3.0:$slot=2WebBrowser"><div class="fcn-component disabled" data-reactid=".3d93.3.0:$slot=2WebBrowser.0"><div class="overlay" data-reactid=".3d93.3.0:$slot=2WebBrowser.0.0"></div><div class="fill-container fcn-browser__container" data-reactid=".3d93.3.0:$slot=2WebBrowser.0.1"><div class="fcn-browser__chrome" data-reactid=".3d93.3.0:$slot=2WebBrowser.0.1.0"><span class="fcn-control fcn-icon fcn-icon-arrowPrev fcn-control--disabled" data-reactid=".3d93.3.0:$slot=2WebBrowser.0.1.0.0"></span><span class="fcn-control fcn-icon fcn-icon-refresh" data-reactid=".3d93.3.0:$slot=2WebBrowser.0.1.0.1"></span><div class="fcn-browser__chrome__center" data-reactid=".3d93.3.0:$slot=2WebBrowser.0.1.0.2"><input type="text" class="fcn-browser__url-bar" placeholder="Type URL here" value="http://localhost:8000" data-reactid=".3d93.3.0:$slot=2WebBrowser.0.1.0.2.0"/></div><div data-cue="discovery-fullscreen" class="fcn-control fcn-control--right" data-reactid=".3d93.3.0:$slot=2WebBrowser.0.1.0.3"><span class="fcn-icon fcn-icon-fullscreen" data-reactid=".3d93.3.0:$slot=2WebBrowser.0.1.0.3.0"></span></div></div><div class="fcn-browser__body" data-reactid=".3d93.3.0:$slot=2WebBrowser.0.1.1"><div class="fcn-browser__placeholder" data-reactid=".3d93.3.0:$slot=2WebBrowser.0.1.1.0"><div class="fcn-browser__placeholder__body" data-reactid=".3d93.3.0:$slot=2WebBrowser.0.1.1.0.0"><div class="fcn-browser__placeholder__image" data-reactid=".3d93.3.0:$slot=2WebBrowser.0.1.1.0.0.0"></div><div class="fcn-browser__placeholder__text" data-reactid=".3d93.3.0:$slot=2WebBrowser.0.1.1.0.0.1"><span data-reactid=".3d93.3.0:$slot=2WebBrowser.0.1.1.0.0.1.0">Browser Window</span><br data-reactid=".3d93.3.0:$slot=2WebBrowser.0.1.1.0.0.1.1"/><span data-reactid=".3d93.3.0:$slot=2WebBrowser.0.1.1.0.0.1.2">Use the URL bar to load a website</span></div></div></div><iframe src="" class="fill-container" style="pointer-events:auto;" data-reactid=".3d93.3.0:$slot=2WebBrowser.0.1.1.1"></iframe></div><div class="fcn-component__error-display fcn-component__error-display--hidden" data-reactid=".3d93.3.0:$slot=2WebBrowser.0.1.2"></div></div></div></div><div id="discovery-resize-03" class="fcn-slot fcn-slot--no-top-neighbor fcn-slot--no-bottom-neighbor fcn-slot--no-left-neighbor" style="position:absolute;top:0%;right:66.66666666666667%;bottom:0%;left:0%;" data-fcn-arrangement="03" data-reactid=".3d93.3.0:$slot=2Brief"><div class="fcn-component" data-reactid=".3d93.3.0:$slot=2Brief.0"><div class="overlay" data-reactid=".3d93.3.0:$slot=2Brief.0.0"></div><div data-reactid=".3d93.3.0:$slot=2Brief.0.1"><div data-reactid=".3d93.3.0:$slot=2Brief.0.1.0"><div class="accordion-container" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0"><div class="accordion" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0"><div class="accordion-section" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion0"><div class="accordion-section-heading" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion0.0"><span class="learn-header" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion0.0.0"><span class="fcn-icon fcn-icon-objective" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion0.0.0.0"></span><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion0.0.0.1">Objective</span></span></div><div class="accordion-section-body" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion0.1"><div class="accordion-section-body__padded task--markdown" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion0.1.0"><div data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion0.1.0.0"><p>Outbox is creating an AngularJS app for their email app. <a href="https://s3.amazonaws.com/codecademy-content/projects/4/outbox-1/index.html">Here&#39;s what it looks like</a>. The app displays a list of messages.</p>
</div></div></div></div><div class="accordion-section" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1"><div class="accordion-section-heading" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.0"><span class="fcn-task-section__header" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.0.0"><span class="fcn-icon fcn-icon-instructions" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.0.0.0"></span><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.0.0.1">Tasks</span><div class="fcn-task-counter fcn-task-counter--complete" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.0.0.2"><span class="fcn-task-counter__count" style="margin-right:3px;" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.0.0.2.0"><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.0.0.2.0.0">8</span><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.0.0.2.0.1">/</span><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.0.0.2.0.2">8</span></span><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.0.0.2.1">Complete</span></div></span></div><div class="accordion-section-body" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1"><div class="fcn-tasks" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0"><span class="fcn-tasks__help" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.0">Mark the tasks as complete by checking them off</span><div data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0"><article class="fit-full fcn-task fcn-task--complete" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_0"><div class="grid-row accordion-section-body__padded" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_0.0"><div class="grid-col-1 grid-col--no-padding" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_0.0.0"><div data-cue="discovery-checklist" class="fcn-task__check fcn-task__check--checked" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_0.0.0.0"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_0.0.0.0.0"></span></div></div><div class="grid-col-1 grid-col--no-padding" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_0.0.1"><span class="fcn-task__number" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_0.0.1.0"><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_0.0.1.0.0">1</span><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_0.0.1.0.1">.</span></span></div><div class="grid-col-10 grid-col--no-padding" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_0.0.2"><div class="task--markdown" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_0.0.2.0"><p>Create a new module named <code>OutboxApp</code>, and then attach it to the <code>&lt;body&gt;</code> element in the view.</p>
</div></div></div></article><article class="fit-full fcn-task fcn-task--complete" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_1"><div class="grid-row accordion-section-body__padded" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_1.0"><div class="grid-col-1 grid-col--no-padding" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_1.0.0"><div data-cue="discovery-checklist" class="fcn-task__check fcn-task__check--checked" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_1.0.0.0"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_1.0.0.0.0"></span></div></div><div class="grid-col-1 grid-col--no-padding" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_1.0.1"><span class="fcn-task__number" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_1.0.1.0"><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_1.0.1.0.0">2</span><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_1.0.1.0.1">.</span></span></div><div class="grid-col-10 grid-col--no-padding" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_1.0.2"><div class="task--markdown" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_1.0.2.0"><p>Visit <a href="https://s3.amazonaws.com/codecademy-content/courses/ltp4/emails-api/emails.json" target="_blank">emails.json</a>. It&#39;s a JSON object containing an array of emails. Let&#39;s fetch this data and display it in the app.</p>
</div></div></div></article><article class="fit-full fcn-task fcn-task--complete" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_2"><div class="grid-row accordion-section-body__padded" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_2.0"><div class="grid-col-1 grid-col--no-padding" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_2.0.0"><div data-cue="discovery-checklist" class="fcn-task__check fcn-task__check--checked" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_2.0.0.0"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_2.0.0.0.0"></span></div></div><div class="grid-col-1 grid-col--no-padding" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_2.0.1"><span class="fcn-task__number" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_2.0.1.0"><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_2.0.1.0.0">3</span><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_2.0.1.0.1">.</span></span></div><div class="grid-col-10 grid-col--no-padding" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_2.0.2"><div class="task--markdown" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_2.0.2.0"><p>Create a service named <code>emails</code> for getting this email data:</p>
<ol type="a">
<li>Make a new folder named <strong>js/services</strong>. In this folder, create a new file named <strong>js/services/emails.js</strong>.</li>
            <li>Use <code>app.factory</code> to create a new service named <code>emails</code>.</li>
            <li>Use <code>$http</code> to get the email data from <a href="https://s3.amazonaws.com/codecademy-content/courses/ltp4/emails-api/emails.json" target="_blank">emails.json</a>.</li>
          </ol></div></div></div></article><article class="fit-full fcn-task fcn-task--complete" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_3"><div class="grid-row accordion-section-body__padded" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_3.0"><div class="grid-col-1 grid-col--no-padding" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_3.0.0"><div data-cue="discovery-checklist" class="fcn-task__check fcn-task__check--checked" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_3.0.0.0"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_3.0.0.0.0"></span></div></div><div class="grid-col-1 grid-col--no-padding" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_3.0.1"><span class="fcn-task__number" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_3.0.1.0"><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_3.0.1.0.0">4</span><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_3.0.1.0.1">.</span></span></div><div class="grid-col-10 grid-col--no-padding" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_3.0.2"><div class="task--markdown" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_3.0.2.0"><p>Include this new JavaScript file in the view as a new <code>script</code> element.</p>
</div></div></div></article><article class="fit-full fcn-task fcn-task--complete" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_4"><div class="grid-row accordion-section-body__padded" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_4.0"><div class="grid-col-1 grid-col--no-padding" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_4.0.0"><div data-cue="discovery-checklist" class="fcn-task__check fcn-task__check--checked" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_4.0.0.0"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_4.0.0.0.0"></span></div></div><div class="grid-col-1 grid-col--no-padding" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_4.0.1"><span class="fcn-task__number" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_4.0.1.0"><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_4.0.1.0.0">5</span><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_4.0.1.0.1">.</span></span></div><div class="grid-col-10 grid-col--no-padding" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_4.0.2"><div class="task--markdown" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_4.0.2.0"><p>In the controller, use the <code>emails</code> service to fetch data from the server:
          <ol type="a">
            <li>First add <code>emails</code> into <code>HomeController</code> as a dependency so that it&#39;s available to use.</li>
            <li>Then use <code>emails</code> within the controller to asynchronously fetch the email data from the server and store it into <code>$scope.emails</code>.</li>
          </ol></p>
</div></div></div></article><article class="fit-full fcn-task fcn-task--complete" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_5"><div class="grid-row accordion-section-body__padded" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_5.0"><div class="grid-col-1 grid-col--no-padding" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_5.0.0"><div data-cue="discovery-checklist" class="fcn-task__check fcn-task__check--checked" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_5.0.0.0"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_5.0.0.0.0"></span></div></div><div class="grid-col-1 grid-col--no-padding" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_5.0.1"><span class="fcn-task__number" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_5.0.1.0"><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_5.0.1.0.0">6</span><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_5.0.1.0.1">.</span></span></div><div class="grid-col-10 grid-col--no-padding" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_5.0.2"><div class="task--markdown" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_5.0.2.0"><p>Attach the controller to the <code>&lt;div class=&quot;main&quot;&gt;</code> element.</p>
</div></div></div></article><article class="fit-full fcn-task fcn-task--complete" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_6"><div class="grid-row accordion-section-body__padded" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_6.0"><div class="grid-col-1 grid-col--no-padding" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_6.0.0"><div data-cue="discovery-checklist" class="fcn-task__check fcn-task__check--checked" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_6.0.0.0"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_6.0.0.0.0"></span></div></div><div class="grid-col-1 grid-col--no-padding" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_6.0.1"><span class="fcn-task__number" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_6.0.1.0"><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_6.0.1.0.0">7</span><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_6.0.1.0.1">.</span></span></div><div class="grid-col-10 grid-col--no-padding" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_6.0.2"><div class="task--markdown" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_6.0.2.0"><p>In the view, finish the code to display an email. Looking at the format of the data in <a href="https://s3.amazonaws.com/codecademy-content/courses/ltp4/emails-api/emails.json" target="_blank">emails.json</a>, display each email&#39;s <code>from</code>, <code>subject</code>, and <code>datetime</code> in their corresponding <code>&lt;span&gt;</code> elements.</p>
</div></div></div></article><article class="fit-full fcn-task fcn-task--complete" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_7"><div class="grid-row accordion-section-body__padded" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_7.0"><div class="grid-col-1 grid-col--no-padding" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_7.0.0"><div data-cue="discovery-checklist" class="fcn-task__check fcn-task__check--checked" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_7.0.0.0"><span class="fcn-icon fcn-icon-checkmark fcn-task__icon" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_7.0.0.0.0"></span></div></div><div class="grid-col-1 grid-col--no-padding" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_7.0.1"><span class="fcn-task__number" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_7.0.1.0"><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_7.0.1.0.0">8</span><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_7.0.1.0.1">.</span></span></div><div class="grid-col-10 grid-col--no-padding" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_7.0.2"><div class="task--markdown" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion1.1.0.1:0.$task-angularjs_outbox-1_0_7.0.2.0"><p>View the result by visiting <a href="http://localhost:8000">http://localhost:8000</a> in the browser.</p>
</div></div></div></article></div></div></div></div><div class="accordion-section" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion2"><div class="accordion-section-heading" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion2.0"><span class="support-header" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion2.0.0"><div class="fcn-icon fcn-icon-support" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion2.0.0.0"></div><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion2.0.0.1">Report a Bug</span></span></div><div class="accordion-section-body" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion2.1"><div class="accordion-section-body__no-bg accordion-section-body__padded index__reportForm___36ZoF" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion2.1.0"><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion2.1.0.0"><div class="index__reportFormIntroText___3H23t" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion2.1.0.0.$=10"><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion2.1.0.0.$=10.0">If you see a bug or any other issue with this page, please report it </span><a class="index__reportFormIntroLink___1GzhQ" href="#" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion2.1.0.0.$=10.1">here</a><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.0.0.$accordion2.1.0.0.$=10.2">.</span></div></span></div></div></div></div></div><div class="sticky-bottom" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.1"><div class="accordion-section-heading invisible" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.1.0"><span class="learn-header" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.1.0.0"><span class="fcn-icon fcn-icon-objective" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.1.0.0.0"></span><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.1.0.0.1">Objective</span></span></div><div class="accordion-section-heading invisible" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.1.1"><span class="fcn-task-section__header" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.1.1.0"><span class="fcn-icon fcn-icon-instructions" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.1.1.0.0"></span><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.1.1.0.1">Tasks</span><div class="fcn-task-counter fcn-task-counter--complete" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.1.1.0.2"><span class="fcn-task-counter__count" style="margin-right:3px;" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.1.1.0.2.0"><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.1.1.0.2.0.0">8</span><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.1.1.0.2.0.1">/</span><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.1.1.0.2.0.2">8</span></span><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.1.1.0.2.1">Complete</span></div></span></div><div class="accordion-section-heading invisible" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.1.2"><span class="support-header" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.1.2.0"><div class="fcn-icon fcn-icon-support" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.1.2.0.0"></div><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.1.2.0.1">Report a Bug</span></span></div></div><div class="sticky-top" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.2"><div class="accordion-section-heading invisible" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.2.0"><span class="learn-header" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.2.0.0"><span class="fcn-icon fcn-icon-objective" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.2.0.0.0"></span><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.2.0.0.1">Objective</span></span></div><div class="accordion-section-heading invisible" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.2.1"><span class="fcn-task-section__header" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.2.1.0"><span class="fcn-icon fcn-icon-instructions" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.2.1.0.0"></span><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.2.1.0.1">Tasks</span><div class="fcn-task-counter fcn-task-counter--complete" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.2.1.0.2"><span class="fcn-task-counter__count" style="margin-right:3px;" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.2.1.0.2.0"><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.2.1.0.2.0.0">8</span><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.2.1.0.2.0.1">/</span><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.2.1.0.2.0.2">8</span></span><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.2.1.0.2.1">Complete</span></div></span></div><div class="accordion-section-heading invisible" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.2.2"><span class="support-header" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.2.2.0"><div class="fcn-icon fcn-icon-support" data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.2.2.0.0"></div><span data-reactid=".3d93.3.0:$slot=2Brief.0.1.0.2.2.0.1">Report a Bug</span></span></div></div></div></div></div></div></div><nav title="Outbox 1" class="index__wrapper___1waHX index__footer___11DZw" data-reactid=".3d93.4"><section class="index__section___1V-7u index__sectionLeft___3nm70" data-reactid=".3d93.4.0"><div class="index__tab___1YP8O" data-reactid=".3d93.4.0.0"><a href="#" title="Outbox 1" class="NavMenuButton__button___3FR1r" data-reactid=".3d93.4.0.0.0"><span class="NavMenuButton__burger___8d8-Q" data-reactid=".3d93.4.0.0.0.0"></span><span data-cue="course-navigator" class="NavMenuButton__exerciseTitle___33H2J" data-reactid=".3d93.4.0.0.0.1">Outbox 1</span></a></div></section><section class="index__section___1V-7u index__sectionCenter___21yCY" data-reactid=".3d93.4.1:0"><div class="fcn-project-footer" data-reactid=".3d93.4.1:0.0"><div class="fcn-task-counter fcn-task-counter--complete" data-reactid=".3d93.4.1:0.0.0"><span class="fcn-task-counter__count" style="margin-right:3px;" data-reactid=".3d93.4.1:0.0.0.0"><span data-reactid=".3d93.4.1:0.0.0.0.0">8</span><span data-reactid=".3d93.4.1:0.0.0.0.1">/</span><span data-reactid=".3d93.4.1:0.0.0.0.2">8</span></span><span data-reactid=".3d93.4.1:0.0.0.1">Complete</span></div><button class="fcn-button fcn-button--lantern--go" data-reactid=".3d93.4.1:0.0.$pf-btn-lantern--go">Up Next</button></div></section><section class="index__section___1V-7u index__sectionRight___3vkCZ" data-reactid=".3d93.4.1:1"><button class="fcn-button fcn-button--everyday" data-reactid=".3d93.4.1:1.0"><span data-reactid=".3d93.4.1:1.0.0">Get Help</span><noscript data-reactid=".3d93.4.1:1.0.1"></noscript></button></section><noscript data-reactid=".3d93.4.2"></noscript></nav></div></div>



    </main>

    

      <script type="text/javascript">
//<![CDATA[

    !function(){var analytics=window.analytics=window.analytics||[];if(!analytics.initialize)if(analytics.invoked)window.console&&console.error&&console.error("Segment snippet included twice.");else{analytics.invoked=!0;analytics.methods=["trackSubmit","trackClick","trackLink","trackForm","pageview","identify","group","track","ready","alias","page","once","off","on"];analytics.factory=function(t){return function(){var e=Array.prototype.slice.call(arguments);e.unshift(t);analytics.push(e);return analytics}};for(var t=0;t<analytics.methods.length;t++){var e=analytics.methods[t];analytics[e]=analytics.factory(e)}analytics.load=function(t){var e=document.createElement("script");e.type="text/javascript";e.async=!0;e.src=("https:"===document.location.protocol?"https://":"http://")+"cdn.segment.com/analytics.js/v1/"+t+"/analytics.min.js";var n=document.getElementsByTagName("script")[0];n.parentNode.insertBefore(e,n)};analytics.SNIPPET_VERSION="3.0.1";
      analytics.load("awTEDiBEJ130cCHG1N74clKHGM3FLNzQ");
      analytics.page();
        analytics.identify('538a9f95282ae37171001cd4', {"created_at":"2014-05-31 23:35:49 -0400","id":"538a9f95282ae37171001cd4","anonymous_user":"false","anonymous_user_id":"538a9e4f282ae3f4ed0018c7","teacher":"false","student":"false","admin":"false","advisor":"false","pro":"true","pro_signup_cohort":"01_18_2016","exp_hints_2015_12_18":"control","name":"Leonardo Javier Achear","email":"leoachear@gmail.com","firstName":"Leonardo","lastName":"Javier Achear","birthday":"{\"month\"=\u003E\"10\", \"day\"=\u003E\"23\", \"year\"=\u003E\"1981\"}","website":"http://","avatar":"https://www.gravatar.com/avatar/1f54a760bf0748f6b0de3806087b8a23?s=140\u0026d=retro","username":"leoachear","updated_at":"2016-01-27 09:38:17 -0500","last_activity_at":"2016-01-27 14:59:02 +0000","location":"Argentina","timezone_offset":"180","num_points":"198","num_exercises":"198","num_achievements":"33","deleted":"false","path":"Full Stack","unsubscribed":"false","verified_email":"false","suspicious_email":"false","geo_continent":"South America","geo_country":"AR","geo_city":"Buenos Aires","geo_postal":"1871","geo_region":"C","galvanize_student":"false","advisor_report":"https://www.codecademy.com/advisor/reports/538a9f95282ae37171001cd4","utm_source":"codecademy_platform","utm_medium":"internal_ad_syllabus_quiz","utm_term":"","utm_campaign":"ad_narrative_testing_nov_2015","utm_content":"wheretostart"});
    }}();

//]]>
</script>



  <script type="text/javascript">
//<![CDATA[

    (function(){var w=window;var ic=w.Intercom;if(typeof ic==="function"){ic('reattach_activator');ic('update',intercomSettings);}else{var d=document;var i=function(){i.c(arguments)};i.q=[];i.c=function(args){i.q.push(args)};w.Intercom=i;function l(){var s=d.createElement('script');s.type='text/javascript';s.async=true;s.src='https://widget.intercom.io/widget/wft4jxth';var x=d.getElementsByTagName('script')[0];x.parentNode.insertBefore(s,x);}if(w.attachEvent){w.attachEvent('onload',l);}else{w.addEventListener('load',l,false);}}})()

    window.Intercom('boot', {
      app_id: 'wft4jxth',
      user_id: '538a9f95282ae37171001cd4'
    });

    window.IntercomUpdate = function(traits) {
      var defaultTraits = { user_id: '538a9f95282ae37171001cd4' };
      for (var attrname in traits) { defaultTraits[attrname] = traits[attrname]; }
      window.Intercom('update', defaultTraits);
    };

    window.IntercomUpdate({"created_at":"2014-05-31 23:35:49 -0400","id":"538a9f95282ae37171001cd4","anonymous_user":"false","anonymous_user_id":"538a9e4f282ae3f4ed0018c7","teacher":"false","student":"false","admin":"false","advisor":"false","pro":"true","pro_signup_cohort":"01_18_2016","exp_hints_2015_12_18":"control","name":"Leonardo Javier Achear","email":"leoachear@gmail.com","firstName":"Leonardo","lastName":"Javier Achear","birthday":"{\"month\"=\u003E\"10\", \"day\"=\u003E\"23\", \"year\"=\u003E\"1981\"}","website":"http://","avatar":"https://www.gravatar.com/avatar/1f54a760bf0748f6b0de3806087b8a23?s=140\u0026d=retro","username":"leoachear","updated_at":"2016-01-27 09:38:17 -0500","last_activity_at":"2016-01-27 14:59:02 +0000","location":"Argentina","timezone_offset":"180","num_points":"198","num_exercises":"198","num_achievements":"33","deleted":"false","path":"Full Stack","unsubscribed":"false","verified_email":"false","suspicious_email":"false","geo_continent":"South America","geo_country":"AR","geo_city":"Buenos Aires","geo_postal":"1871","geo_region":"C","galvanize_student":"false","advisor_report":"https://www.codecademy.com/advisor/reports/538a9f95282ae37171001cd4","utm_source":"codecademy_platform","utm_medium":"internal_ad_syllabus_quiz","utm_term":"","utm_campaign":"ad_narrative_testing_nov_2015","utm_content":"wheretostart"});

//]]>
</script>

  <!-- start Mixpanel -->
  <script type="text/javascript">
    (function(e,b){if(!b.__SV){var a,f,i,g;window.mixpanel=b;b._i=[];b.init=function(a,e,d){function f(b,h){var a=h.split(".");2==a.length&&(b=b[a[0]],h=a[1]);b[h]=function(){b.push([h].concat(Array.prototype.slice.call(arguments,0)))}}var c=b;"undefined"!==typeof d?c=b[d]=[]:d="mixpanel";c.people=c.people||[];c.toString=function(b){var a="mixpanel";"mixpanel"!==d&&(a+="."+d);b||(a+=" (stub)");return a};c.people.toString=function(){return c.toString(1)+".people (stub)"};i="disable track track_pageview track_links track_forms register register_once alias unregister identify name_tag set_config people.set people.set_once people.increment people.append people.track_charge people.clear_charges people.delete_user".split(" ");
    for(g=0;g<i.length;g++)f(c,i[g]);b._i.push([a,e,d])};b.__SV=1.2;a=e.createElement("script");a.type="text/javascript";a.async=!0;a.src=("https:"===e.location.protocol?"https:":"http:")+'//cdn.mxpnl.com/libs/mixpanel-2.2.min.js';f=e.getElementsByTagName("script")[0];f.parentNode.insertBefore(a,f)}})(document,window.mixpanel||[]);
    mixpanel.init("cae5cbbe77db18d216b3995c711c4077");
  </script>
  <!-- end Mixpanel -->



    <div id="fb-root"></div>
<script type="text/javascript">
//<![CDATA[

var FB_APP_ID = '212500508799908';
window.fbAsyncInit = function() {
  var FB = (window.FB || undefined);
  if (FB) {
    FB.init({
      appId      : FB_APP_ID
    , channelUrl : window.root_url+'/channel.html'
    , status     : true
    , cookie     : true
    , xfbml      : true
    , version    : 'v2.2'
    });
  }
};
(function(d){
  var js, id = 'facebook-jssdk', ref = d.getElementsByTagName('script')[0];
  if (d.getElementById(id)) {return;}
  js = d.createElement('script'); js.id = id; js.async = true;
  js.src = "//connect.facebook.net/en_US/sdk.js";
  ref.parentNode.insertBefore(js, ref);
}(document));

//]]>
</script>
<!-- Facebook Pixel Code -->
<script>
  !function(f,b,e,v,n,t,s){if(f.fbq)return;n=f.fbq=function(){n.callMethod?
  n.callMethod.apply(n,arguments):n.queue.push(arguments)};if(!f._fbq)f._fbq=n;
  n.push=n;n.loaded=!0;n.version='2.0';n.queue=[];t=b.createElement(e);t.async=!0;
  t.src=v;s=b.getElementsByTagName(e)[0];s.parentNode.insertBefore(t,s)}(window,
  document,'script','//connect.facebook.net/en_US/fbevents.js');

  fbq('init', '1036078779778355');
  fbq('track', "PageView");</script>
<noscript><img height="1" width="1" style="display:none"
  src="https://www.facebook.com/tr?id=1036078779778355&ev=PageView&noscript=1"
  /></noscript>
<!-- End Facebook Pixel Code -->


        <script src="https://cdn-production.codecademy.com/assets/webpack/clepsydra.bundle-03e864483484ba26b43677dff6cbe91a.js" type="text/javascript"></script>
    <script src="https://cdn-production.codecademy.com/assets/webpack/vendor.bundle-a2bd283615c4a36c2da5133ab7a507c1.js" type="text/javascript"></script>
    <script src="https://cdn-production.codecademy.com/assets/webpack/platform.bundle-dec4552d9628688ad3b10cde52302f6c.js" type="text/javascript"></script>

  </body>
</html>

